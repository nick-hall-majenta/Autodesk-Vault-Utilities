//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3082.
// 
#pragma warning disable 1591

namespace VaultFileRetrieve.Document {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DocumentServiceSoap", Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class DocumentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SecurityHeader securityHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetFolderRootOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderByPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByPathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFoldersByPathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFoldersByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByParentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByParentIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByFileMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersByFileMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderHierarchyUnconditionalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderDeleteRestrictionsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderDeleteRestrictionsByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderUNCPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFolderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockFileByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockFilesByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileLockRestrictionsByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileLockRestrictionsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindLatestFilesByPathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFilesByPathsAndChecksumsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFilesByFoldersNamesAndChecksumsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFilePathsByNameAndChecksumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFilePathsByNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDuplicateFilePathsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFilesByFolderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFilesByFolderIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileByVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesByVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFileByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFilesByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadFilePartOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFilePartOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUploadedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckinFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckinUploadedFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckoutFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UndoCheckoutFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileFromFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFilesFromFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileFromFolderUnconditionalOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFilesFromFolderUnconditionalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDeleteRestrictionsByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDeleteRestrictionsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShareFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileAssociationRestrictionsByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileRenameRestrictionsByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileRenameRestrictionsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFilesBySearchConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOMByFileIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOMByFileIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropertyDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropertyDefinitionsExtendedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPropertyDefinitionDisplayNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPropertyDefinitionsDisplayNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindFileFoldersBySearchConditionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPropertyGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPropertyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePropertyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePropertyGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePropertyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePropertyGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback VoidPropertyDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnvoidPropertyDefinitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisablePropertyDefinitionsForBasicSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnablePropertyDefinitionsForBasicSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLabelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindLabelByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindLabelsByNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileFoldersByLabelIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderMoveRestrictionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderRenameRestrictionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUniqueFileNameRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUniqueFileNameRequiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnableDWFAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEnableDWFAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDWFPublishFolderLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDWFPublishFolderLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDWFPublishPreserveFolderHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDWFPublishPreserveFolderHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnforceWorkingFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEnforceWorkingFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequiredWorkingFolderLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRequiredWorkingFolderLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkspaceSyncFileLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWorkspaceSyncFileLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBreakDesignVisualizationLinkCommandListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBreakDesignVisualizationLinkCommandListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlockExplorerDesignFileCheckinOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetBlockExplorerDesignFileCheckinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileAssociationsByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestFileAssociationsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatedFilePathsByIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestAssociatedFilePathsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateBOMByFileIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComponentPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddComponentCustomPropertyDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteComponentCustomPropertyDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileVersionsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrackFileStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTrackFileStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilterConfigXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileVersionsUnconditionalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFileStatusByMasterIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetFileStatusByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileStatusSetRestrictionsByMasterIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileNamingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileNamingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileNamingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDefaultFileNamingSchemeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFileNamingSchemesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReserveFileNamingDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RollbackFileNamingDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBasicSearchPropertyDefinitionIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDesignVisualizationFileAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDesignVisualizationAttachmentStatusByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DocumentService() {
            this.Url = "http://localhost/AutodeskDM/Services/DocumentService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SecurityHeader SecurityHeaderValue {
            get {
                return this.securityHeaderValueField;
            }
            set {
                this.securityHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFolderRootCompletedEventHandler GetFolderRootCompleted;
        
        /// <remarks/>
        public event GetFolderByPathCompletedEventHandler GetFolderByPathCompleted;
        
        /// <remarks/>
        public event GetFoldersByPathsCompletedEventHandler GetFoldersByPathsCompleted;
        
        /// <remarks/>
        public event FindFoldersByPathsCompletedEventHandler FindFoldersByPathsCompleted;
        
        /// <remarks/>
        public event GetFolderByIdCompletedEventHandler GetFolderByIdCompleted;
        
        /// <remarks/>
        public event GetFoldersByIdsCompletedEventHandler GetFoldersByIdsCompleted;
        
        /// <remarks/>
        public event FindFoldersByIdsCompletedEventHandler FindFoldersByIdsCompleted;
        
        /// <remarks/>
        public event GetFoldersByParentIdCompletedEventHandler GetFoldersByParentIdCompleted;
        
        /// <remarks/>
        public event GetFoldersByParentIdsCompletedEventHandler GetFoldersByParentIdsCompleted;
        
        /// <remarks/>
        public event GetFoldersByFileMasterIdCompletedEventHandler GetFoldersByFileMasterIdCompleted;
        
        /// <remarks/>
        public event GetFoldersByFileMasterIdsCompletedEventHandler GetFoldersByFileMasterIdsCompleted;
        
        /// <remarks/>
        public event AddFolderCompletedEventHandler AddFolderCompleted;
        
        /// <remarks/>
        public event DeleteFolderHierarchyCompletedEventHandler DeleteFolderHierarchyCompleted;
        
        /// <remarks/>
        public event DeleteFolderHierarchyUnconditionalCompletedEventHandler DeleteFolderHierarchyUnconditionalCompleted;
        
        /// <remarks/>
        public event GetFolderDeleteRestrictionsByIdCompletedEventHandler GetFolderDeleteRestrictionsByIdCompleted;
        
        /// <remarks/>
        public event GetFolderDeleteRestrictionsByIdsCompletedEventHandler GetFolderDeleteRestrictionsByIdsCompleted;
        
        /// <remarks/>
        public event UpdateFolderUNCPathCompletedEventHandler UpdateFolderUNCPathCompleted;
        
        /// <remarks/>
        public event UpdateFolderNameCompletedEventHandler UpdateFolderNameCompleted;
        
        /// <remarks/>
        public event GetFileByIdCompletedEventHandler GetFileByIdCompleted;
        
        /// <remarks/>
        public event GetFilesByIdsCompletedEventHandler GetFilesByIdsCompleted;
        
        /// <remarks/>
        public event LockFileByMasterIdCompletedEventHandler LockFileByMasterIdCompleted;
        
        /// <remarks/>
        public event LockFilesByMasterIdsCompletedEventHandler LockFilesByMasterIdsCompleted;
        
        /// <remarks/>
        public event GetFileLockRestrictionsByMasterIdCompletedEventHandler GetFileLockRestrictionsByMasterIdCompleted;
        
        /// <remarks/>
        public event GetFileLockRestrictionsByMasterIdsCompletedEventHandler GetFileLockRestrictionsByMasterIdsCompleted;
        
        /// <remarks/>
        public event FindLatestFilesByPathsCompletedEventHandler FindLatestFilesByPathsCompleted;
        
        /// <remarks/>
        public event FindFilesByPathsAndChecksumsCompletedEventHandler FindFilesByPathsAndChecksumsCompleted;
        
        /// <remarks/>
        public event FindFilesByFoldersNamesAndChecksumsCompletedEventHandler FindFilesByFoldersNamesAndChecksumsCompleted;
        
        /// <remarks/>
        public event FindFilePathsByNameAndChecksumCompletedEventHandler FindFilePathsByNameAndChecksumCompleted;
        
        /// <remarks/>
        public event GetLatestFilePathsByNamesCompletedEventHandler GetLatestFilePathsByNamesCompleted;
        
        /// <remarks/>
        public event GetLatestDuplicateFilePathsCompletedEventHandler GetLatestDuplicateFilePathsCompleted;
        
        /// <remarks/>
        public event GetLatestFilesByFolderIdCompletedEventHandler GetLatestFilesByFolderIdCompleted;
        
        /// <remarks/>
        public event GetLatestFilesByFolderIdsCompletedEventHandler GetLatestFilesByFolderIdsCompleted;
        
        /// <remarks/>
        public event GetFilesByMasterIdCompletedEventHandler GetFilesByMasterIdCompleted;
        
        /// <remarks/>
        public event GetFilesByMasterIdsCompletedEventHandler GetFilesByMasterIdsCompleted;
        
        /// <remarks/>
        public event GetFileByVersionCompletedEventHandler GetFileByVersionCompleted;
        
        /// <remarks/>
        public event GetFilesByVersionsCompletedEventHandler GetFilesByVersionsCompleted;
        
        /// <remarks/>
        public event GetLatestFileByMasterIdCompletedEventHandler GetLatestFileByMasterIdCompleted;
        
        /// <remarks/>
        public event GetLatestFilesByMasterIdsCompletedEventHandler GetLatestFilesByMasterIdsCompleted;
        
        /// <remarks/>
        public event DownloadFileCompletedEventHandler DownloadFileCompleted;
        
        /// <remarks/>
        public event DownloadFilePartCompletedEventHandler DownloadFilePartCompleted;
        
        /// <remarks/>
        public event UploadFilePartCompletedEventHandler UploadFilePartCompleted;
        
        /// <remarks/>
        public event AddFileCompletedEventHandler AddFileCompleted;
        
        /// <remarks/>
        public event AddUploadedFileCompletedEventHandler AddUploadedFileCompleted;
        
        /// <remarks/>
        public event CheckinFileCompletedEventHandler CheckinFileCompleted;
        
        /// <remarks/>
        public event CheckinUploadedFileCompletedEventHandler CheckinUploadedFileCompleted;
        
        /// <remarks/>
        public event CheckoutFileCompletedEventHandler CheckoutFileCompleted;
        
        /// <remarks/>
        public event UndoCheckoutFileCompletedEventHandler UndoCheckoutFileCompleted;
        
        /// <remarks/>
        public event DeleteFileFromFolderCompletedEventHandler DeleteFileFromFolderCompleted;
        
        /// <remarks/>
        public event DeleteFilesFromFolderCompletedEventHandler DeleteFilesFromFolderCompleted;
        
        /// <remarks/>
        public event DeleteFileFromFolderUnconditionalCompletedEventHandler DeleteFileFromFolderUnconditionalCompleted;
        
        /// <remarks/>
        public event DeleteFilesFromFolderUnconditionalCompletedEventHandler DeleteFilesFromFolderUnconditionalCompleted;
        
        /// <remarks/>
        public event GetFileDeleteRestrictionsByMasterIdCompletedEventHandler GetFileDeleteRestrictionsByMasterIdCompleted;
        
        /// <remarks/>
        public event GetFileDeleteRestrictionsByMasterIdsCompletedEventHandler GetFileDeleteRestrictionsByMasterIdsCompleted;
        
        /// <remarks/>
        public event ShareFileCompletedEventHandler ShareFileCompleted;
        
        /// <remarks/>
        public event MoveFileCompletedEventHandler MoveFileCompleted;
        
        /// <remarks/>
        public event GetFileAssociationRestrictionsByIdCompletedEventHandler GetFileAssociationRestrictionsByIdCompleted;
        
        /// <remarks/>
        public event GetFileRenameRestrictionsByMasterIdCompletedEventHandler GetFileRenameRestrictionsByMasterIdCompleted;
        
        /// <remarks/>
        public event GetFileRenameRestrictionsByMasterIdsCompletedEventHandler GetFileRenameRestrictionsByMasterIdsCompleted;
        
        /// <remarks/>
        public event FindFilesBySearchConditionsCompletedEventHandler FindFilesBySearchConditionsCompleted;
        
        /// <remarks/>
        public event GetBOMByFileIdCompletedEventHandler GetBOMByFileIdCompleted;
        
        /// <remarks/>
        public event GetBOMByFileIdsCompletedEventHandler GetBOMByFileIdsCompleted;
        
        /// <remarks/>
        public event GetAllPropertyDefinitionsCompletedEventHandler GetAllPropertyDefinitionsCompleted;
        
        /// <remarks/>
        public event GetAllPropertyDefinitionsExtendedCompletedEventHandler GetAllPropertyDefinitionsExtendedCompleted;
        
        /// <remarks/>
        public event FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventHandler FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompleted;
        
        /// <remarks/>
        public event SetPropertyDefinitionDisplayNameCompletedEventHandler SetPropertyDefinitionDisplayNameCompleted;
        
        /// <remarks/>
        public event SetPropertyDefinitionsDisplayNamesCompletedEventHandler SetPropertyDefinitionsDisplayNamesCompleted;
        
        /// <remarks/>
        public event GetPropertiesCompletedEventHandler GetPropertiesCompleted;
        
        /// <remarks/>
        public event FindFileFoldersBySearchConditionsCompletedEventHandler FindFileFoldersBySearchConditionsCompleted;
        
        /// <remarks/>
        public event GetAllPropertyGroupsCompletedEventHandler GetAllPropertyGroupsCompleted;
        
        /// <remarks/>
        public event AddPropertyGroupCompletedEventHandler AddPropertyGroupCompleted;
        
        /// <remarks/>
        public event UpdatePropertyGroupCompletedEventHandler UpdatePropertyGroupCompleted;
        
        /// <remarks/>
        public event UpdatePropertyGroupsCompletedEventHandler UpdatePropertyGroupsCompleted;
        
        /// <remarks/>
        public event DeletePropertyGroupCompletedEventHandler DeletePropertyGroupCompleted;
        
        /// <remarks/>
        public event DeletePropertyGroupsCompletedEventHandler DeletePropertyGroupsCompleted;
        
        /// <remarks/>
        public event VoidPropertyDefinitionsCompletedEventHandler VoidPropertyDefinitionsCompleted;
        
        /// <remarks/>
        public event UnvoidPropertyDefinitionsCompletedEventHandler UnvoidPropertyDefinitionsCompleted;
        
        /// <remarks/>
        public event DisablePropertyDefinitionsForBasicSearchCompletedEventHandler DisablePropertyDefinitionsForBasicSearchCompleted;
        
        /// <remarks/>
        public event EnablePropertyDefinitionsForBasicSearchCompletedEventHandler EnablePropertyDefinitionsForBasicSearchCompleted;
        
        /// <remarks/>
        public event GetAllLabelsCompletedEventHandler GetAllLabelsCompleted;
        
        /// <remarks/>
        public event FindLabelByNameCompletedEventHandler FindLabelByNameCompleted;
        
        /// <remarks/>
        public event FindLabelsByNamesCompletedEventHandler FindLabelsByNamesCompleted;
        
        /// <remarks/>
        public event AddLabelCompletedEventHandler AddLabelCompleted;
        
        /// <remarks/>
        public event DeleteLabelCompletedEventHandler DeleteLabelCompleted;
        
        /// <remarks/>
        public event UpdateLabelCompletedEventHandler UpdateLabelCompleted;
        
        /// <remarks/>
        public event GetFileFoldersByLabelIdCompletedEventHandler GetFileFoldersByLabelIdCompleted;
        
        /// <remarks/>
        public event MoveFolderCompletedEventHandler MoveFolderCompleted;
        
        /// <remarks/>
        public event GetFolderMoveRestrictionsCompletedEventHandler GetFolderMoveRestrictionsCompleted;
        
        /// <remarks/>
        public event GetFolderRenameRestrictionsCompletedEventHandler GetFolderRenameRestrictionsCompleted;
        
        /// <remarks/>
        public event GetUniqueFileNameRequiredCompletedEventHandler GetUniqueFileNameRequiredCompleted;
        
        /// <remarks/>
        public event SetUniqueFileNameRequiredCompletedEventHandler SetUniqueFileNameRequiredCompleted;
        
        /// <remarks/>
        public event GetEnableDWFAttachmentCompletedEventHandler GetEnableDWFAttachmentCompleted;
        
        /// <remarks/>
        public event SetEnableDWFAttachmentCompletedEventHandler SetEnableDWFAttachmentCompleted;
        
        /// <remarks/>
        public event GetDWFPublishFolderLocationCompletedEventHandler GetDWFPublishFolderLocationCompleted;
        
        /// <remarks/>
        public event SetDWFPublishFolderLocationCompletedEventHandler SetDWFPublishFolderLocationCompleted;
        
        /// <remarks/>
        public event GetDWFPublishPreserveFolderHierarchyCompletedEventHandler GetDWFPublishPreserveFolderHierarchyCompleted;
        
        /// <remarks/>
        public event SetDWFPublishPreserveFolderHierarchyCompletedEventHandler SetDWFPublishPreserveFolderHierarchyCompleted;
        
        /// <remarks/>
        public event GetEnforceWorkingFolderCompletedEventHandler GetEnforceWorkingFolderCompleted;
        
        /// <remarks/>
        public event SetEnforceWorkingFolderCompletedEventHandler SetEnforceWorkingFolderCompleted;
        
        /// <remarks/>
        public event GetRequiredWorkingFolderLocationCompletedEventHandler GetRequiredWorkingFolderLocationCompleted;
        
        /// <remarks/>
        public event SetRequiredWorkingFolderLocationCompletedEventHandler SetRequiredWorkingFolderLocationCompleted;
        
        /// <remarks/>
        public event GetWorkspaceSyncFileLimitCompletedEventHandler GetWorkspaceSyncFileLimitCompleted;
        
        /// <remarks/>
        public event SetWorkspaceSyncFileLimitCompletedEventHandler SetWorkspaceSyncFileLimitCompleted;
        
        /// <remarks/>
        public event GetBreakDesignVisualizationLinkCommandListCompletedEventHandler GetBreakDesignVisualizationLinkCommandListCompleted;
        
        /// <remarks/>
        public event SetBreakDesignVisualizationLinkCommandListCompletedEventHandler SetBreakDesignVisualizationLinkCommandListCompleted;
        
        /// <remarks/>
        public event GetBlockExplorerDesignFileCheckinCompletedEventHandler GetBlockExplorerDesignFileCheckinCompleted;
        
        /// <remarks/>
        public event SetBlockExplorerDesignFileCheckinCompletedEventHandler SetBlockExplorerDesignFileCheckinCompleted;
        
        /// <remarks/>
        public event GetFileAssociationsByIdsCompletedEventHandler GetFileAssociationsByIdsCompleted;
        
        /// <remarks/>
        public event GetLatestFileAssociationsByMasterIdsCompletedEventHandler GetLatestFileAssociationsByMasterIdsCompleted;
        
        /// <remarks/>
        public event GetAssociatedFilePathsByIdsCompletedEventHandler GetAssociatedFilePathsByIdsCompleted;
        
        /// <remarks/>
        public event GetLatestAssociatedFilePathsByMasterIdsCompletedEventHandler GetLatestAssociatedFilePathsByMasterIdsCompleted;
        
        /// <remarks/>
        public event ValidateBOMByFileIdCompletedEventHandler ValidateBOMByFileIdCompleted;
        
        /// <remarks/>
        public event GetComponentPropertiesCompletedEventHandler GetComponentPropertiesCompleted;
        
        /// <remarks/>
        public event AddComponentCustomPropertyDefinitionCompletedEventHandler AddComponentCustomPropertyDefinitionCompleted;
        
        /// <remarks/>
        public event DeleteComponentCustomPropertyDefinitionCompletedEventHandler DeleteComponentCustomPropertyDefinitionCompleted;
        
        /// <remarks/>
        public event GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventHandler GetFileVersionDeleteRestrictionsByMasterIdsCompleted;
        
        /// <remarks/>
        public event DeleteFileVersionsByMasterIdsCompletedEventHandler DeleteFileVersionsByMasterIdsCompleted;
        
        /// <remarks/>
        public event DeleteFileVersionsByMasterIdsUnconditionalCompletedEventHandler DeleteFileVersionsByMasterIdsUnconditionalCompleted;
        
        /// <remarks/>
        public event GetTrackFileStatusCompletedEventHandler GetTrackFileStatusCompleted;
        
        /// <remarks/>
        public event SetTrackFileStatusCompletedEventHandler SetTrackFileStatusCompleted;
        
        /// <remarks/>
        public event GetFilterConfigXmlCompletedEventHandler GetFilterConfigXmlCompleted;
        
        /// <remarks/>
        public event DeleteFileVersionsCompletedEventHandler DeleteFileVersionsCompleted;
        
        /// <remarks/>
        public event DeleteFileVersionsUnconditionalCompletedEventHandler DeleteFileVersionsUnconditionalCompleted;
        
        /// <remarks/>
        public event SetFileStatusByMasterIdCompletedEventHandler SetFileStatusByMasterIdCompleted;
        
        /// <remarks/>
        public event SetFileStatusByMasterIdsCompletedEventHandler SetFileStatusByMasterIdsCompleted;
        
        /// <remarks/>
        public event GetFileStatusSetRestrictionsByMasterIdsCompletedEventHandler GetFileStatusSetRestrictionsByMasterIdsCompleted;
        
        /// <remarks/>
        public event GetFileVersionDeleteRestrictionsByFileIdsCompletedEventHandler GetFileVersionDeleteRestrictionsByFileIdsCompleted;
        
        /// <remarks/>
        public event AddFileNamingSchemeCompletedEventHandler AddFileNamingSchemeCompleted;
        
        /// <remarks/>
        public event UpdateFileNamingSchemeCompletedEventHandler UpdateFileNamingSchemeCompleted;
        
        /// <remarks/>
        public event DeleteFileNamingSchemeCompletedEventHandler DeleteFileNamingSchemeCompleted;
        
        /// <remarks/>
        public event SetDefaultFileNamingSchemeCompletedEventHandler SetDefaultFileNamingSchemeCompleted;
        
        /// <remarks/>
        public event GetAllFileNamingSchemesCompletedEventHandler GetAllFileNamingSchemesCompleted;
        
        /// <remarks/>
        public event ReserveFileNamingDescriptionsCompletedEventHandler ReserveFileNamingDescriptionsCompleted;
        
        /// <remarks/>
        public event RollbackFileNamingDescriptionsCompletedEventHandler RollbackFileNamingDescriptionsCompleted;
        
        /// <remarks/>
        public event GetAllBasicSearchPropertyDefinitionIdsCompletedEventHandler GetAllBasicSearchPropertyDefinitionIdsCompleted;
        
        /// <remarks/>
        public event AddDesignVisualizationFileAttachmentCompletedEventHandler AddDesignVisualizationFileAttachmentCompleted;
        
        /// <remarks/>
        public event SetDesignVisualizationAttachmentStatusByIdCompletedEventHandler SetDesignVisualizationAttachmentStatusByIdCompleted;
        
        /// <remarks/>
        public event GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventHandler GetDesignVisualizationAttachmentsByFileMasterIdsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderRoot", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder GetFolderRoot() {
            object[] results = this.Invoke("GetFolderRoot", new object[0]);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderRoot(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderRoot", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndGetFolderRoot(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderRootAsync() {
            this.GetFolderRootAsync(null);
        }
        
        /// <remarks/>
        public void GetFolderRootAsync(object userState) {
            if ((this.GetFolderRootOperationCompleted == null)) {
                this.GetFolderRootOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderRootOperationCompleted);
            }
            this.InvokeAsync("GetFolderRoot", new object[0], this.GetFolderRootOperationCompleted, userState);
        }
        
        private void OnGetFolderRootOperationCompleted(object arg) {
            if ((this.GetFolderRootCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderRootCompleted(this, new GetFolderRootCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderByPath", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder GetFolderByPath(string path) {
            object[] results = this.Invoke("GetFolderByPath", new object[] {
                        path});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderByPath(string path, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderByPath", new object[] {
                        path}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndGetFolderByPath(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderByPathAsync(string path) {
            this.GetFolderByPathAsync(path, null);
        }
        
        /// <remarks/>
        public void GetFolderByPathAsync(string path, object userState) {
            if ((this.GetFolderByPathOperationCompleted == null)) {
                this.GetFolderByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderByPathOperationCompleted);
            }
            this.InvokeAsync("GetFolderByPath", new object[] {
                        path}, this.GetFolderByPathOperationCompleted, userState);
        }
        
        private void OnGetFolderByPathOperationCompleted(object arg) {
            if ((this.GetFolderByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderByPathCompleted(this, new GetFolderByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFoldersByPaths", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] GetFoldersByPaths(string[] paths) {
            object[] results = this.Invoke("GetFoldersByPaths", new object[] {
                        paths});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoldersByPaths(string[] paths, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoldersByPaths", new object[] {
                        paths}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndGetFoldersByPaths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByPathsAsync(string[] paths) {
            this.GetFoldersByPathsAsync(paths, null);
        }
        
        /// <remarks/>
        public void GetFoldersByPathsAsync(string[] paths, object userState) {
            if ((this.GetFoldersByPathsOperationCompleted == null)) {
                this.GetFoldersByPathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByPathsOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByPaths", new object[] {
                        paths}, this.GetFoldersByPathsOperationCompleted, userState);
        }
        
        private void OnGetFoldersByPathsOperationCompleted(object arg) {
            if ((this.GetFoldersByPathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByPathsCompleted(this, new GetFoldersByPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFoldersByPaths", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] FindFoldersByPaths(string[] paths) {
            object[] results = this.Invoke("FindFoldersByPaths", new object[] {
                        paths});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFoldersByPaths(string[] paths, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFoldersByPaths", new object[] {
                        paths}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndFindFoldersByPaths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFoldersByPathsAsync(string[] paths) {
            this.FindFoldersByPathsAsync(paths, null);
        }
        
        /// <remarks/>
        public void FindFoldersByPathsAsync(string[] paths, object userState) {
            if ((this.FindFoldersByPathsOperationCompleted == null)) {
                this.FindFoldersByPathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFoldersByPathsOperationCompleted);
            }
            this.InvokeAsync("FindFoldersByPaths", new object[] {
                        paths}, this.FindFoldersByPathsOperationCompleted, userState);
        }
        
        private void OnFindFoldersByPathsOperationCompleted(object arg) {
            if ((this.FindFoldersByPathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFoldersByPathsCompleted(this, new FindFoldersByPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderById", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder GetFolderById(long folderId) {
            object[] results = this.Invoke("GetFolderById", new object[] {
                        folderId});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderById(long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderById", new object[] {
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndGetFolderById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderByIdAsync(long folderId) {
            this.GetFolderByIdAsync(folderId, null);
        }
        
        /// <remarks/>
        public void GetFolderByIdAsync(long folderId, object userState) {
            if ((this.GetFolderByIdOperationCompleted == null)) {
                this.GetFolderByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderByIdOperationCompleted);
            }
            this.InvokeAsync("GetFolderById", new object[] {
                        folderId}, this.GetFolderByIdOperationCompleted, userState);
        }
        
        private void OnGetFolderByIdOperationCompleted(object arg) {
            if ((this.GetFolderByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderByIdCompleted(this, new GetFolderByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFoldersByIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] GetFoldersByIds(long[] folderIds) {
            object[] results = this.Invoke("GetFoldersByIds", new object[] {
                        folderIds});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoldersByIds(long[] folderIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoldersByIds", new object[] {
                        folderIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndGetFoldersByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByIdsAsync(long[] folderIds) {
            this.GetFoldersByIdsAsync(folderIds, null);
        }
        
        /// <remarks/>
        public void GetFoldersByIdsAsync(long[] folderIds, object userState) {
            if ((this.GetFoldersByIdsOperationCompleted == null)) {
                this.GetFoldersByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByIdsOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByIds", new object[] {
                        folderIds}, this.GetFoldersByIdsOperationCompleted, userState);
        }
        
        private void OnGetFoldersByIdsOperationCompleted(object arg) {
            if ((this.GetFoldersByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByIdsCompleted(this, new GetFoldersByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFoldersByIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] FindFoldersByIds(long[] folderIds) {
            object[] results = this.Invoke("FindFoldersByIds", new object[] {
                        folderIds});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFoldersByIds(long[] folderIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFoldersByIds", new object[] {
                        folderIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndFindFoldersByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFoldersByIdsAsync(long[] folderIds) {
            this.FindFoldersByIdsAsync(folderIds, null);
        }
        
        /// <remarks/>
        public void FindFoldersByIdsAsync(long[] folderIds, object userState) {
            if ((this.FindFoldersByIdsOperationCompleted == null)) {
                this.FindFoldersByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFoldersByIdsOperationCompleted);
            }
            this.InvokeAsync("FindFoldersByIds", new object[] {
                        folderIds}, this.FindFoldersByIdsOperationCompleted, userState);
        }
        
        private void OnFindFoldersByIdsOperationCompleted(object arg) {
            if ((this.FindFoldersByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFoldersByIdsCompleted(this, new FindFoldersByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFoldersByParentId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] GetFoldersByParentId(long parentFolderId, bool recurse) {
            object[] results = this.Invoke("GetFoldersByParentId", new object[] {
                        parentFolderId,
                        recurse});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoldersByParentId(long parentFolderId, bool recurse, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoldersByParentId", new object[] {
                        parentFolderId,
                        recurse}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndGetFoldersByParentId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByParentIdAsync(long parentFolderId, bool recurse) {
            this.GetFoldersByParentIdAsync(parentFolderId, recurse, null);
        }
        
        /// <remarks/>
        public void GetFoldersByParentIdAsync(long parentFolderId, bool recurse, object userState) {
            if ((this.GetFoldersByParentIdOperationCompleted == null)) {
                this.GetFoldersByParentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByParentIdOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByParentId", new object[] {
                        parentFolderId,
                        recurse}, this.GetFoldersByParentIdOperationCompleted, userState);
        }
        
        private void OnGetFoldersByParentIdOperationCompleted(object arg) {
            if ((this.GetFoldersByParentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByParentIdCompleted(this, new GetFoldersByParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFoldersByParentIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderArray[] GetFoldersByParentIds(long[] parentFolderIds, bool recurse) {
            object[] results = this.Invoke("GetFoldersByParentIds", new object[] {
                        parentFolderIds,
                        recurse});
            return ((FolderArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoldersByParentIds(long[] parentFolderIds, bool recurse, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoldersByParentIds", new object[] {
                        parentFolderIds,
                        recurse}, callback, asyncState);
        }
        
        /// <remarks/>
        public FolderArray[] EndGetFoldersByParentIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FolderArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByParentIdsAsync(long[] parentFolderIds, bool recurse) {
            this.GetFoldersByParentIdsAsync(parentFolderIds, recurse, null);
        }
        
        /// <remarks/>
        public void GetFoldersByParentIdsAsync(long[] parentFolderIds, bool recurse, object userState) {
            if ((this.GetFoldersByParentIdsOperationCompleted == null)) {
                this.GetFoldersByParentIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByParentIdsOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByParentIds", new object[] {
                        parentFolderIds,
                        recurse}, this.GetFoldersByParentIdsOperationCompleted, userState);
        }
        
        private void OnGetFoldersByParentIdsOperationCompleted(object arg) {
            if ((this.GetFoldersByParentIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByParentIdsCompleted(this, new GetFoldersByParentIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFoldersByFileMasterId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder[] GetFoldersByFileMasterId(long fileMasterId) {
            object[] results = this.Invoke("GetFoldersByFileMasterId", new object[] {
                        fileMasterId});
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoldersByFileMasterId(long fileMasterId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoldersByFileMasterId", new object[] {
                        fileMasterId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder[] EndGetFoldersByFileMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByFileMasterIdAsync(long fileMasterId) {
            this.GetFoldersByFileMasterIdAsync(fileMasterId, null);
        }
        
        /// <remarks/>
        public void GetFoldersByFileMasterIdAsync(long fileMasterId, object userState) {
            if ((this.GetFoldersByFileMasterIdOperationCompleted == null)) {
                this.GetFoldersByFileMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByFileMasterIdOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByFileMasterId", new object[] {
                        fileMasterId}, this.GetFoldersByFileMasterIdOperationCompleted, userState);
        }
        
        private void OnGetFoldersByFileMasterIdOperationCompleted(object arg) {
            if ((this.GetFoldersByFileMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByFileMasterIdCompleted(this, new GetFoldersByFileMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFoldersByFileMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderArray[] GetFoldersByFileMasterIds(long[] fileMasterIds) {
            object[] results = this.Invoke("GetFoldersByFileMasterIds", new object[] {
                        fileMasterIds});
            return ((FolderArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFoldersByFileMasterIds(long[] fileMasterIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFoldersByFileMasterIds", new object[] {
                        fileMasterIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FolderArray[] EndGetFoldersByFileMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FolderArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersByFileMasterIdsAsync(long[] fileMasterIds) {
            this.GetFoldersByFileMasterIdsAsync(fileMasterIds, null);
        }
        
        /// <remarks/>
        public void GetFoldersByFileMasterIdsAsync(long[] fileMasterIds, object userState) {
            if ((this.GetFoldersByFileMasterIdsOperationCompleted == null)) {
                this.GetFoldersByFileMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersByFileMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFoldersByFileMasterIds", new object[] {
                        fileMasterIds}, this.GetFoldersByFileMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFoldersByFileMasterIdsOperationCompleted(object arg) {
            if ((this.GetFoldersByFileMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersByFileMasterIdsCompleted(this, new GetFoldersByFileMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddFolder", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder AddFolder(string name, long parentId, bool isLibrary) {
            object[] results = this.Invoke("AddFolder", new object[] {
                        name,
                        parentId,
                        isLibrary});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddFolder(string name, long parentId, bool isLibrary, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddFolder", new object[] {
                        name,
                        parentId,
                        isLibrary}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndAddFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void AddFolderAsync(string name, long parentId, bool isLibrary) {
            this.AddFolderAsync(name, parentId, isLibrary, null);
        }
        
        /// <remarks/>
        public void AddFolderAsync(string name, long parentId, bool isLibrary, object userState) {
            if ((this.AddFolderOperationCompleted == null)) {
                this.AddFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFolderOperationCompleted);
            }
            this.InvokeAsync("AddFolder", new object[] {
                        name,
                        parentId,
                        isLibrary}, this.AddFolderOperationCompleted, userState);
        }
        
        private void OnAddFolderOperationCompleted(object arg) {
            if ((this.AddFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFolderCompleted(this, new AddFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFolderHierarchy", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFolderHierarchy(long folderId) {
            this.Invoke("DeleteFolderHierarchy", new object[] {
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFolderHierarchy(long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFolderHierarchy", new object[] {
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFolderHierarchy(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFolderHierarchyAsync(long folderId) {
            this.DeleteFolderHierarchyAsync(folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFolderHierarchyAsync(long folderId, object userState) {
            if ((this.DeleteFolderHierarchyOperationCompleted == null)) {
                this.DeleteFolderHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderHierarchyOperationCompleted);
            }
            this.InvokeAsync("DeleteFolderHierarchy", new object[] {
                        folderId}, this.DeleteFolderHierarchyOperationCompleted, userState);
        }
        
        private void OnDeleteFolderHierarchyOperationCompleted(object arg) {
            if ((this.DeleteFolderHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderHierarchyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFolderHierarchyUnconditional" +
            "", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFolderHierarchyUnconditional(long folderId) {
            this.Invoke("DeleteFolderHierarchyUnconditional", new object[] {
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFolderHierarchyUnconditional(long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFolderHierarchyUnconditional", new object[] {
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFolderHierarchyUnconditional(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFolderHierarchyUnconditionalAsync(long folderId) {
            this.DeleteFolderHierarchyUnconditionalAsync(folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFolderHierarchyUnconditionalAsync(long folderId, object userState) {
            if ((this.DeleteFolderHierarchyUnconditionalOperationCompleted == null)) {
                this.DeleteFolderHierarchyUnconditionalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderHierarchyUnconditionalOperationCompleted);
            }
            this.InvokeAsync("DeleteFolderHierarchyUnconditional", new object[] {
                        folderId}, this.DeleteFolderHierarchyUnconditionalOperationCompleted, userState);
        }
        
        private void OnDeleteFolderHierarchyUnconditionalOperationCompleted(object arg) {
            if ((this.DeleteFolderHierarchyUnconditionalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderHierarchyUnconditionalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderDeleteRestrictionsById", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderDelRestric[] GetFolderDeleteRestrictionsById(long folderId) {
            object[] results = this.Invoke("GetFolderDeleteRestrictionsById", new object[] {
                        folderId});
            return ((FolderDelRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderDeleteRestrictionsById(long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderDeleteRestrictionsById", new object[] {
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FolderDelRestric[] EndGetFolderDeleteRestrictionsById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FolderDelRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderDeleteRestrictionsByIdAsync(long folderId) {
            this.GetFolderDeleteRestrictionsByIdAsync(folderId, null);
        }
        
        /// <remarks/>
        public void GetFolderDeleteRestrictionsByIdAsync(long folderId, object userState) {
            if ((this.GetFolderDeleteRestrictionsByIdOperationCompleted == null)) {
                this.GetFolderDeleteRestrictionsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderDeleteRestrictionsByIdOperationCompleted);
            }
            this.InvokeAsync("GetFolderDeleteRestrictionsById", new object[] {
                        folderId}, this.GetFolderDeleteRestrictionsByIdOperationCompleted, userState);
        }
        
        private void OnGetFolderDeleteRestrictionsByIdOperationCompleted(object arg) {
            if ((this.GetFolderDeleteRestrictionsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderDeleteRestrictionsByIdCompleted(this, new GetFolderDeleteRestrictionsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderDeleteRestrictionsByIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FolderDelRestricArray[] GetFolderDeleteRestrictionsByIds(long[] folderIds) {
            object[] results = this.Invoke("GetFolderDeleteRestrictionsByIds", new object[] {
                        folderIds});
            return ((FolderDelRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderDeleteRestrictionsByIds(long[] folderIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderDeleteRestrictionsByIds", new object[] {
                        folderIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FolderDelRestricArray[] EndGetFolderDeleteRestrictionsByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FolderDelRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderDeleteRestrictionsByIdsAsync(long[] folderIds) {
            this.GetFolderDeleteRestrictionsByIdsAsync(folderIds, null);
        }
        
        /// <remarks/>
        public void GetFolderDeleteRestrictionsByIdsAsync(long[] folderIds, object userState) {
            if ((this.GetFolderDeleteRestrictionsByIdsOperationCompleted == null)) {
                this.GetFolderDeleteRestrictionsByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderDeleteRestrictionsByIdsOperationCompleted);
            }
            this.InvokeAsync("GetFolderDeleteRestrictionsByIds", new object[] {
                        folderIds}, this.GetFolderDeleteRestrictionsByIdsOperationCompleted, userState);
        }
        
        private void OnGetFolderDeleteRestrictionsByIdsOperationCompleted(object arg) {
            if ((this.GetFolderDeleteRestrictionsByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderDeleteRestrictionsByIdsCompleted(this, new GetFolderDeleteRestrictionsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UpdateFolderUNCPath", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder UpdateFolderUNCPath(long folderId, string uncPath) {
            object[] results = this.Invoke("UpdateFolderUNCPath", new object[] {
                        folderId,
                        uncPath});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFolderUNCPath(long folderId, string uncPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFolderUNCPath", new object[] {
                        folderId,
                        uncPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndUpdateFolderUNCPath(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderUNCPathAsync(long folderId, string uncPath) {
            this.UpdateFolderUNCPathAsync(folderId, uncPath, null);
        }
        
        /// <remarks/>
        public void UpdateFolderUNCPathAsync(long folderId, string uncPath, object userState) {
            if ((this.UpdateFolderUNCPathOperationCompleted == null)) {
                this.UpdateFolderUNCPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderUNCPathOperationCompleted);
            }
            this.InvokeAsync("UpdateFolderUNCPath", new object[] {
                        folderId,
                        uncPath}, this.UpdateFolderUNCPathOperationCompleted, userState);
        }
        
        private void OnUpdateFolderUNCPathOperationCompleted(object arg) {
            if ((this.UpdateFolderUNCPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderUNCPathCompleted(this, new UpdateFolderUNCPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UpdateFolderName", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Folder UpdateFolderName(long folderId, string folderName) {
            object[] results = this.Invoke("UpdateFolderName", new object[] {
                        folderId,
                        folderName});
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFolderName(long folderId, string folderName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFolderName", new object[] {
                        folderId,
                        folderName}, callback, asyncState);
        }
        
        /// <remarks/>
        public Folder EndUpdateFolderName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Folder)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFolderNameAsync(long folderId, string folderName) {
            this.UpdateFolderNameAsync(folderId, folderName, null);
        }
        
        /// <remarks/>
        public void UpdateFolderNameAsync(long folderId, string folderName, object userState) {
            if ((this.UpdateFolderNameOperationCompleted == null)) {
                this.UpdateFolderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFolderNameOperationCompleted);
            }
            this.InvokeAsync("UpdateFolderName", new object[] {
                        folderId,
                        folderName}, this.UpdateFolderNameOperationCompleted, userState);
        }
        
        private void OnUpdateFolderNameOperationCompleted(object arg) {
            if ((this.UpdateFolderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFolderNameCompleted(this, new UpdateFolderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileById", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File GetFileById(long fileId) {
            object[] results = this.Invoke("GetFileById", new object[] {
                        fileId});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileById(long fileId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileById", new object[] {
                        fileId}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndGetFileById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileByIdAsync(long fileId) {
            this.GetFileByIdAsync(fileId, null);
        }
        
        /// <remarks/>
        public void GetFileByIdAsync(long fileId, object userState) {
            if ((this.GetFileByIdOperationCompleted == null)) {
                this.GetFileByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileByIdOperationCompleted);
            }
            this.InvokeAsync("GetFileById", new object[] {
                        fileId}, this.GetFileByIdOperationCompleted, userState);
        }
        
        private void OnGetFileByIdOperationCompleted(object arg) {
            if ((this.GetFileByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileByIdCompleted(this, new GetFileByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFilesByIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] GetFilesByIds(long[] fileIds) {
            object[] results = this.Invoke("GetFilesByIds", new object[] {
                        fileIds});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFilesByIds(long[] fileIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFilesByIds", new object[] {
                        fileIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndGetFilesByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesByIdsAsync(long[] fileIds) {
            this.GetFilesByIdsAsync(fileIds, null);
        }
        
        /// <remarks/>
        public void GetFilesByIdsAsync(long[] fileIds, object userState) {
            if ((this.GetFilesByIdsOperationCompleted == null)) {
                this.GetFilesByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesByIdsOperationCompleted);
            }
            this.InvokeAsync("GetFilesByIds", new object[] {
                        fileIds}, this.GetFilesByIdsOperationCompleted, userState);
        }
        
        private void OnGetFilesByIdsOperationCompleted(object arg) {
            if ((this.GetFilesByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesByIdsCompleted(this, new GetFilesByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/LockFileByMasterId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File LockFileByMasterId(long fileMasterId, bool locked) {
            object[] results = this.Invoke("LockFileByMasterId", new object[] {
                        fileMasterId,
                        locked});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockFileByMasterId(long fileMasterId, bool locked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockFileByMasterId", new object[] {
                        fileMasterId,
                        locked}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndLockFileByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void LockFileByMasterIdAsync(long fileMasterId, bool locked) {
            this.LockFileByMasterIdAsync(fileMasterId, locked, null);
        }
        
        /// <remarks/>
        public void LockFileByMasterIdAsync(long fileMasterId, bool locked, object userState) {
            if ((this.LockFileByMasterIdOperationCompleted == null)) {
                this.LockFileByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockFileByMasterIdOperationCompleted);
            }
            this.InvokeAsync("LockFileByMasterId", new object[] {
                        fileMasterId,
                        locked}, this.LockFileByMasterIdOperationCompleted, userState);
        }
        
        private void OnLockFileByMasterIdOperationCompleted(object arg) {
            if ((this.LockFileByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockFileByMasterIdCompleted(this, new LockFileByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/LockFilesByMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] LockFilesByMasterIds(long[] fileMasterIds, bool locked) {
            object[] results = this.Invoke("LockFilesByMasterIds", new object[] {
                        fileMasterIds,
                        locked});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLockFilesByMasterIds(long[] fileMasterIds, bool locked, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LockFilesByMasterIds", new object[] {
                        fileMasterIds,
                        locked}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndLockFilesByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void LockFilesByMasterIdsAsync(long[] fileMasterIds, bool locked) {
            this.LockFilesByMasterIdsAsync(fileMasterIds, locked, null);
        }
        
        /// <remarks/>
        public void LockFilesByMasterIdsAsync(long[] fileMasterIds, bool locked, object userState) {
            if ((this.LockFilesByMasterIdsOperationCompleted == null)) {
                this.LockFilesByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockFilesByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("LockFilesByMasterIds", new object[] {
                        fileMasterIds,
                        locked}, this.LockFilesByMasterIdsOperationCompleted, userState);
        }
        
        private void OnLockFilesByMasterIdsOperationCompleted(object arg) {
            if ((this.LockFilesByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockFilesByMasterIdsCompleted(this, new LockFilesByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileLockRestrictionsByMasterId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileLockRestric[] GetFileLockRestrictionsByMasterId(long fileMasterId) {
            object[] results = this.Invoke("GetFileLockRestrictionsByMasterId", new object[] {
                        fileMasterId});
            return ((FileLockRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileLockRestrictionsByMasterId(long fileMasterId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileLockRestrictionsByMasterId", new object[] {
                        fileMasterId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileLockRestric[] EndGetFileLockRestrictionsByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileLockRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileLockRestrictionsByMasterIdAsync(long fileMasterId) {
            this.GetFileLockRestrictionsByMasterIdAsync(fileMasterId, null);
        }
        
        /// <remarks/>
        public void GetFileLockRestrictionsByMasterIdAsync(long fileMasterId, object userState) {
            if ((this.GetFileLockRestrictionsByMasterIdOperationCompleted == null)) {
                this.GetFileLockRestrictionsByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileLockRestrictionsByMasterIdOperationCompleted);
            }
            this.InvokeAsync("GetFileLockRestrictionsByMasterId", new object[] {
                        fileMasterId}, this.GetFileLockRestrictionsByMasterIdOperationCompleted, userState);
        }
        
        private void OnGetFileLockRestrictionsByMasterIdOperationCompleted(object arg) {
            if ((this.GetFileLockRestrictionsByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileLockRestrictionsByMasterIdCompleted(this, new GetFileLockRestrictionsByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileLockRestrictionsByMasterIds" +
            "", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileLockRestricArray[] GetFileLockRestrictionsByMasterIds(long[] fileMasterIds) {
            object[] results = this.Invoke("GetFileLockRestrictionsByMasterIds", new object[] {
                        fileMasterIds});
            return ((FileLockRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileLockRestrictionsByMasterIds(long[] fileMasterIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileLockRestrictionsByMasterIds", new object[] {
                        fileMasterIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileLockRestricArray[] EndGetFileLockRestrictionsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileLockRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileLockRestrictionsByMasterIdsAsync(long[] fileMasterIds) {
            this.GetFileLockRestrictionsByMasterIdsAsync(fileMasterIds, null);
        }
        
        /// <remarks/>
        public void GetFileLockRestrictionsByMasterIdsAsync(long[] fileMasterIds, object userState) {
            if ((this.GetFileLockRestrictionsByMasterIdsOperationCompleted == null)) {
                this.GetFileLockRestrictionsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileLockRestrictionsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileLockRestrictionsByMasterIds", new object[] {
                        fileMasterIds}, this.GetFileLockRestrictionsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFileLockRestrictionsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetFileLockRestrictionsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileLockRestrictionsByMasterIdsCompleted(this, new GetFileLockRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindLatestFilesByPaths", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] FindLatestFilesByPaths(string[] filePaths) {
            object[] results = this.Invoke("FindLatestFilesByPaths", new object[] {
                        filePaths});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindLatestFilesByPaths(string[] filePaths, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindLatestFilesByPaths", new object[] {
                        filePaths}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndFindLatestFilesByPaths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void FindLatestFilesByPathsAsync(string[] filePaths) {
            this.FindLatestFilesByPathsAsync(filePaths, null);
        }
        
        /// <remarks/>
        public void FindLatestFilesByPathsAsync(string[] filePaths, object userState) {
            if ((this.FindLatestFilesByPathsOperationCompleted == null)) {
                this.FindLatestFilesByPathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindLatestFilesByPathsOperationCompleted);
            }
            this.InvokeAsync("FindLatestFilesByPaths", new object[] {
                        filePaths}, this.FindLatestFilesByPathsOperationCompleted, userState);
        }
        
        private void OnFindLatestFilesByPathsOperationCompleted(object arg) {
            if ((this.FindLatestFilesByPathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindLatestFilesByPathsCompleted(this, new FindLatestFilesByPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFilesByPathsAndChecksums", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] FindFilesByPathsAndChecksums(string[] filePaths, int[] checksums) {
            object[] results = this.Invoke("FindFilesByPathsAndChecksums", new object[] {
                        filePaths,
                        checksums});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFilesByPathsAndChecksums(string[] filePaths, int[] checksums, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFilesByPathsAndChecksums", new object[] {
                        filePaths,
                        checksums}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndFindFilesByPathsAndChecksums(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFilesByPathsAndChecksumsAsync(string[] filePaths, int[] checksums) {
            this.FindFilesByPathsAndChecksumsAsync(filePaths, checksums, null);
        }
        
        /// <remarks/>
        public void FindFilesByPathsAndChecksumsAsync(string[] filePaths, int[] checksums, object userState) {
            if ((this.FindFilesByPathsAndChecksumsOperationCompleted == null)) {
                this.FindFilesByPathsAndChecksumsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFilesByPathsAndChecksumsOperationCompleted);
            }
            this.InvokeAsync("FindFilesByPathsAndChecksums", new object[] {
                        filePaths,
                        checksums}, this.FindFilesByPathsAndChecksumsOperationCompleted, userState);
        }
        
        private void OnFindFilesByPathsAndChecksumsOperationCompleted(object arg) {
            if ((this.FindFilesByPathsAndChecksumsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFilesByPathsAndChecksumsCompleted(this, new FindFilesByPathsAndChecksumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFilesByFoldersNamesAndChecksum" +
            "s", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] FindFilesByFoldersNamesAndChecksums(long[] folderIds, string[] filenames, int[] checksums) {
            object[] results = this.Invoke("FindFilesByFoldersNamesAndChecksums", new object[] {
                        folderIds,
                        filenames,
                        checksums});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFilesByFoldersNamesAndChecksums(long[] folderIds, string[] filenames, int[] checksums, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFilesByFoldersNamesAndChecksums", new object[] {
                        folderIds,
                        filenames,
                        checksums}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndFindFilesByFoldersNamesAndChecksums(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFilesByFoldersNamesAndChecksumsAsync(long[] folderIds, string[] filenames, int[] checksums) {
            this.FindFilesByFoldersNamesAndChecksumsAsync(folderIds, filenames, checksums, null);
        }
        
        /// <remarks/>
        public void FindFilesByFoldersNamesAndChecksumsAsync(long[] folderIds, string[] filenames, int[] checksums, object userState) {
            if ((this.FindFilesByFoldersNamesAndChecksumsOperationCompleted == null)) {
                this.FindFilesByFoldersNamesAndChecksumsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFilesByFoldersNamesAndChecksumsOperationCompleted);
            }
            this.InvokeAsync("FindFilesByFoldersNamesAndChecksums", new object[] {
                        folderIds,
                        filenames,
                        checksums}, this.FindFilesByFoldersNamesAndChecksumsOperationCompleted, userState);
        }
        
        private void OnFindFilesByFoldersNamesAndChecksumsOperationCompleted(object arg) {
            if ((this.FindFilesByFoldersNamesAndChecksumsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFilesByFoldersNamesAndChecksumsCompleted(this, new FindFilesByFoldersNamesAndChecksumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFilePathsByNameAndChecksum", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilePath[] FindFilePathsByNameAndChecksum(string fileName, int checksum) {
            object[] results = this.Invoke("FindFilePathsByNameAndChecksum", new object[] {
                        fileName,
                        checksum});
            return ((FilePath[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFilePathsByNameAndChecksum(string fileName, int checksum, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFilePathsByNameAndChecksum", new object[] {
                        fileName,
                        checksum}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilePath[] EndFindFilePathsByNameAndChecksum(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilePath[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFilePathsByNameAndChecksumAsync(string fileName, int checksum) {
            this.FindFilePathsByNameAndChecksumAsync(fileName, checksum, null);
        }
        
        /// <remarks/>
        public void FindFilePathsByNameAndChecksumAsync(string fileName, int checksum, object userState) {
            if ((this.FindFilePathsByNameAndChecksumOperationCompleted == null)) {
                this.FindFilePathsByNameAndChecksumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFilePathsByNameAndChecksumOperationCompleted);
            }
            this.InvokeAsync("FindFilePathsByNameAndChecksum", new object[] {
                        fileName,
                        checksum}, this.FindFilePathsByNameAndChecksumOperationCompleted, userState);
        }
        
        private void OnFindFilePathsByNameAndChecksumOperationCompleted(object arg) {
            if ((this.FindFilePathsByNameAndChecksumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFilePathsByNameAndChecksumCompleted(this, new FindFilePathsByNameAndChecksumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestFilePathsByNames", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilePathArray[] GetLatestFilePathsByNames(string[] fileNames) {
            object[] results = this.Invoke("GetLatestFilePathsByNames", new object[] {
                        fileNames});
            return ((FilePathArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFilePathsByNames(string[] fileNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFilePathsByNames", new object[] {
                        fileNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilePathArray[] EndGetLatestFilePathsByNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilePathArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFilePathsByNamesAsync(string[] fileNames) {
            this.GetLatestFilePathsByNamesAsync(fileNames, null);
        }
        
        /// <remarks/>
        public void GetLatestFilePathsByNamesAsync(string[] fileNames, object userState) {
            if ((this.GetLatestFilePathsByNamesOperationCompleted == null)) {
                this.GetLatestFilePathsByNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFilePathsByNamesOperationCompleted);
            }
            this.InvokeAsync("GetLatestFilePathsByNames", new object[] {
                        fileNames}, this.GetLatestFilePathsByNamesOperationCompleted, userState);
        }
        
        private void OnGetLatestFilePathsByNamesOperationCompleted(object arg) {
            if ((this.GetLatestFilePathsByNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFilePathsByNamesCompleted(this, new GetLatestFilePathsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestDuplicateFilePaths", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilePath[] GetLatestDuplicateFilePaths() {
            object[] results = this.Invoke("GetLatestDuplicateFilePaths", new object[0]);
            return ((FilePath[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestDuplicateFilePaths(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestDuplicateFilePaths", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public FilePath[] EndGetLatestDuplicateFilePaths(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilePath[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDuplicateFilePathsAsync() {
            this.GetLatestDuplicateFilePathsAsync(null);
        }
        
        /// <remarks/>
        public void GetLatestDuplicateFilePathsAsync(object userState) {
            if ((this.GetLatestDuplicateFilePathsOperationCompleted == null)) {
                this.GetLatestDuplicateFilePathsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDuplicateFilePathsOperationCompleted);
            }
            this.InvokeAsync("GetLatestDuplicateFilePaths", new object[0], this.GetLatestDuplicateFilePathsOperationCompleted, userState);
        }
        
        private void OnGetLatestDuplicateFilePathsOperationCompleted(object arg) {
            if ((this.GetLatestDuplicateFilePathsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDuplicateFilePathsCompleted(this, new GetLatestDuplicateFilePathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestFilesByFolderId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] GetLatestFilesByFolderId(long folderId, bool includeHidden) {
            object[] results = this.Invoke("GetLatestFilesByFolderId", new object[] {
                        folderId,
                        includeHidden});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFilesByFolderId(long folderId, bool includeHidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFilesByFolderId", new object[] {
                        folderId,
                        includeHidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndGetLatestFilesByFolderId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFilesByFolderIdAsync(long folderId, bool includeHidden) {
            this.GetLatestFilesByFolderIdAsync(folderId, includeHidden, null);
        }
        
        /// <remarks/>
        public void GetLatestFilesByFolderIdAsync(long folderId, bool includeHidden, object userState) {
            if ((this.GetLatestFilesByFolderIdOperationCompleted == null)) {
                this.GetLatestFilesByFolderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFilesByFolderIdOperationCompleted);
            }
            this.InvokeAsync("GetLatestFilesByFolderId", new object[] {
                        folderId,
                        includeHidden}, this.GetLatestFilesByFolderIdOperationCompleted, userState);
        }
        
        private void OnGetLatestFilesByFolderIdOperationCompleted(object arg) {
            if ((this.GetLatestFilesByFolderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFilesByFolderIdCompleted(this, new GetLatestFilesByFolderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestFilesByFolderIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileArray[] GetLatestFilesByFolderIds(long[] folderIds, bool includeHidden) {
            object[] results = this.Invoke("GetLatestFilesByFolderIds", new object[] {
                        folderIds,
                        includeHidden});
            return ((FileArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFilesByFolderIds(long[] folderIds, bool includeHidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFilesByFolderIds", new object[] {
                        folderIds,
                        includeHidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileArray[] EndGetLatestFilesByFolderIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFilesByFolderIdsAsync(long[] folderIds, bool includeHidden) {
            this.GetLatestFilesByFolderIdsAsync(folderIds, includeHidden, null);
        }
        
        /// <remarks/>
        public void GetLatestFilesByFolderIdsAsync(long[] folderIds, bool includeHidden, object userState) {
            if ((this.GetLatestFilesByFolderIdsOperationCompleted == null)) {
                this.GetLatestFilesByFolderIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFilesByFolderIdsOperationCompleted);
            }
            this.InvokeAsync("GetLatestFilesByFolderIds", new object[] {
                        folderIds,
                        includeHidden}, this.GetLatestFilesByFolderIdsOperationCompleted, userState);
        }
        
        private void OnGetLatestFilesByFolderIdsOperationCompleted(object arg) {
            if ((this.GetLatestFilesByFolderIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFilesByFolderIdsCompleted(this, new GetLatestFilesByFolderIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFilesByMasterId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] GetFilesByMasterId(long fileMasterId) {
            object[] results = this.Invoke("GetFilesByMasterId", new object[] {
                        fileMasterId});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFilesByMasterId(long fileMasterId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFilesByMasterId", new object[] {
                        fileMasterId}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndGetFilesByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesByMasterIdAsync(long fileMasterId) {
            this.GetFilesByMasterIdAsync(fileMasterId, null);
        }
        
        /// <remarks/>
        public void GetFilesByMasterIdAsync(long fileMasterId, object userState) {
            if ((this.GetFilesByMasterIdOperationCompleted == null)) {
                this.GetFilesByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesByMasterIdOperationCompleted);
            }
            this.InvokeAsync("GetFilesByMasterId", new object[] {
                        fileMasterId}, this.GetFilesByMasterIdOperationCompleted, userState);
        }
        
        private void OnGetFilesByMasterIdOperationCompleted(object arg) {
            if ((this.GetFilesByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesByMasterIdCompleted(this, new GetFilesByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFilesByMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileArray[] GetFilesByMasterIds(long[] fileMasterIds) {
            object[] results = this.Invoke("GetFilesByMasterIds", new object[] {
                        fileMasterIds});
            return ((FileArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFilesByMasterIds(long[] fileMasterIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFilesByMasterIds", new object[] {
                        fileMasterIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileArray[] EndGetFilesByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesByMasterIdsAsync(long[] fileMasterIds) {
            this.GetFilesByMasterIdsAsync(fileMasterIds, null);
        }
        
        /// <remarks/>
        public void GetFilesByMasterIdsAsync(long[] fileMasterIds, object userState) {
            if ((this.GetFilesByMasterIdsOperationCompleted == null)) {
                this.GetFilesByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFilesByMasterIds", new object[] {
                        fileMasterIds}, this.GetFilesByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFilesByMasterIdsOperationCompleted(object arg) {
            if ((this.GetFilesByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesByMasterIdsCompleted(this, new GetFilesByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileByVersion", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File GetFileByVersion(long fileMasterId, int versionNumber) {
            object[] results = this.Invoke("GetFileByVersion", new object[] {
                        fileMasterId,
                        versionNumber});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileByVersion(long fileMasterId, int versionNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileByVersion", new object[] {
                        fileMasterId,
                        versionNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndGetFileByVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileByVersionAsync(long fileMasterId, int versionNumber) {
            this.GetFileByVersionAsync(fileMasterId, versionNumber, null);
        }
        
        /// <remarks/>
        public void GetFileByVersionAsync(long fileMasterId, int versionNumber, object userState) {
            if ((this.GetFileByVersionOperationCompleted == null)) {
                this.GetFileByVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileByVersionOperationCompleted);
            }
            this.InvokeAsync("GetFileByVersion", new object[] {
                        fileMasterId,
                        versionNumber}, this.GetFileByVersionOperationCompleted, userState);
        }
        
        private void OnGetFileByVersionOperationCompleted(object arg) {
            if ((this.GetFileByVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileByVersionCompleted(this, new GetFileByVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFilesByVersions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] GetFilesByVersions(long[] fileMasterIds, int[] versionNumbers) {
            object[] results = this.Invoke("GetFilesByVersions", new object[] {
                        fileMasterIds,
                        versionNumbers});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFilesByVersions(long[] fileMasterIds, int[] versionNumbers, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFilesByVersions", new object[] {
                        fileMasterIds,
                        versionNumbers}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndGetFilesByVersions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesByVersionsAsync(long[] fileMasterIds, int[] versionNumbers) {
            this.GetFilesByVersionsAsync(fileMasterIds, versionNumbers, null);
        }
        
        /// <remarks/>
        public void GetFilesByVersionsAsync(long[] fileMasterIds, int[] versionNumbers, object userState) {
            if ((this.GetFilesByVersionsOperationCompleted == null)) {
                this.GetFilesByVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesByVersionsOperationCompleted);
            }
            this.InvokeAsync("GetFilesByVersions", new object[] {
                        fileMasterIds,
                        versionNumbers}, this.GetFilesByVersionsOperationCompleted, userState);
        }
        
        private void OnGetFilesByVersionsOperationCompleted(object arg) {
            if ((this.GetFilesByVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesByVersionsCompleted(this, new GetFilesByVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestFileByMasterId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File GetLatestFileByMasterId(long fileMasterId) {
            object[] results = this.Invoke("GetLatestFileByMasterId", new object[] {
                        fileMasterId});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFileByMasterId(long fileMasterId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFileByMasterId", new object[] {
                        fileMasterId}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndGetLatestFileByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFileByMasterIdAsync(long fileMasterId) {
            this.GetLatestFileByMasterIdAsync(fileMasterId, null);
        }
        
        /// <remarks/>
        public void GetLatestFileByMasterIdAsync(long fileMasterId, object userState) {
            if ((this.GetLatestFileByMasterIdOperationCompleted == null)) {
                this.GetLatestFileByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFileByMasterIdOperationCompleted);
            }
            this.InvokeAsync("GetLatestFileByMasterId", new object[] {
                        fileMasterId}, this.GetLatestFileByMasterIdOperationCompleted, userState);
        }
        
        private void OnGetLatestFileByMasterIdOperationCompleted(object arg) {
            if ((this.GetLatestFileByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFileByMasterIdCompleted(this, new GetLatestFileByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestFilesByMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] GetLatestFilesByMasterIds(long[] fileMasterIds) {
            object[] results = this.Invoke("GetLatestFilesByMasterIds", new object[] {
                        fileMasterIds});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFilesByMasterIds(long[] fileMasterIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFilesByMasterIds", new object[] {
                        fileMasterIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndGetLatestFilesByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFilesByMasterIdsAsync(long[] fileMasterIds) {
            this.GetLatestFilesByMasterIdsAsync(fileMasterIds, null);
        }
        
        /// <remarks/>
        public void GetLatestFilesByMasterIdsAsync(long[] fileMasterIds, object userState) {
            if ((this.GetLatestFilesByMasterIdsOperationCompleted == null)) {
                this.GetLatestFilesByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFilesByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetLatestFilesByMasterIds", new object[] {
                        fileMasterIds}, this.GetLatestFilesByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetLatestFilesByMasterIdsOperationCompleted(object arg) {
            if ((this.GetLatestFilesByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFilesByMasterIdsCompleted(this, new GetLatestFilesByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DownloadFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadFile(long fileId, bool allowSync, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] fileContents) {
            object[] results = this.Invoke("DownloadFile", new object[] {
                        fileId,
                        allowSync});
            fileContents = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadFile(long fileId, bool allowSync, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadFile", new object[] {
                        fileId,
                        allowSync}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDownloadFile(System.IAsyncResult asyncResult, out byte[] fileContents) {
            object[] results = this.EndInvoke(asyncResult);
            fileContents = ((byte[])(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFileAsync(long fileId, bool allowSync) {
            this.DownloadFileAsync(fileId, allowSync, null);
        }
        
        /// <remarks/>
        public void DownloadFileAsync(long fileId, bool allowSync, object userState) {
            if ((this.DownloadFileOperationCompleted == null)) {
                this.DownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFileOperationCompleted);
            }
            this.InvokeAsync("DownloadFile", new object[] {
                        fileId,
                        allowSync}, this.DownloadFileOperationCompleted, userState);
        }
        
        private void OnDownloadFileOperationCompleted(object arg) {
            if ((this.DownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DownloadFilePart", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] DownloadFilePart(long fileId, long firstByte, long lastByte, bool allowSync) {
            object[] results = this.Invoke("DownloadFilePart", new object[] {
                        fileId,
                        firstByte,
                        lastByte,
                        allowSync});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDownloadFilePart(long fileId, long firstByte, long lastByte, bool allowSync, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DownloadFilePart", new object[] {
                        fileId,
                        firstByte,
                        lastByte,
                        allowSync}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndDownloadFilePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadFilePartAsync(long fileId, long firstByte, long lastByte, bool allowSync) {
            this.DownloadFilePartAsync(fileId, firstByte, lastByte, allowSync, null);
        }
        
        /// <remarks/>
        public void DownloadFilePartAsync(long fileId, long firstByte, long lastByte, bool allowSync, object userState) {
            if ((this.DownloadFilePartOperationCompleted == null)) {
                this.DownloadFilePartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadFilePartOperationCompleted);
            }
            this.InvokeAsync("DownloadFilePart", new object[] {
                        fileId,
                        firstByte,
                        lastByte,
                        allowSync}, this.DownloadFilePartOperationCompleted, userState);
        }
        
        private void OnDownloadFilePartOperationCompleted(object arg) {
            if ((this.DownloadFilePartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadFilePartCompleted(this, new DownloadFilePartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UploadFilePart", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid UploadFilePart(System.Guid uploadIdentifier, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] filePart) {
            object[] results = this.Invoke("UploadFilePart", new object[] {
                        uploadIdentifier,
                        filePart});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadFilePart(System.Guid uploadIdentifier, byte[] filePart, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadFilePart", new object[] {
                        uploadIdentifier,
                        filePart}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Guid EndUploadFilePart(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFilePartAsync(System.Guid uploadIdentifier, byte[] filePart) {
            this.UploadFilePartAsync(uploadIdentifier, filePart, null);
        }
        
        /// <remarks/>
        public void UploadFilePartAsync(System.Guid uploadIdentifier, byte[] filePart, object userState) {
            if ((this.UploadFilePartOperationCompleted == null)) {
                this.UploadFilePartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFilePartOperationCompleted);
            }
            this.InvokeAsync("UploadFilePart", new object[] {
                        uploadIdentifier,
                        filePart}, this.UploadFilePartOperationCompleted, userState);
        }
        
        private void OnUploadFilePartOperationCompleted(object arg) {
            if ((this.UploadFilePartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFilePartCompleted(this, new UploadFilePartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File AddFile(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClassification, bool hidden, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContents) {
            object[] results = this.Invoke("AddFile", new object[] {
                        folderId,
                        fileName,
                        comment,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        fileClassification,
                        hidden,
                        fileContents});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddFile(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClassification, bool hidden, byte[] fileContents, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddFile", new object[] {
                        folderId,
                        fileName,
                        comment,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        fileClassification,
                        hidden,
                        fileContents}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndAddFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileAsync(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClassification, bool hidden, byte[] fileContents) {
            this.AddFileAsync(folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClassification, hidden, fileContents, null);
        }
        
        /// <remarks/>
        public void AddFileAsync(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClassification, bool hidden, byte[] fileContents, object userState) {
            if ((this.AddFileOperationCompleted == null)) {
                this.AddFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileOperationCompleted);
            }
            this.InvokeAsync("AddFile", new object[] {
                        folderId,
                        fileName,
                        comment,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        fileClassification,
                        hidden,
                        fileContents}, this.AddFileOperationCompleted, userState);
        }
        
        private void OnAddFileOperationCompleted(object arg) {
            if ((this.AddFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileCompleted(this, new AddFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddUploadedFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File AddUploadedFile(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClass, bool hidden, System.Guid uploadIdentifier) {
            object[] results = this.Invoke("AddUploadedFile", new object[] {
                        folderId,
                        fileName,
                        comment,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        fileClass,
                        hidden,
                        uploadIdentifier});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddUploadedFile(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClass, bool hidden, System.Guid uploadIdentifier, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddUploadedFile", new object[] {
                        folderId,
                        fileName,
                        comment,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        fileClass,
                        hidden,
                        uploadIdentifier}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndAddUploadedFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void AddUploadedFileAsync(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClass, bool hidden, System.Guid uploadIdentifier) {
            this.AddUploadedFileAsync(folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClass, hidden, uploadIdentifier, null);
        }
        
        /// <remarks/>
        public void AddUploadedFileAsync(long folderId, string fileName, string comment, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, FileClassification fileClass, bool hidden, System.Guid uploadIdentifier, object userState) {
            if ((this.AddUploadedFileOperationCompleted == null)) {
                this.AddUploadedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUploadedFileOperationCompleted);
            }
            this.InvokeAsync("AddUploadedFile", new object[] {
                        folderId,
                        fileName,
                        comment,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        fileClass,
                        hidden,
                        uploadIdentifier}, this.AddUploadedFileOperationCompleted, userState);
        }
        
        private void OnAddUploadedFileOperationCompleted(object arg) {
            if ((this.AddUploadedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUploadedFileCompleted(this, new AddUploadedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/CheckinFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File CheckinFile(long fileMasterId, string comment, bool keepCheckedOut, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, bool copyBom, string newFileName, FileClassification fileClassification, bool hidden, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] fileContents) {
            object[] results = this.Invoke("CheckinFile", new object[] {
                        fileMasterId,
                        comment,
                        keepCheckedOut,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        copyBom,
                        newFileName,
                        fileClassification,
                        hidden,
                        fileContents});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckinFile(
                    long fileMasterId, 
                    string comment, 
                    bool keepCheckedOut, 
                    System.DateTime lastWrite, 
                    long[] dependFileIds, 
                    string[] dependSources, 
                    long[] attachFileIds, 
                    string[] attachSources, 
                    BOM bom, 
                    bool copyBom, 
                    string newFileName, 
                    FileClassification fileClassification, 
                    bool hidden, 
                    byte[] fileContents, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CheckinFile", new object[] {
                        fileMasterId,
                        comment,
                        keepCheckedOut,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        copyBom,
                        newFileName,
                        fileClassification,
                        hidden,
                        fileContents}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndCheckinFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void CheckinFileAsync(long fileMasterId, string comment, bool keepCheckedOut, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, bool copyBom, string newFileName, FileClassification fileClassification, bool hidden, byte[] fileContents) {
            this.CheckinFileAsync(fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, fileClassification, hidden, fileContents, null);
        }
        
        /// <remarks/>
        public void CheckinFileAsync(long fileMasterId, string comment, bool keepCheckedOut, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, bool copyBom, string newFileName, FileClassification fileClassification, bool hidden, byte[] fileContents, object userState) {
            if ((this.CheckinFileOperationCompleted == null)) {
                this.CheckinFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckinFileOperationCompleted);
            }
            this.InvokeAsync("CheckinFile", new object[] {
                        fileMasterId,
                        comment,
                        keepCheckedOut,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        copyBom,
                        newFileName,
                        fileClassification,
                        hidden,
                        fileContents}, this.CheckinFileOperationCompleted, userState);
        }
        
        private void OnCheckinFileOperationCompleted(object arg) {
            if ((this.CheckinFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckinFileCompleted(this, new CheckinFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/CheckinUploadedFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File CheckinUploadedFile(long fileMasterId, string comment, bool keepCheckedOut, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, bool copyBom, string newFileName, System.Guid uploadIdentifier, FileClassification fileClassification, bool hidden) {
            object[] results = this.Invoke("CheckinUploadedFile", new object[] {
                        fileMasterId,
                        comment,
                        keepCheckedOut,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        copyBom,
                        newFileName,
                        uploadIdentifier,
                        fileClassification,
                        hidden});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckinUploadedFile(
                    long fileMasterId, 
                    string comment, 
                    bool keepCheckedOut, 
                    System.DateTime lastWrite, 
                    long[] dependFileIds, 
                    string[] dependSources, 
                    long[] attachFileIds, 
                    string[] attachSources, 
                    BOM bom, 
                    bool copyBom, 
                    string newFileName, 
                    System.Guid uploadIdentifier, 
                    FileClassification fileClassification, 
                    bool hidden, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("CheckinUploadedFile", new object[] {
                        fileMasterId,
                        comment,
                        keepCheckedOut,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        copyBom,
                        newFileName,
                        uploadIdentifier,
                        fileClassification,
                        hidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndCheckinUploadedFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void CheckinUploadedFileAsync(long fileMasterId, string comment, bool keepCheckedOut, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, bool copyBom, string newFileName, System.Guid uploadIdentifier, FileClassification fileClassification, bool hidden) {
            this.CheckinUploadedFileAsync(fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, uploadIdentifier, fileClassification, hidden, null);
        }
        
        /// <remarks/>
        public void CheckinUploadedFileAsync(long fileMasterId, string comment, bool keepCheckedOut, System.DateTime lastWrite, long[] dependFileIds, string[] dependSources, long[] attachFileIds, string[] attachSources, BOM bom, bool copyBom, string newFileName, System.Guid uploadIdentifier, FileClassification fileClassification, bool hidden, object userState) {
            if ((this.CheckinUploadedFileOperationCompleted == null)) {
                this.CheckinUploadedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckinUploadedFileOperationCompleted);
            }
            this.InvokeAsync("CheckinUploadedFile", new object[] {
                        fileMasterId,
                        comment,
                        keepCheckedOut,
                        lastWrite,
                        dependFileIds,
                        dependSources,
                        attachFileIds,
                        attachSources,
                        bom,
                        copyBom,
                        newFileName,
                        uploadIdentifier,
                        fileClassification,
                        hidden}, this.CheckinUploadedFileOperationCompleted, userState);
        }
        
        private void OnCheckinUploadedFileOperationCompleted(object arg) {
            if ((this.CheckinUploadedFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckinUploadedFileCompleted(this, new CheckinUploadedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/CheckoutFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File CheckoutFile(long folderId, long fileMasterId, string machine, string localPath, string comment, bool downloadFile, bool allowSync, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] fileContents) {
            object[] results = this.Invoke("CheckoutFile", new object[] {
                        folderId,
                        fileMasterId,
                        machine,
                        localPath,
                        comment,
                        downloadFile,
                        allowSync});
            fileContents = ((byte[])(results[1]));
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckoutFile(long folderId, long fileMasterId, string machine, string localPath, string comment, bool downloadFile, bool allowSync, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckoutFile", new object[] {
                        folderId,
                        fileMasterId,
                        machine,
                        localPath,
                        comment,
                        downloadFile,
                        allowSync}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndCheckoutFile(System.IAsyncResult asyncResult, out byte[] fileContents) {
            object[] results = this.EndInvoke(asyncResult);
            fileContents = ((byte[])(results[1]));
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void CheckoutFileAsync(long folderId, long fileMasterId, string machine, string localPath, string comment, bool downloadFile, bool allowSync) {
            this.CheckoutFileAsync(folderId, fileMasterId, machine, localPath, comment, downloadFile, allowSync, null);
        }
        
        /// <remarks/>
        public void CheckoutFileAsync(long folderId, long fileMasterId, string machine, string localPath, string comment, bool downloadFile, bool allowSync, object userState) {
            if ((this.CheckoutFileOperationCompleted == null)) {
                this.CheckoutFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckoutFileOperationCompleted);
            }
            this.InvokeAsync("CheckoutFile", new object[] {
                        folderId,
                        fileMasterId,
                        machine,
                        localPath,
                        comment,
                        downloadFile,
                        allowSync}, this.CheckoutFileOperationCompleted, userState);
        }
        
        private void OnCheckoutFileOperationCompleted(object arg) {
            if ((this.CheckoutFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckoutFileCompleted(this, new CheckoutFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UndoCheckoutFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File UndoCheckoutFile(long fileMasterId, bool downloadFile, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] fileContents) {
            object[] results = this.Invoke("UndoCheckoutFile", new object[] {
                        fileMasterId,
                        downloadFile});
            fileContents = ((byte[])(results[1]));
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUndoCheckoutFile(long fileMasterId, bool downloadFile, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UndoCheckoutFile", new object[] {
                        fileMasterId,
                        downloadFile}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndUndoCheckoutFile(System.IAsyncResult asyncResult, out byte[] fileContents) {
            object[] results = this.EndInvoke(asyncResult);
            fileContents = ((byte[])(results[1]));
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void UndoCheckoutFileAsync(long fileMasterId, bool downloadFile) {
            this.UndoCheckoutFileAsync(fileMasterId, downloadFile, null);
        }
        
        /// <remarks/>
        public void UndoCheckoutFileAsync(long fileMasterId, bool downloadFile, object userState) {
            if ((this.UndoCheckoutFileOperationCompleted == null)) {
                this.UndoCheckoutFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUndoCheckoutFileOperationCompleted);
            }
            this.InvokeAsync("UndoCheckoutFile", new object[] {
                        fileMasterId,
                        downloadFile}, this.UndoCheckoutFileOperationCompleted, userState);
        }
        
        private void OnUndoCheckoutFileOperationCompleted(object arg) {
            if ((this.UndoCheckoutFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UndoCheckoutFileCompleted(this, new UndoCheckoutFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileFromFolder", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFileFromFolder(long fileMasterId, long folderId) {
            this.Invoke("DeleteFileFromFolder", new object[] {
                        fileMasterId,
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileFromFolder(long fileMasterId, long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileFromFolder", new object[] {
                        fileMasterId,
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFileFromFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFileFromFolderAsync(long fileMasterId, long folderId) {
            this.DeleteFileFromFolderAsync(fileMasterId, folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFileFromFolderAsync(long fileMasterId, long folderId, object userState) {
            if ((this.DeleteFileFromFolderOperationCompleted == null)) {
                this.DeleteFileFromFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileFromFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteFileFromFolder", new object[] {
                        fileMasterId,
                        folderId}, this.DeleteFileFromFolderOperationCompleted, userState);
        }
        
        private void OnDeleteFileFromFolderOperationCompleted(object arg) {
            if ((this.DeleteFileFromFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileFromFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFilesFromFolder", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFilesFromFolder(long[] fileMasterIds, long folderId) {
            this.Invoke("DeleteFilesFromFolder", new object[] {
                        fileMasterIds,
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFilesFromFolder(long[] fileMasterIds, long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFilesFromFolder", new object[] {
                        fileMasterIds,
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFilesFromFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFilesFromFolderAsync(long[] fileMasterIds, long folderId) {
            this.DeleteFilesFromFolderAsync(fileMasterIds, folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFilesFromFolderAsync(long[] fileMasterIds, long folderId, object userState) {
            if ((this.DeleteFilesFromFolderOperationCompleted == null)) {
                this.DeleteFilesFromFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFilesFromFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteFilesFromFolder", new object[] {
                        fileMasterIds,
                        folderId}, this.DeleteFilesFromFolderOperationCompleted, userState);
        }
        
        private void OnDeleteFilesFromFolderOperationCompleted(object arg) {
            if ((this.DeleteFilesFromFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFilesFromFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileFromFolderUnconditional", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFileFromFolderUnconditional(long fileMasterId, long folderId) {
            this.Invoke("DeleteFileFromFolderUnconditional", new object[] {
                        fileMasterId,
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileFromFolderUnconditional(long fileMasterId, long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileFromFolderUnconditional", new object[] {
                        fileMasterId,
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFileFromFolderUnconditional(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFileFromFolderUnconditionalAsync(long fileMasterId, long folderId) {
            this.DeleteFileFromFolderUnconditionalAsync(fileMasterId, folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFileFromFolderUnconditionalAsync(long fileMasterId, long folderId, object userState) {
            if ((this.DeleteFileFromFolderUnconditionalOperationCompleted == null)) {
                this.DeleteFileFromFolderUnconditionalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileFromFolderUnconditionalOperationCompleted);
            }
            this.InvokeAsync("DeleteFileFromFolderUnconditional", new object[] {
                        fileMasterId,
                        folderId}, this.DeleteFileFromFolderUnconditionalOperationCompleted, userState);
        }
        
        private void OnDeleteFileFromFolderUnconditionalOperationCompleted(object arg) {
            if ((this.DeleteFileFromFolderUnconditionalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileFromFolderUnconditionalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFilesFromFolderUnconditional" +
            "", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFilesFromFolderUnconditional(long[] fileMasterIds, long folderId) {
            this.Invoke("DeleteFilesFromFolderUnconditional", new object[] {
                        fileMasterIds,
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFilesFromFolderUnconditional(long[] fileMasterIds, long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFilesFromFolderUnconditional", new object[] {
                        fileMasterIds,
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFilesFromFolderUnconditional(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFilesFromFolderUnconditionalAsync(long[] fileMasterIds, long folderId) {
            this.DeleteFilesFromFolderUnconditionalAsync(fileMasterIds, folderId, null);
        }
        
        /// <remarks/>
        public void DeleteFilesFromFolderUnconditionalAsync(long[] fileMasterIds, long folderId, object userState) {
            if ((this.DeleteFilesFromFolderUnconditionalOperationCompleted == null)) {
                this.DeleteFilesFromFolderUnconditionalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFilesFromFolderUnconditionalOperationCompleted);
            }
            this.InvokeAsync("DeleteFilesFromFolderUnconditional", new object[] {
                        fileMasterIds,
                        folderId}, this.DeleteFilesFromFolderUnconditionalOperationCompleted, userState);
        }
        
        private void OnDeleteFilesFromFolderUnconditionalOperationCompleted(object arg) {
            if ((this.DeleteFilesFromFolderUnconditionalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFilesFromFolderUnconditionalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileDeleteRestrictionsByMasterI" +
            "d", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelRestric[] GetFileDeleteRestrictionsByMasterId(long fileMasterId, long folderId) {
            object[] results = this.Invoke("GetFileDeleteRestrictionsByMasterId", new object[] {
                        fileMasterId,
                        folderId});
            return ((FileDelRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileDeleteRestrictionsByMasterId(long fileMasterId, long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileDeleteRestrictionsByMasterId", new object[] {
                        fileMasterId,
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelRestric[] EndGetFileDeleteRestrictionsByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDeleteRestrictionsByMasterIdAsync(long fileMasterId, long folderId) {
            this.GetFileDeleteRestrictionsByMasterIdAsync(fileMasterId, folderId, null);
        }
        
        /// <remarks/>
        public void GetFileDeleteRestrictionsByMasterIdAsync(long fileMasterId, long folderId, object userState) {
            if ((this.GetFileDeleteRestrictionsByMasterIdOperationCompleted == null)) {
                this.GetFileDeleteRestrictionsByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDeleteRestrictionsByMasterIdOperationCompleted);
            }
            this.InvokeAsync("GetFileDeleteRestrictionsByMasterId", new object[] {
                        fileMasterId,
                        folderId}, this.GetFileDeleteRestrictionsByMasterIdOperationCompleted, userState);
        }
        
        private void OnGetFileDeleteRestrictionsByMasterIdOperationCompleted(object arg) {
            if ((this.GetFileDeleteRestrictionsByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDeleteRestrictionsByMasterIdCompleted(this, new GetFileDeleteRestrictionsByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileDeleteRestrictionsByMasterI" +
            "ds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelRestricArray[] GetFileDeleteRestrictionsByMasterIds(long[] fileMasterIds, long[] folderIds) {
            object[] results = this.Invoke("GetFileDeleteRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        folderIds});
            return ((FileDelRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileDeleteRestrictionsByMasterIds(long[] fileMasterIds, long[] folderIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileDeleteRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        folderIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelRestricArray[] EndGetFileDeleteRestrictionsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDeleteRestrictionsByMasterIdsAsync(long[] fileMasterIds, long[] folderIds) {
            this.GetFileDeleteRestrictionsByMasterIdsAsync(fileMasterIds, folderIds, null);
        }
        
        /// <remarks/>
        public void GetFileDeleteRestrictionsByMasterIdsAsync(long[] fileMasterIds, long[] folderIds, object userState) {
            if ((this.GetFileDeleteRestrictionsByMasterIdsOperationCompleted == null)) {
                this.GetFileDeleteRestrictionsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDeleteRestrictionsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileDeleteRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        folderIds}, this.GetFileDeleteRestrictionsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFileDeleteRestrictionsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetFileDeleteRestrictionsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDeleteRestrictionsByMasterIdsCompleted(this, new GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/ShareFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShareFile(long fileMasterId, long folderId) {
            this.Invoke("ShareFile", new object[] {
                        fileMasterId,
                        folderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginShareFile(long fileMasterId, long folderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ShareFile", new object[] {
                        fileMasterId,
                        folderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndShareFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ShareFileAsync(long fileMasterId, long folderId) {
            this.ShareFileAsync(fileMasterId, folderId, null);
        }
        
        /// <remarks/>
        public void ShareFileAsync(long fileMasterId, long folderId, object userState) {
            if ((this.ShareFileOperationCompleted == null)) {
                this.ShareFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShareFileOperationCompleted);
            }
            this.InvokeAsync("ShareFile", new object[] {
                        fileMasterId,
                        folderId}, this.ShareFileOperationCompleted, userState);
        }
        
        private void OnShareFileOperationCompleted(object arg) {
            if ((this.ShareFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShareFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/MoveFile", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveFile(long fileMasterId, long srcFolderId, long dstFolderId) {
            this.Invoke("MoveFile", new object[] {
                        fileMasterId,
                        srcFolderId,
                        dstFolderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveFile(long fileMasterId, long srcFolderId, long dstFolderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveFile", new object[] {
                        fileMasterId,
                        srcFolderId,
                        dstFolderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void MoveFileAsync(long fileMasterId, long srcFolderId, long dstFolderId) {
            this.MoveFileAsync(fileMasterId, srcFolderId, dstFolderId, null);
        }
        
        /// <remarks/>
        public void MoveFileAsync(long fileMasterId, long srcFolderId, long dstFolderId, object userState) {
            if ((this.MoveFileOperationCompleted == null)) {
                this.MoveFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveFileOperationCompleted);
            }
            this.InvokeAsync("MoveFile", new object[] {
                        fileMasterId,
                        srcFolderId,
                        dstFolderId}, this.MoveFileOperationCompleted, userState);
        }
        
        private void OnMoveFileOperationCompleted(object arg) {
            if ((this.MoveFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileAssociationRestrictionsById" +
            "", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileAssocRestric[] GetFileAssociationRestrictionsById(long fileId, long[] dependFileIds, long[] attachFileIds) {
            object[] results = this.Invoke("GetFileAssociationRestrictionsById", new object[] {
                        fileId,
                        dependFileIds,
                        attachFileIds});
            return ((FileAssocRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileAssociationRestrictionsById(long fileId, long[] dependFileIds, long[] attachFileIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileAssociationRestrictionsById", new object[] {
                        fileId,
                        dependFileIds,
                        attachFileIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileAssocRestric[] EndGetFileAssociationRestrictionsById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileAssocRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAssociationRestrictionsByIdAsync(long fileId, long[] dependFileIds, long[] attachFileIds) {
            this.GetFileAssociationRestrictionsByIdAsync(fileId, dependFileIds, attachFileIds, null);
        }
        
        /// <remarks/>
        public void GetFileAssociationRestrictionsByIdAsync(long fileId, long[] dependFileIds, long[] attachFileIds, object userState) {
            if ((this.GetFileAssociationRestrictionsByIdOperationCompleted == null)) {
                this.GetFileAssociationRestrictionsByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileAssociationRestrictionsByIdOperationCompleted);
            }
            this.InvokeAsync("GetFileAssociationRestrictionsById", new object[] {
                        fileId,
                        dependFileIds,
                        attachFileIds}, this.GetFileAssociationRestrictionsByIdOperationCompleted, userState);
        }
        
        private void OnGetFileAssociationRestrictionsByIdOperationCompleted(object arg) {
            if ((this.GetFileAssociationRestrictionsByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileAssociationRestrictionsByIdCompleted(this, new GetFileAssociationRestrictionsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileRenameRestrictionsByMasterI" +
            "d", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileRenameRestric[] GetFileRenameRestrictionsByMasterId(long fileMasterId, string newFileName) {
            object[] results = this.Invoke("GetFileRenameRestrictionsByMasterId", new object[] {
                        fileMasterId,
                        newFileName});
            return ((FileRenameRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileRenameRestrictionsByMasterId(long fileMasterId, string newFileName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileRenameRestrictionsByMasterId", new object[] {
                        fileMasterId,
                        newFileName}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileRenameRestric[] EndGetFileRenameRestrictionsByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileRenameRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileRenameRestrictionsByMasterIdAsync(long fileMasterId, string newFileName) {
            this.GetFileRenameRestrictionsByMasterIdAsync(fileMasterId, newFileName, null);
        }
        
        /// <remarks/>
        public void GetFileRenameRestrictionsByMasterIdAsync(long fileMasterId, string newFileName, object userState) {
            if ((this.GetFileRenameRestrictionsByMasterIdOperationCompleted == null)) {
                this.GetFileRenameRestrictionsByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileRenameRestrictionsByMasterIdOperationCompleted);
            }
            this.InvokeAsync("GetFileRenameRestrictionsByMasterId", new object[] {
                        fileMasterId,
                        newFileName}, this.GetFileRenameRestrictionsByMasterIdOperationCompleted, userState);
        }
        
        private void OnGetFileRenameRestrictionsByMasterIdOperationCompleted(object arg) {
            if ((this.GetFileRenameRestrictionsByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileRenameRestrictionsByMasterIdCompleted(this, new GetFileRenameRestrictionsByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileRenameRestrictionsByMasterI" +
            "ds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileRenameRestricArray[] GetFileRenameRestrictionsByMasterIds(long[] fileMasterIds, string[] newFileNames) {
            object[] results = this.Invoke("GetFileRenameRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        newFileNames});
            return ((FileRenameRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileRenameRestrictionsByMasterIds(long[] fileMasterIds, string[] newFileNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileRenameRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        newFileNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileRenameRestricArray[] EndGetFileRenameRestrictionsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileRenameRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileRenameRestrictionsByMasterIdsAsync(long[] fileMasterIds, string[] newFileNames) {
            this.GetFileRenameRestrictionsByMasterIdsAsync(fileMasterIds, newFileNames, null);
        }
        
        /// <remarks/>
        public void GetFileRenameRestrictionsByMasterIdsAsync(long[] fileMasterIds, string[] newFileNames, object userState) {
            if ((this.GetFileRenameRestrictionsByMasterIdsOperationCompleted == null)) {
                this.GetFileRenameRestrictionsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileRenameRestrictionsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileRenameRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        newFileNames}, this.GetFileRenameRestrictionsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFileRenameRestrictionsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetFileRenameRestrictionsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileRenameRestrictionsByMasterIdsCompleted(this, new GetFileRenameRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFilesBySearchConditions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] FindFilesBySearchConditions(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, ref string bookmark, out SrchStatus searchstatus) {
            object[] results = this.Invoke("FindFilesBySearchConditions", new object[] {
                        conditions,
                        sortConditions,
                        folderIds,
                        recurseFolders,
                        latestOnly,
                        bookmark});
            bookmark = ((string)(results[1]));
            searchstatus = ((SrchStatus)(results[2]));
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFilesBySearchConditions(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, string bookmark, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFilesBySearchConditions", new object[] {
                        conditions,
                        sortConditions,
                        folderIds,
                        recurseFolders,
                        latestOnly,
                        bookmark}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndFindFilesBySearchConditions(System.IAsyncResult asyncResult, out string bookmark, out SrchStatus searchstatus) {
            object[] results = this.EndInvoke(asyncResult);
            bookmark = ((string)(results[1]));
            searchstatus = ((SrchStatus)(results[2]));
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFilesBySearchConditionsAsync(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, string bookmark) {
            this.FindFilesBySearchConditionsAsync(conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark, null);
        }
        
        /// <remarks/>
        public void FindFilesBySearchConditionsAsync(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, string bookmark, object userState) {
            if ((this.FindFilesBySearchConditionsOperationCompleted == null)) {
                this.FindFilesBySearchConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFilesBySearchConditionsOperationCompleted);
            }
            this.InvokeAsync("FindFilesBySearchConditions", new object[] {
                        conditions,
                        sortConditions,
                        folderIds,
                        recurseFolders,
                        latestOnly,
                        bookmark}, this.FindFilesBySearchConditionsOperationCompleted, userState);
        }
        
        private void OnFindFilesBySearchConditionsOperationCompleted(object arg) {
            if ((this.FindFilesBySearchConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFilesBySearchConditionsCompleted(this, new FindFilesBySearchConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetBOMByFileId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BOM GetBOMByFileId(long fileId) {
            object[] results = this.Invoke("GetBOMByFileId", new object[] {
                        fileId});
            return ((BOM)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBOMByFileId(long fileId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBOMByFileId", new object[] {
                        fileId}, callback, asyncState);
        }
        
        /// <remarks/>
        public BOM EndGetBOMByFileId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BOM)(results[0]));
        }
        
        /// <remarks/>
        public void GetBOMByFileIdAsync(long fileId) {
            this.GetBOMByFileIdAsync(fileId, null);
        }
        
        /// <remarks/>
        public void GetBOMByFileIdAsync(long fileId, object userState) {
            if ((this.GetBOMByFileIdOperationCompleted == null)) {
                this.GetBOMByFileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOMByFileIdOperationCompleted);
            }
            this.InvokeAsync("GetBOMByFileId", new object[] {
                        fileId}, this.GetBOMByFileIdOperationCompleted, userState);
        }
        
        private void OnGetBOMByFileIdOperationCompleted(object arg) {
            if ((this.GetBOMByFileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBOMByFileIdCompleted(this, new GetBOMByFileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetBOMByFileIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BOM[] GetBOMByFileIds(long[] fileIds) {
            object[] results = this.Invoke("GetBOMByFileIds", new object[] {
                        fileIds});
            return ((BOM[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBOMByFileIds(long[] fileIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBOMByFileIds", new object[] {
                        fileIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public BOM[] EndGetBOMByFileIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BOM[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBOMByFileIdsAsync(long[] fileIds) {
            this.GetBOMByFileIdsAsync(fileIds, null);
        }
        
        /// <remarks/>
        public void GetBOMByFileIdsAsync(long[] fileIds, object userState) {
            if ((this.GetBOMByFileIdsOperationCompleted == null)) {
                this.GetBOMByFileIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOMByFileIdsOperationCompleted);
            }
            this.InvokeAsync("GetBOMByFileIds", new object[] {
                        fileIds}, this.GetBOMByFileIdsOperationCompleted, userState);
        }
        
        private void OnGetBOMByFileIdsOperationCompleted(object arg) {
            if ((this.GetBOMByFileIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBOMByFileIdsCompleted(this, new GetBOMByFileIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAllPropertyDefinitions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropDef[] GetAllPropertyDefinitions() {
            object[] results = this.Invoke("GetAllPropertyDefinitions", new object[0]);
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllPropertyDefinitions(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllPropertyDefinitions", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public PropDef[] EndGetAllPropertyDefinitions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropertyDefinitionsAsync() {
            this.GetAllPropertyDefinitionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPropertyDefinitionsAsync(object userState) {
            if ((this.GetAllPropertyDefinitionsOperationCompleted == null)) {
                this.GetAllPropertyDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropertyDefinitionsOperationCompleted);
            }
            this.InvokeAsync("GetAllPropertyDefinitions", new object[0], this.GetAllPropertyDefinitionsOperationCompleted, userState);
        }
        
        private void OnGetAllPropertyDefinitionsOperationCompleted(object arg) {
            if ((this.GetAllPropertyDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropertyDefinitionsCompleted(this, new GetAllPropertyDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAllPropertyDefinitionsExtended", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropDef[] GetAllPropertyDefinitionsExtended() {
            object[] results = this.Invoke("GetAllPropertyDefinitionsExtended", new object[0]);
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllPropertyDefinitionsExtended(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllPropertyDefinitionsExtended", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public PropDef[] EndGetAllPropertyDefinitionsExtended(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropertyDefinitionsExtendedAsync() {
            this.GetAllPropertyDefinitionsExtendedAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPropertyDefinitionsExtendedAsync(object userState) {
            if ((this.GetAllPropertyDefinitionsExtendedOperationCompleted == null)) {
                this.GetAllPropertyDefinitionsExtendedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropertyDefinitionsExtendedOperationCompleted);
            }
            this.InvokeAsync("GetAllPropertyDefinitionsExtended", new object[0], this.GetAllPropertyDefinitionsExtendedOperationCompleted, userState);
        }
        
        private void OnGetAllPropertyDefinitionsExtendedOperationCompleted(object arg) {
            if ((this.GetAllPropertyDefinitionsExtendedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropertyDefinitionsExtendedCompleted(this, new GetAllPropertyDefinitionsExtendedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindPropertyDefinitionsByPropertyS" +
            "etIdsPropIdsAndDataTypes", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropDef[] FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes(string[] propertySetIds, string[] propIds, string[] types) {
            object[] results = this.Invoke("FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes", new object[] {
                        propertySetIds,
                        propIds,
                        types});
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes(string[] propertySetIds, string[] propIds, string[] types, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes", new object[] {
                        propertySetIds,
                        propIds,
                        types}, callback, asyncState);
        }
        
        /// <remarks/>
        public PropDef[] EndFindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public void FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesAsync(string[] propertySetIds, string[] propIds, string[] types) {
            this.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesAsync(propertySetIds, propIds, types, null);
        }
        
        /// <remarks/>
        public void FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesAsync(string[] propertySetIds, string[] propIds, string[] types, object userState) {
            if ((this.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted == null)) {
                this.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted);
            }
            this.InvokeAsync("FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes", new object[] {
                        propertySetIds,
                        propIds,
                        types}, this.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted, userState);
        }
        
        private void OnFindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted(object arg) {
            if ((this.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompleted(this, new FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetPropertyDefinitionDisplayName", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropDef SetPropertyDefinitionDisplayName(long propertyDefinitionId, string displayName) {
            object[] results = this.Invoke("SetPropertyDefinitionDisplayName", new object[] {
                        propertyDefinitionId,
                        displayName});
            return ((PropDef)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPropertyDefinitionDisplayName(long propertyDefinitionId, string displayName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPropertyDefinitionDisplayName", new object[] {
                        propertyDefinitionId,
                        displayName}, callback, asyncState);
        }
        
        /// <remarks/>
        public PropDef EndSetPropertyDefinitionDisplayName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropDef)(results[0]));
        }
        
        /// <remarks/>
        public void SetPropertyDefinitionDisplayNameAsync(long propertyDefinitionId, string displayName) {
            this.SetPropertyDefinitionDisplayNameAsync(propertyDefinitionId, displayName, null);
        }
        
        /// <remarks/>
        public void SetPropertyDefinitionDisplayNameAsync(long propertyDefinitionId, string displayName, object userState) {
            if ((this.SetPropertyDefinitionDisplayNameOperationCompleted == null)) {
                this.SetPropertyDefinitionDisplayNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPropertyDefinitionDisplayNameOperationCompleted);
            }
            this.InvokeAsync("SetPropertyDefinitionDisplayName", new object[] {
                        propertyDefinitionId,
                        displayName}, this.SetPropertyDefinitionDisplayNameOperationCompleted, userState);
        }
        
        private void OnSetPropertyDefinitionDisplayNameOperationCompleted(object arg) {
            if ((this.SetPropertyDefinitionDisplayNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPropertyDefinitionDisplayNameCompleted(this, new SetPropertyDefinitionDisplayNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetPropertyDefinitionsDisplayNames" +
            "", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropDef[] SetPropertyDefinitionsDisplayNames(long[] propertyDefinitionIds, string[] displayNames) {
            object[] results = this.Invoke("SetPropertyDefinitionsDisplayNames", new object[] {
                        propertyDefinitionIds,
                        displayNames});
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetPropertyDefinitionsDisplayNames(long[] propertyDefinitionIds, string[] displayNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetPropertyDefinitionsDisplayNames", new object[] {
                        propertyDefinitionIds,
                        displayNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public PropDef[] EndSetPropertyDefinitionsDisplayNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropDef[])(results[0]));
        }
        
        /// <remarks/>
        public void SetPropertyDefinitionsDisplayNamesAsync(long[] propertyDefinitionIds, string[] displayNames) {
            this.SetPropertyDefinitionsDisplayNamesAsync(propertyDefinitionIds, displayNames, null);
        }
        
        /// <remarks/>
        public void SetPropertyDefinitionsDisplayNamesAsync(long[] propertyDefinitionIds, string[] displayNames, object userState) {
            if ((this.SetPropertyDefinitionsDisplayNamesOperationCompleted == null)) {
                this.SetPropertyDefinitionsDisplayNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPropertyDefinitionsDisplayNamesOperationCompleted);
            }
            this.InvokeAsync("SetPropertyDefinitionsDisplayNames", new object[] {
                        propertyDefinitionIds,
                        displayNames}, this.SetPropertyDefinitionsDisplayNamesOperationCompleted, userState);
        }
        
        private void OnSetPropertyDefinitionsDisplayNamesOperationCompleted(object arg) {
            if ((this.SetPropertyDefinitionsDisplayNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPropertyDefinitionsDisplayNamesCompleted(this, new SetPropertyDefinitionsDisplayNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetProperties", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropInst[] GetProperties(long[] fileIds, long[] propertyDefinitionIds) {
            object[] results = this.Invoke("GetProperties", new object[] {
                        fileIds,
                        propertyDefinitionIds});
            return ((PropInst[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProperties(long[] fileIds, long[] propertyDefinitionIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProperties", new object[] {
                        fileIds,
                        propertyDefinitionIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public PropInst[] EndGetProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropInst[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertiesAsync(long[] fileIds, long[] propertyDefinitionIds) {
            this.GetPropertiesAsync(fileIds, propertyDefinitionIds, null);
        }
        
        /// <remarks/>
        public void GetPropertiesAsync(long[] fileIds, long[] propertyDefinitionIds, object userState) {
            if ((this.GetPropertiesOperationCompleted == null)) {
                this.GetPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetProperties", new object[] {
                        fileIds,
                        propertyDefinitionIds}, this.GetPropertiesOperationCompleted, userState);
        }
        
        private void OnGetPropertiesOperationCompleted(object arg) {
            if ((this.GetPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertiesCompleted(this, new GetPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindFileFoldersBySearchConditions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileFolder[] FindFileFoldersBySearchConditions(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, ref string bookmark, out SrchStatus searchstatus) {
            object[] results = this.Invoke("FindFileFoldersBySearchConditions", new object[] {
                        conditions,
                        sortConditions,
                        folderIds,
                        recurseFolders,
                        latestOnly,
                        bookmark});
            bookmark = ((string)(results[1]));
            searchstatus = ((SrchStatus)(results[2]));
            return ((FileFolder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindFileFoldersBySearchConditions(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, string bookmark, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindFileFoldersBySearchConditions", new object[] {
                        conditions,
                        sortConditions,
                        folderIds,
                        recurseFolders,
                        latestOnly,
                        bookmark}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileFolder[] EndFindFileFoldersBySearchConditions(System.IAsyncResult asyncResult, out string bookmark, out SrchStatus searchstatus) {
            object[] results = this.EndInvoke(asyncResult);
            bookmark = ((string)(results[1]));
            searchstatus = ((SrchStatus)(results[2]));
            return ((FileFolder[])(results[0]));
        }
        
        /// <remarks/>
        public void FindFileFoldersBySearchConditionsAsync(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, string bookmark) {
            this.FindFileFoldersBySearchConditionsAsync(conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark, null);
        }
        
        /// <remarks/>
        public void FindFileFoldersBySearchConditionsAsync(SrchCond[] conditions, SrchSort[] sortConditions, long[] folderIds, bool recurseFolders, bool latestOnly, string bookmark, object userState) {
            if ((this.FindFileFoldersBySearchConditionsOperationCompleted == null)) {
                this.FindFileFoldersBySearchConditionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindFileFoldersBySearchConditionsOperationCompleted);
            }
            this.InvokeAsync("FindFileFoldersBySearchConditions", new object[] {
                        conditions,
                        sortConditions,
                        folderIds,
                        recurseFolders,
                        latestOnly,
                        bookmark}, this.FindFileFoldersBySearchConditionsOperationCompleted, userState);
        }
        
        private void OnFindFileFoldersBySearchConditionsOperationCompleted(object arg) {
            if ((this.FindFileFoldersBySearchConditionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindFileFoldersBySearchConditionsCompleted(this, new FindFileFoldersBySearchConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAllPropertyGroups", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropGrp[] GetAllPropertyGroups() {
            object[] results = this.Invoke("GetAllPropertyGroups", new object[0]);
            return ((PropGrp[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllPropertyGroups(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllPropertyGroups", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public PropGrp[] EndGetAllPropertyGroups(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropGrp[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPropertyGroupsAsync() {
            this.GetAllPropertyGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPropertyGroupsAsync(object userState) {
            if ((this.GetAllPropertyGroupsOperationCompleted == null)) {
                this.GetAllPropertyGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropertyGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllPropertyGroups", new object[0], this.GetAllPropertyGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllPropertyGroupsOperationCompleted(object arg) {
            if ((this.GetAllPropertyGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPropertyGroupsCompleted(this, new GetAllPropertyGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddPropertyGroup", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropGrp AddPropertyGroup(string displayName, string documentColumnName, int state, long[] propertyDefIds) {
            object[] results = this.Invoke("AddPropertyGroup", new object[] {
                        displayName,
                        documentColumnName,
                        state,
                        propertyDefIds});
            return ((PropGrp)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPropertyGroup(string displayName, string documentColumnName, int state, long[] propertyDefIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPropertyGroup", new object[] {
                        displayName,
                        documentColumnName,
                        state,
                        propertyDefIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public PropGrp EndAddPropertyGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropGrp)(results[0]));
        }
        
        /// <remarks/>
        public void AddPropertyGroupAsync(string displayName, string documentColumnName, int state, long[] propertyDefIds) {
            this.AddPropertyGroupAsync(displayName, documentColumnName, state, propertyDefIds, null);
        }
        
        /// <remarks/>
        public void AddPropertyGroupAsync(string displayName, string documentColumnName, int state, long[] propertyDefIds, object userState) {
            if ((this.AddPropertyGroupOperationCompleted == null)) {
                this.AddPropertyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPropertyGroupOperationCompleted);
            }
            this.InvokeAsync("AddPropertyGroup", new object[] {
                        displayName,
                        documentColumnName,
                        state,
                        propertyDefIds}, this.AddPropertyGroupOperationCompleted, userState);
        }
        
        private void OnAddPropertyGroupOperationCompleted(object arg) {
            if ((this.AddPropertyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPropertyGroupCompleted(this, new AddPropertyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UpdatePropertyGroup", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePropertyGroup(PropGrp propertyGroup) {
            this.Invoke("UpdatePropertyGroup", new object[] {
                        propertyGroup});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePropertyGroup(PropGrp propertyGroup, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePropertyGroup", new object[] {
                        propertyGroup}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdatePropertyGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdatePropertyGroupAsync(PropGrp propertyGroup) {
            this.UpdatePropertyGroupAsync(propertyGroup, null);
        }
        
        /// <remarks/>
        public void UpdatePropertyGroupAsync(PropGrp propertyGroup, object userState) {
            if ((this.UpdatePropertyGroupOperationCompleted == null)) {
                this.UpdatePropertyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePropertyGroupOperationCompleted);
            }
            this.InvokeAsync("UpdatePropertyGroup", new object[] {
                        propertyGroup}, this.UpdatePropertyGroupOperationCompleted, userState);
        }
        
        private void OnUpdatePropertyGroupOperationCompleted(object arg) {
            if ((this.UpdatePropertyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePropertyGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UpdatePropertyGroups", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePropertyGroups(PropGrp[] propertyGroups) {
            this.Invoke("UpdatePropertyGroups", new object[] {
                        propertyGroups});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePropertyGroups(PropGrp[] propertyGroups, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePropertyGroups", new object[] {
                        propertyGroups}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdatePropertyGroups(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdatePropertyGroupsAsync(PropGrp[] propertyGroups) {
            this.UpdatePropertyGroupsAsync(propertyGroups, null);
        }
        
        /// <remarks/>
        public void UpdatePropertyGroupsAsync(PropGrp[] propertyGroups, object userState) {
            if ((this.UpdatePropertyGroupsOperationCompleted == null)) {
                this.UpdatePropertyGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePropertyGroupsOperationCompleted);
            }
            this.InvokeAsync("UpdatePropertyGroups", new object[] {
                        propertyGroups}, this.UpdatePropertyGroupsOperationCompleted, userState);
        }
        
        private void OnUpdatePropertyGroupsOperationCompleted(object arg) {
            if ((this.UpdatePropertyGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePropertyGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeletePropertyGroup", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePropertyGroup(long propertyGroupId) {
            this.Invoke("DeletePropertyGroup", new object[] {
                        propertyGroupId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePropertyGroup(long propertyGroupId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePropertyGroup", new object[] {
                        propertyGroupId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeletePropertyGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeletePropertyGroupAsync(long propertyGroupId) {
            this.DeletePropertyGroupAsync(propertyGroupId, null);
        }
        
        /// <remarks/>
        public void DeletePropertyGroupAsync(long propertyGroupId, object userState) {
            if ((this.DeletePropertyGroupOperationCompleted == null)) {
                this.DeletePropertyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePropertyGroupOperationCompleted);
            }
            this.InvokeAsync("DeletePropertyGroup", new object[] {
                        propertyGroupId}, this.DeletePropertyGroupOperationCompleted, userState);
        }
        
        private void OnDeletePropertyGroupOperationCompleted(object arg) {
            if ((this.DeletePropertyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePropertyGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeletePropertyGroups", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePropertyGroups(long[] propertyGroupIds) {
            this.Invoke("DeletePropertyGroups", new object[] {
                        propertyGroupIds});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePropertyGroups(long[] propertyGroupIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePropertyGroups", new object[] {
                        propertyGroupIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeletePropertyGroups(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeletePropertyGroupsAsync(long[] propertyGroupIds) {
            this.DeletePropertyGroupsAsync(propertyGroupIds, null);
        }
        
        /// <remarks/>
        public void DeletePropertyGroupsAsync(long[] propertyGroupIds, object userState) {
            if ((this.DeletePropertyGroupsOperationCompleted == null)) {
                this.DeletePropertyGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePropertyGroupsOperationCompleted);
            }
            this.InvokeAsync("DeletePropertyGroups", new object[] {
                        propertyGroupIds}, this.DeletePropertyGroupsOperationCompleted, userState);
        }
        
        private void OnDeletePropertyGroupsOperationCompleted(object arg) {
            if ((this.DeletePropertyGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePropertyGroupsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/VoidPropertyDefinitions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VoidPropertyDefinitions(long[] propertyDefinitions) {
            this.Invoke("VoidPropertyDefinitions", new object[] {
                        propertyDefinitions});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVoidPropertyDefinitions(long[] propertyDefinitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("VoidPropertyDefinitions", new object[] {
                        propertyDefinitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndVoidPropertyDefinitions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void VoidPropertyDefinitionsAsync(long[] propertyDefinitions) {
            this.VoidPropertyDefinitionsAsync(propertyDefinitions, null);
        }
        
        /// <remarks/>
        public void VoidPropertyDefinitionsAsync(long[] propertyDefinitions, object userState) {
            if ((this.VoidPropertyDefinitionsOperationCompleted == null)) {
                this.VoidPropertyDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVoidPropertyDefinitionsOperationCompleted);
            }
            this.InvokeAsync("VoidPropertyDefinitions", new object[] {
                        propertyDefinitions}, this.VoidPropertyDefinitionsOperationCompleted, userState);
        }
        
        private void OnVoidPropertyDefinitionsOperationCompleted(object arg) {
            if ((this.VoidPropertyDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VoidPropertyDefinitionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UnvoidPropertyDefinitions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnvoidPropertyDefinitions(long[] propertyDefinitions) {
            this.Invoke("UnvoidPropertyDefinitions", new object[] {
                        propertyDefinitions});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnvoidPropertyDefinitions(long[] propertyDefinitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnvoidPropertyDefinitions", new object[] {
                        propertyDefinitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnvoidPropertyDefinitions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UnvoidPropertyDefinitionsAsync(long[] propertyDefinitions) {
            this.UnvoidPropertyDefinitionsAsync(propertyDefinitions, null);
        }
        
        /// <remarks/>
        public void UnvoidPropertyDefinitionsAsync(long[] propertyDefinitions, object userState) {
            if ((this.UnvoidPropertyDefinitionsOperationCompleted == null)) {
                this.UnvoidPropertyDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnvoidPropertyDefinitionsOperationCompleted);
            }
            this.InvokeAsync("UnvoidPropertyDefinitions", new object[] {
                        propertyDefinitions}, this.UnvoidPropertyDefinitionsOperationCompleted, userState);
        }
        
        private void OnUnvoidPropertyDefinitionsOperationCompleted(object arg) {
            if ((this.UnvoidPropertyDefinitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnvoidPropertyDefinitionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DisablePropertyDefinitionsForBasic" +
            "Search", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DisablePropertyDefinitionsForBasicSearch(long[] propertyDefinitions) {
            this.Invoke("DisablePropertyDefinitionsForBasicSearch", new object[] {
                        propertyDefinitions});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDisablePropertyDefinitionsForBasicSearch(long[] propertyDefinitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DisablePropertyDefinitionsForBasicSearch", new object[] {
                        propertyDefinitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDisablePropertyDefinitionsForBasicSearch(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DisablePropertyDefinitionsForBasicSearchAsync(long[] propertyDefinitions) {
            this.DisablePropertyDefinitionsForBasicSearchAsync(propertyDefinitions, null);
        }
        
        /// <remarks/>
        public void DisablePropertyDefinitionsForBasicSearchAsync(long[] propertyDefinitions, object userState) {
            if ((this.DisablePropertyDefinitionsForBasicSearchOperationCompleted == null)) {
                this.DisablePropertyDefinitionsForBasicSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisablePropertyDefinitionsForBasicSearchOperationCompleted);
            }
            this.InvokeAsync("DisablePropertyDefinitionsForBasicSearch", new object[] {
                        propertyDefinitions}, this.DisablePropertyDefinitionsForBasicSearchOperationCompleted, userState);
        }
        
        private void OnDisablePropertyDefinitionsForBasicSearchOperationCompleted(object arg) {
            if ((this.DisablePropertyDefinitionsForBasicSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisablePropertyDefinitionsForBasicSearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/EnablePropertyDefinitionsForBasicS" +
            "earch", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnablePropertyDefinitionsForBasicSearch(long[] propertyDefinitions) {
            this.Invoke("EnablePropertyDefinitionsForBasicSearch", new object[] {
                        propertyDefinitions});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnablePropertyDefinitionsForBasicSearch(long[] propertyDefinitions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EnablePropertyDefinitionsForBasicSearch", new object[] {
                        propertyDefinitions}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnablePropertyDefinitionsForBasicSearch(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void EnablePropertyDefinitionsForBasicSearchAsync(long[] propertyDefinitions) {
            this.EnablePropertyDefinitionsForBasicSearchAsync(propertyDefinitions, null);
        }
        
        /// <remarks/>
        public void EnablePropertyDefinitionsForBasicSearchAsync(long[] propertyDefinitions, object userState) {
            if ((this.EnablePropertyDefinitionsForBasicSearchOperationCompleted == null)) {
                this.EnablePropertyDefinitionsForBasicSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnablePropertyDefinitionsForBasicSearchOperationCompleted);
            }
            this.InvokeAsync("EnablePropertyDefinitionsForBasicSearch", new object[] {
                        propertyDefinitions}, this.EnablePropertyDefinitionsForBasicSearchOperationCompleted, userState);
        }
        
        private void OnEnablePropertyDefinitionsForBasicSearchOperationCompleted(object arg) {
            if ((this.EnablePropertyDefinitionsForBasicSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnablePropertyDefinitionsForBasicSearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAllLabels", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Label[] GetAllLabels() {
            object[] results = this.Invoke("GetAllLabels", new object[0]);
            return ((Label[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllLabels(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllLabels", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public Label[] EndGetAllLabels(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Label[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLabelsAsync() {
            this.GetAllLabelsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllLabelsAsync(object userState) {
            if ((this.GetAllLabelsOperationCompleted == null)) {
                this.GetAllLabelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLabelsOperationCompleted);
            }
            this.InvokeAsync("GetAllLabels", new object[0], this.GetAllLabelsOperationCompleted, userState);
        }
        
        private void OnGetAllLabelsOperationCompleted(object arg) {
            if ((this.GetAllLabelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLabelsCompleted(this, new GetAllLabelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindLabelByName", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Label FindLabelByName(string labelName) {
            object[] results = this.Invoke("FindLabelByName", new object[] {
                        labelName});
            return ((Label)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindLabelByName(string labelName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindLabelByName", new object[] {
                        labelName}, callback, asyncState);
        }
        
        /// <remarks/>
        public Label EndFindLabelByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Label)(results[0]));
        }
        
        /// <remarks/>
        public void FindLabelByNameAsync(string labelName) {
            this.FindLabelByNameAsync(labelName, null);
        }
        
        /// <remarks/>
        public void FindLabelByNameAsync(string labelName, object userState) {
            if ((this.FindLabelByNameOperationCompleted == null)) {
                this.FindLabelByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindLabelByNameOperationCompleted);
            }
            this.InvokeAsync("FindLabelByName", new object[] {
                        labelName}, this.FindLabelByNameOperationCompleted, userState);
        }
        
        private void OnFindLabelByNameOperationCompleted(object arg) {
            if ((this.FindLabelByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindLabelByNameCompleted(this, new FindLabelByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/FindLabelsByNames", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Label[] FindLabelsByNames(string[] labelNames) {
            object[] results = this.Invoke("FindLabelsByNames", new object[] {
                        labelNames});
            return ((Label[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindLabelsByNames(string[] labelNames, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindLabelsByNames", new object[] {
                        labelNames}, callback, asyncState);
        }
        
        /// <remarks/>
        public Label[] EndFindLabelsByNames(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Label[])(results[0]));
        }
        
        /// <remarks/>
        public void FindLabelsByNamesAsync(string[] labelNames) {
            this.FindLabelsByNamesAsync(labelNames, null);
        }
        
        /// <remarks/>
        public void FindLabelsByNamesAsync(string[] labelNames, object userState) {
            if ((this.FindLabelsByNamesOperationCompleted == null)) {
                this.FindLabelsByNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindLabelsByNamesOperationCompleted);
            }
            this.InvokeAsync("FindLabelsByNames", new object[] {
                        labelNames}, this.FindLabelsByNamesOperationCompleted, userState);
        }
        
        private void OnFindLabelsByNamesOperationCompleted(object arg) {
            if ((this.FindLabelsByNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindLabelsByNamesCompleted(this, new FindLabelsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddLabel", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Label AddLabel(long folderId, string labelName, string comment) {
            object[] results = this.Invoke("AddLabel", new object[] {
                        folderId,
                        labelName,
                        comment});
            return ((Label)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddLabel(long folderId, string labelName, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddLabel", new object[] {
                        folderId,
                        labelName,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public Label EndAddLabel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Label)(results[0]));
        }
        
        /// <remarks/>
        public void AddLabelAsync(long folderId, string labelName, string comment) {
            this.AddLabelAsync(folderId, labelName, comment, null);
        }
        
        /// <remarks/>
        public void AddLabelAsync(long folderId, string labelName, string comment, object userState) {
            if ((this.AddLabelOperationCompleted == null)) {
                this.AddLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLabelOperationCompleted);
            }
            this.InvokeAsync("AddLabel", new object[] {
                        folderId,
                        labelName,
                        comment}, this.AddLabelOperationCompleted, userState);
        }
        
        private void OnAddLabelOperationCompleted(object arg) {
            if ((this.AddLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLabelCompleted(this, new AddLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteLabel", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteLabel(long labelId) {
            this.Invoke("DeleteLabel", new object[] {
                        labelId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteLabel(long labelId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteLabel", new object[] {
                        labelId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteLabel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteLabelAsync(long labelId) {
            this.DeleteLabelAsync(labelId, null);
        }
        
        /// <remarks/>
        public void DeleteLabelAsync(long labelId, object userState) {
            if ((this.DeleteLabelOperationCompleted == null)) {
                this.DeleteLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLabelOperationCompleted);
            }
            this.InvokeAsync("DeleteLabel", new object[] {
                        labelId}, this.DeleteLabelOperationCompleted, userState);
        }
        
        private void OnDeleteLabelOperationCompleted(object arg) {
            if ((this.DeleteLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UpdateLabel", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Label UpdateLabel(long labelId, string labelName, string comment) {
            object[] results = this.Invoke("UpdateLabel", new object[] {
                        labelId,
                        labelName,
                        comment});
            return ((Label)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateLabel(long labelId, string labelName, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLabel", new object[] {
                        labelId,
                        labelName,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public Label EndUpdateLabel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Label)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLabelAsync(long labelId, string labelName, string comment) {
            this.UpdateLabelAsync(labelId, labelName, comment, null);
        }
        
        /// <remarks/>
        public void UpdateLabelAsync(long labelId, string labelName, string comment, object userState) {
            if ((this.UpdateLabelOperationCompleted == null)) {
                this.UpdateLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLabelOperationCompleted);
            }
            this.InvokeAsync("UpdateLabel", new object[] {
                        labelId,
                        labelName,
                        comment}, this.UpdateLabelOperationCompleted, userState);
        }
        
        private void OnUpdateLabelOperationCompleted(object arg) {
            if ((this.UpdateLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLabelCompleted(this, new UpdateLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileFoldersByLabelId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileFolder[] GetFileFoldersByLabelId(long labelId) {
            object[] results = this.Invoke("GetFileFoldersByLabelId", new object[] {
                        labelId});
            return ((FileFolder[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileFoldersByLabelId(long labelId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileFoldersByLabelId", new object[] {
                        labelId}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileFolder[] EndGetFileFoldersByLabelId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileFolder[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileFoldersByLabelIdAsync(long labelId) {
            this.GetFileFoldersByLabelIdAsync(labelId, null);
        }
        
        /// <remarks/>
        public void GetFileFoldersByLabelIdAsync(long labelId, object userState) {
            if ((this.GetFileFoldersByLabelIdOperationCompleted == null)) {
                this.GetFileFoldersByLabelIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileFoldersByLabelIdOperationCompleted);
            }
            this.InvokeAsync("GetFileFoldersByLabelId", new object[] {
                        labelId}, this.GetFileFoldersByLabelIdOperationCompleted, userState);
        }
        
        private void OnGetFileFoldersByLabelIdOperationCompleted(object arg) {
            if ((this.GetFileFoldersByLabelIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileFoldersByLabelIdCompleted(this, new GetFileFoldersByLabelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/MoveFolder", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveFolder(long folderId, long newParentFolderId) {
            this.Invoke("MoveFolder", new object[] {
                        folderId,
                        newParentFolderId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveFolder(long folderId, long newParentFolderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveFolder", new object[] {
                        folderId,
                        newParentFolderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void MoveFolderAsync(long folderId, long newParentFolderId) {
            this.MoveFolderAsync(folderId, newParentFolderId, null);
        }
        
        /// <remarks/>
        public void MoveFolderAsync(long folderId, long newParentFolderId, object userState) {
            if ((this.MoveFolderOperationCompleted == null)) {
                this.MoveFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveFolderOperationCompleted);
            }
            this.InvokeAsync("MoveFolder", new object[] {
                        folderId,
                        newParentFolderId}, this.MoveFolderOperationCompleted, userState);
        }
        
        private void OnMoveFolderOperationCompleted(object arg) {
            if ((this.MoveFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderMoveRestrictions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocRestric[] GetFolderMoveRestrictions(long folderId, long newParentFolderId) {
            object[] results = this.Invoke("GetFolderMoveRestrictions", new object[] {
                        folderId,
                        newParentFolderId});
            return ((DocRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderMoveRestrictions(long folderId, long newParentFolderId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderMoveRestrictions", new object[] {
                        folderId,
                        newParentFolderId}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocRestric[] EndGetFolderMoveRestrictions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderMoveRestrictionsAsync(long folderId, long newParentFolderId) {
            this.GetFolderMoveRestrictionsAsync(folderId, newParentFolderId, null);
        }
        
        /// <remarks/>
        public void GetFolderMoveRestrictionsAsync(long folderId, long newParentFolderId, object userState) {
            if ((this.GetFolderMoveRestrictionsOperationCompleted == null)) {
                this.GetFolderMoveRestrictionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderMoveRestrictionsOperationCompleted);
            }
            this.InvokeAsync("GetFolderMoveRestrictions", new object[] {
                        folderId,
                        newParentFolderId}, this.GetFolderMoveRestrictionsOperationCompleted, userState);
        }
        
        private void OnGetFolderMoveRestrictionsOperationCompleted(object arg) {
            if ((this.GetFolderMoveRestrictionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderMoveRestrictionsCompleted(this, new GetFolderMoveRestrictionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFolderRenameRestrictions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocRestric[] GetFolderRenameRestrictions(long folderId, string newFolderName) {
            object[] results = this.Invoke("GetFolderRenameRestrictions", new object[] {
                        folderId,
                        newFolderName});
            return ((DocRestric[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolderRenameRestrictions(long folderId, string newFolderName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolderRenameRestrictions", new object[] {
                        folderId,
                        newFolderName}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocRestric[] EndGetFolderRenameRestrictions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderRenameRestrictionsAsync(long folderId, string newFolderName) {
            this.GetFolderRenameRestrictionsAsync(folderId, newFolderName, null);
        }
        
        /// <remarks/>
        public void GetFolderRenameRestrictionsAsync(long folderId, string newFolderName, object userState) {
            if ((this.GetFolderRenameRestrictionsOperationCompleted == null)) {
                this.GetFolderRenameRestrictionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderRenameRestrictionsOperationCompleted);
            }
            this.InvokeAsync("GetFolderRenameRestrictions", new object[] {
                        folderId,
                        newFolderName}, this.GetFolderRenameRestrictionsOperationCompleted, userState);
        }
        
        private void OnGetFolderRenameRestrictionsOperationCompleted(object arg) {
            if ((this.GetFolderRenameRestrictionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderRenameRestrictionsCompleted(this, new GetFolderRenameRestrictionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetUniqueFileNameRequired", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUniqueFileNameRequired() {
            object[] results = this.Invoke("GetUniqueFileNameRequired", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUniqueFileNameRequired(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUniqueFileNameRequired", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetUniqueFileNameRequired(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUniqueFileNameRequiredAsync() {
            this.GetUniqueFileNameRequiredAsync(null);
        }
        
        /// <remarks/>
        public void GetUniqueFileNameRequiredAsync(object userState) {
            if ((this.GetUniqueFileNameRequiredOperationCompleted == null)) {
                this.GetUniqueFileNameRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUniqueFileNameRequiredOperationCompleted);
            }
            this.InvokeAsync("GetUniqueFileNameRequired", new object[0], this.GetUniqueFileNameRequiredOperationCompleted, userState);
        }
        
        private void OnGetUniqueFileNameRequiredOperationCompleted(object arg) {
            if ((this.GetUniqueFileNameRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUniqueFileNameRequiredCompleted(this, new GetUniqueFileNameRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetUniqueFileNameRequired", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUniqueFileNameRequired(bool required) {
            this.Invoke("SetUniqueFileNameRequired", new object[] {
                        required});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUniqueFileNameRequired(bool required, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetUniqueFileNameRequired", new object[] {
                        required}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetUniqueFileNameRequired(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetUniqueFileNameRequiredAsync(bool required) {
            this.SetUniqueFileNameRequiredAsync(required, null);
        }
        
        /// <remarks/>
        public void SetUniqueFileNameRequiredAsync(bool required, object userState) {
            if ((this.SetUniqueFileNameRequiredOperationCompleted == null)) {
                this.SetUniqueFileNameRequiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUniqueFileNameRequiredOperationCompleted);
            }
            this.InvokeAsync("SetUniqueFileNameRequired", new object[] {
                        required}, this.SetUniqueFileNameRequiredOperationCompleted, userState);
        }
        
        private void OnSetUniqueFileNameRequiredOperationCompleted(object arg) {
            if ((this.SetUniqueFileNameRequiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUniqueFileNameRequiredCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetEnableDWFAttachment", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEnableDWFAttachment() {
            object[] results = this.Invoke("GetEnableDWFAttachment", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEnableDWFAttachment(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEnableDWFAttachment", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetEnableDWFAttachment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnableDWFAttachmentAsync() {
            this.GetEnableDWFAttachmentAsync(null);
        }
        
        /// <remarks/>
        public void GetEnableDWFAttachmentAsync(object userState) {
            if ((this.GetEnableDWFAttachmentOperationCompleted == null)) {
                this.GetEnableDWFAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnableDWFAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetEnableDWFAttachment", new object[0], this.GetEnableDWFAttachmentOperationCompleted, userState);
        }
        
        private void OnGetEnableDWFAttachmentOperationCompleted(object arg) {
            if ((this.GetEnableDWFAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnableDWFAttachmentCompleted(this, new GetEnableDWFAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetEnableDWFAttachment", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEnableDWFAttachment(bool enabled) {
            this.Invoke("SetEnableDWFAttachment", new object[] {
                        enabled});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetEnableDWFAttachment(bool enabled, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetEnableDWFAttachment", new object[] {
                        enabled}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetEnableDWFAttachment(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetEnableDWFAttachmentAsync(bool enabled) {
            this.SetEnableDWFAttachmentAsync(enabled, null);
        }
        
        /// <remarks/>
        public void SetEnableDWFAttachmentAsync(bool enabled, object userState) {
            if ((this.SetEnableDWFAttachmentOperationCompleted == null)) {
                this.SetEnableDWFAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEnableDWFAttachmentOperationCompleted);
            }
            this.InvokeAsync("SetEnableDWFAttachment", new object[] {
                        enabled}, this.SetEnableDWFAttachmentOperationCompleted, userState);
        }
        
        private void OnSetEnableDWFAttachmentOperationCompleted(object arg) {
            if ((this.SetEnableDWFAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEnableDWFAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetDWFPublishFolderLocation", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDWFPublishFolderLocation() {
            object[] results = this.Invoke("GetDWFPublishFolderLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDWFPublishFolderLocation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDWFPublishFolderLocation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetDWFPublishFolderLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDWFPublishFolderLocationAsync() {
            this.GetDWFPublishFolderLocationAsync(null);
        }
        
        /// <remarks/>
        public void GetDWFPublishFolderLocationAsync(object userState) {
            if ((this.GetDWFPublishFolderLocationOperationCompleted == null)) {
                this.GetDWFPublishFolderLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDWFPublishFolderLocationOperationCompleted);
            }
            this.InvokeAsync("GetDWFPublishFolderLocation", new object[0], this.GetDWFPublishFolderLocationOperationCompleted, userState);
        }
        
        private void OnGetDWFPublishFolderLocationOperationCompleted(object arg) {
            if ((this.GetDWFPublishFolderLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDWFPublishFolderLocationCompleted(this, new GetDWFPublishFolderLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetDWFPublishFolderLocation", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDWFPublishFolderLocation(string location) {
            this.Invoke("SetDWFPublishFolderLocation", new object[] {
                        location});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDWFPublishFolderLocation(string location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDWFPublishFolderLocation", new object[] {
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDWFPublishFolderLocation(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetDWFPublishFolderLocationAsync(string location) {
            this.SetDWFPublishFolderLocationAsync(location, null);
        }
        
        /// <remarks/>
        public void SetDWFPublishFolderLocationAsync(string location, object userState) {
            if ((this.SetDWFPublishFolderLocationOperationCompleted == null)) {
                this.SetDWFPublishFolderLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDWFPublishFolderLocationOperationCompleted);
            }
            this.InvokeAsync("SetDWFPublishFolderLocation", new object[] {
                        location}, this.SetDWFPublishFolderLocationOperationCompleted, userState);
        }
        
        private void OnSetDWFPublishFolderLocationOperationCompleted(object arg) {
            if ((this.SetDWFPublishFolderLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDWFPublishFolderLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetDWFPublishPreserveFolderHierarc" +
            "hy", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDWFPublishPreserveFolderHierarchy() {
            object[] results = this.Invoke("GetDWFPublishPreserveFolderHierarchy", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDWFPublishPreserveFolderHierarchy(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDWFPublishPreserveFolderHierarchy", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetDWFPublishPreserveFolderHierarchy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDWFPublishPreserveFolderHierarchyAsync() {
            this.GetDWFPublishPreserveFolderHierarchyAsync(null);
        }
        
        /// <remarks/>
        public void GetDWFPublishPreserveFolderHierarchyAsync(object userState) {
            if ((this.GetDWFPublishPreserveFolderHierarchyOperationCompleted == null)) {
                this.GetDWFPublishPreserveFolderHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDWFPublishPreserveFolderHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetDWFPublishPreserveFolderHierarchy", new object[0], this.GetDWFPublishPreserveFolderHierarchyOperationCompleted, userState);
        }
        
        private void OnGetDWFPublishPreserveFolderHierarchyOperationCompleted(object arg) {
            if ((this.GetDWFPublishPreserveFolderHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDWFPublishPreserveFolderHierarchyCompleted(this, new GetDWFPublishPreserveFolderHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetDWFPublishPreserveFolderHierarc" +
            "hy", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDWFPublishPreserveFolderHierarchy(bool preserve) {
            this.Invoke("SetDWFPublishPreserveFolderHierarchy", new object[] {
                        preserve});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDWFPublishPreserveFolderHierarchy(bool preserve, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDWFPublishPreserveFolderHierarchy", new object[] {
                        preserve}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDWFPublishPreserveFolderHierarchy(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetDWFPublishPreserveFolderHierarchyAsync(bool preserve) {
            this.SetDWFPublishPreserveFolderHierarchyAsync(preserve, null);
        }
        
        /// <remarks/>
        public void SetDWFPublishPreserveFolderHierarchyAsync(bool preserve, object userState) {
            if ((this.SetDWFPublishPreserveFolderHierarchyOperationCompleted == null)) {
                this.SetDWFPublishPreserveFolderHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDWFPublishPreserveFolderHierarchyOperationCompleted);
            }
            this.InvokeAsync("SetDWFPublishPreserveFolderHierarchy", new object[] {
                        preserve}, this.SetDWFPublishPreserveFolderHierarchyOperationCompleted, userState);
        }
        
        private void OnSetDWFPublishPreserveFolderHierarchyOperationCompleted(object arg) {
            if ((this.SetDWFPublishPreserveFolderHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDWFPublishPreserveFolderHierarchyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetEnforceWorkingFolder", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEnforceWorkingFolder() {
            object[] results = this.Invoke("GetEnforceWorkingFolder", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetEnforceWorkingFolder(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetEnforceWorkingFolder", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetEnforceWorkingFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnforceWorkingFolderAsync() {
            this.GetEnforceWorkingFolderAsync(null);
        }
        
        /// <remarks/>
        public void GetEnforceWorkingFolderAsync(object userState) {
            if ((this.GetEnforceWorkingFolderOperationCompleted == null)) {
                this.GetEnforceWorkingFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnforceWorkingFolderOperationCompleted);
            }
            this.InvokeAsync("GetEnforceWorkingFolder", new object[0], this.GetEnforceWorkingFolderOperationCompleted, userState);
        }
        
        private void OnGetEnforceWorkingFolderOperationCompleted(object arg) {
            if ((this.GetEnforceWorkingFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnforceWorkingFolderCompleted(this, new GetEnforceWorkingFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetEnforceWorkingFolder", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetEnforceWorkingFolder(bool enforce) {
            this.Invoke("SetEnforceWorkingFolder", new object[] {
                        enforce});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetEnforceWorkingFolder(bool enforce, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetEnforceWorkingFolder", new object[] {
                        enforce}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetEnforceWorkingFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetEnforceWorkingFolderAsync(bool enforce) {
            this.SetEnforceWorkingFolderAsync(enforce, null);
        }
        
        /// <remarks/>
        public void SetEnforceWorkingFolderAsync(bool enforce, object userState) {
            if ((this.SetEnforceWorkingFolderOperationCompleted == null)) {
                this.SetEnforceWorkingFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEnforceWorkingFolderOperationCompleted);
            }
            this.InvokeAsync("SetEnforceWorkingFolder", new object[] {
                        enforce}, this.SetEnforceWorkingFolderOperationCompleted, userState);
        }
        
        private void OnSetEnforceWorkingFolderOperationCompleted(object arg) {
            if ((this.SetEnforceWorkingFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEnforceWorkingFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetRequiredWorkingFolderLocation", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRequiredWorkingFolderLocation() {
            object[] results = this.Invoke("GetRequiredWorkingFolderLocation", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRequiredWorkingFolderLocation(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRequiredWorkingFolderLocation", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetRequiredWorkingFolderLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequiredWorkingFolderLocationAsync() {
            this.GetRequiredWorkingFolderLocationAsync(null);
        }
        
        /// <remarks/>
        public void GetRequiredWorkingFolderLocationAsync(object userState) {
            if ((this.GetRequiredWorkingFolderLocationOperationCompleted == null)) {
                this.GetRequiredWorkingFolderLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequiredWorkingFolderLocationOperationCompleted);
            }
            this.InvokeAsync("GetRequiredWorkingFolderLocation", new object[0], this.GetRequiredWorkingFolderLocationOperationCompleted, userState);
        }
        
        private void OnGetRequiredWorkingFolderLocationOperationCompleted(object arg) {
            if ((this.GetRequiredWorkingFolderLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequiredWorkingFolderLocationCompleted(this, new GetRequiredWorkingFolderLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetRequiredWorkingFolderLocation", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRequiredWorkingFolderLocation(string location) {
            this.Invoke("SetRequiredWorkingFolderLocation", new object[] {
                        location});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetRequiredWorkingFolderLocation(string location, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetRequiredWorkingFolderLocation", new object[] {
                        location}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetRequiredWorkingFolderLocation(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetRequiredWorkingFolderLocationAsync(string location) {
            this.SetRequiredWorkingFolderLocationAsync(location, null);
        }
        
        /// <remarks/>
        public void SetRequiredWorkingFolderLocationAsync(string location, object userState) {
            if ((this.SetRequiredWorkingFolderLocationOperationCompleted == null)) {
                this.SetRequiredWorkingFolderLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRequiredWorkingFolderLocationOperationCompleted);
            }
            this.InvokeAsync("SetRequiredWorkingFolderLocation", new object[] {
                        location}, this.SetRequiredWorkingFolderLocationOperationCompleted, userState);
        }
        
        private void OnSetRequiredWorkingFolderLocationOperationCompleted(object arg) {
            if ((this.SetRequiredWorkingFolderLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRequiredWorkingFolderLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetWorkspaceSyncFileLimit", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public uint GetWorkspaceSyncFileLimit() {
            object[] results = this.Invoke("GetWorkspaceSyncFileLimit", new object[0]);
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWorkspaceSyncFileLimit(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWorkspaceSyncFileLimit", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public uint EndGetWorkspaceSyncFileLimit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((uint)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkspaceSyncFileLimitAsync() {
            this.GetWorkspaceSyncFileLimitAsync(null);
        }
        
        /// <remarks/>
        public void GetWorkspaceSyncFileLimitAsync(object userState) {
            if ((this.GetWorkspaceSyncFileLimitOperationCompleted == null)) {
                this.GetWorkspaceSyncFileLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkspaceSyncFileLimitOperationCompleted);
            }
            this.InvokeAsync("GetWorkspaceSyncFileLimit", new object[0], this.GetWorkspaceSyncFileLimitOperationCompleted, userState);
        }
        
        private void OnGetWorkspaceSyncFileLimitOperationCompleted(object arg) {
            if ((this.GetWorkspaceSyncFileLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkspaceSyncFileLimitCompleted(this, new GetWorkspaceSyncFileLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetWorkspaceSyncFileLimit", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetWorkspaceSyncFileLimit(uint limit) {
            this.Invoke("SetWorkspaceSyncFileLimit", new object[] {
                        limit});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetWorkspaceSyncFileLimit(uint limit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetWorkspaceSyncFileLimit", new object[] {
                        limit}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetWorkspaceSyncFileLimit(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetWorkspaceSyncFileLimitAsync(uint limit) {
            this.SetWorkspaceSyncFileLimitAsync(limit, null);
        }
        
        /// <remarks/>
        public void SetWorkspaceSyncFileLimitAsync(uint limit, object userState) {
            if ((this.SetWorkspaceSyncFileLimitOperationCompleted == null)) {
                this.SetWorkspaceSyncFileLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWorkspaceSyncFileLimitOperationCompleted);
            }
            this.InvokeAsync("SetWorkspaceSyncFileLimit", new object[] {
                        limit}, this.SetWorkspaceSyncFileLimitOperationCompleted, userState);
        }
        
        private void OnSetWorkspaceSyncFileLimitOperationCompleted(object arg) {
            if ((this.SetWorkspaceSyncFileLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWorkspaceSyncFileLimitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetBreakDesignVisualizationLinkCom" +
            "mandList", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BreakDesignVisualizationLinkCommandList GetBreakDesignVisualizationLinkCommandList() {
            object[] results = this.Invoke("GetBreakDesignVisualizationLinkCommandList", new object[0]);
            return ((BreakDesignVisualizationLinkCommandList)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBreakDesignVisualizationLinkCommandList(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBreakDesignVisualizationLinkCommandList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public BreakDesignVisualizationLinkCommandList EndGetBreakDesignVisualizationLinkCommandList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BreakDesignVisualizationLinkCommandList)(results[0]));
        }
        
        /// <remarks/>
        public void GetBreakDesignVisualizationLinkCommandListAsync() {
            this.GetBreakDesignVisualizationLinkCommandListAsync(null);
        }
        
        /// <remarks/>
        public void GetBreakDesignVisualizationLinkCommandListAsync(object userState) {
            if ((this.GetBreakDesignVisualizationLinkCommandListOperationCompleted == null)) {
                this.GetBreakDesignVisualizationLinkCommandListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBreakDesignVisualizationLinkCommandListOperationCompleted);
            }
            this.InvokeAsync("GetBreakDesignVisualizationLinkCommandList", new object[0], this.GetBreakDesignVisualizationLinkCommandListOperationCompleted, userState);
        }
        
        private void OnGetBreakDesignVisualizationLinkCommandListOperationCompleted(object arg) {
            if ((this.GetBreakDesignVisualizationLinkCommandListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBreakDesignVisualizationLinkCommandListCompleted(this, new GetBreakDesignVisualizationLinkCommandListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetBreakDesignVisualizationLinkCom" +
            "mandList", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetBreakDesignVisualizationLinkCommandList(BreakDesignVisualizationLinkCommandList commandList) {
            this.Invoke("SetBreakDesignVisualizationLinkCommandList", new object[] {
                        commandList});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetBreakDesignVisualizationLinkCommandList(BreakDesignVisualizationLinkCommandList commandList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetBreakDesignVisualizationLinkCommandList", new object[] {
                        commandList}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetBreakDesignVisualizationLinkCommandList(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetBreakDesignVisualizationLinkCommandListAsync(BreakDesignVisualizationLinkCommandList commandList) {
            this.SetBreakDesignVisualizationLinkCommandListAsync(commandList, null);
        }
        
        /// <remarks/>
        public void SetBreakDesignVisualizationLinkCommandListAsync(BreakDesignVisualizationLinkCommandList commandList, object userState) {
            if ((this.SetBreakDesignVisualizationLinkCommandListOperationCompleted == null)) {
                this.SetBreakDesignVisualizationLinkCommandListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBreakDesignVisualizationLinkCommandListOperationCompleted);
            }
            this.InvokeAsync("SetBreakDesignVisualizationLinkCommandList", new object[] {
                        commandList}, this.SetBreakDesignVisualizationLinkCommandListOperationCompleted, userState);
        }
        
        private void OnSetBreakDesignVisualizationLinkCommandListOperationCompleted(object arg) {
            if ((this.SetBreakDesignVisualizationLinkCommandListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBreakDesignVisualizationLinkCommandListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetBlockExplorerDesignFileCheckin", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetBlockExplorerDesignFileCheckin() {
            object[] results = this.Invoke("GetBlockExplorerDesignFileCheckin", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBlockExplorerDesignFileCheckin(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBlockExplorerDesignFileCheckin", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetBlockExplorerDesignFileCheckin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlockExplorerDesignFileCheckinAsync() {
            this.GetBlockExplorerDesignFileCheckinAsync(null);
        }
        
        /// <remarks/>
        public void GetBlockExplorerDesignFileCheckinAsync(object userState) {
            if ((this.GetBlockExplorerDesignFileCheckinOperationCompleted == null)) {
                this.GetBlockExplorerDesignFileCheckinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlockExplorerDesignFileCheckinOperationCompleted);
            }
            this.InvokeAsync("GetBlockExplorerDesignFileCheckin", new object[0], this.GetBlockExplorerDesignFileCheckinOperationCompleted, userState);
        }
        
        private void OnGetBlockExplorerDesignFileCheckinOperationCompleted(object arg) {
            if ((this.GetBlockExplorerDesignFileCheckinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlockExplorerDesignFileCheckinCompleted(this, new GetBlockExplorerDesignFileCheckinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetBlockExplorerDesignFileCheckin", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetBlockExplorerDesignFileCheckin(bool blockCheckin) {
            this.Invoke("SetBlockExplorerDesignFileCheckin", new object[] {
                        blockCheckin});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetBlockExplorerDesignFileCheckin(bool blockCheckin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetBlockExplorerDesignFileCheckin", new object[] {
                        blockCheckin}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetBlockExplorerDesignFileCheckin(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetBlockExplorerDesignFileCheckinAsync(bool blockCheckin) {
            this.SetBlockExplorerDesignFileCheckinAsync(blockCheckin, null);
        }
        
        /// <remarks/>
        public void SetBlockExplorerDesignFileCheckinAsync(bool blockCheckin, object userState) {
            if ((this.SetBlockExplorerDesignFileCheckinOperationCompleted == null)) {
                this.SetBlockExplorerDesignFileCheckinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetBlockExplorerDesignFileCheckinOperationCompleted);
            }
            this.InvokeAsync("SetBlockExplorerDesignFileCheckin", new object[] {
                        blockCheckin}, this.SetBlockExplorerDesignFileCheckinOperationCompleted, userState);
        }
        
        private void OnSetBlockExplorerDesignFileCheckinOperationCompleted(object arg) {
            if ((this.SetBlockExplorerDesignFileCheckinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetBlockExplorerDesignFileCheckinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileAssociationsByIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileAssocArray[] GetFileAssociationsByIds(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            object[] results = this.Invoke("GetFileAssociationsByIds", new object[] {
                        fileIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden});
            return ((FileAssocArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileAssociationsByIds(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileAssociationsByIds", new object[] {
                        fileIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileAssocArray[] EndGetFileAssociationsByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileAssocArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAssociationsByIdsAsync(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            this.GetFileAssociationsByIdsAsync(fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, null);
        }
        
        /// <remarks/>
        public void GetFileAssociationsByIdsAsync(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, object userState) {
            if ((this.GetFileAssociationsByIdsOperationCompleted == null)) {
                this.GetFileAssociationsByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileAssociationsByIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileAssociationsByIds", new object[] {
                        fileIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, this.GetFileAssociationsByIdsOperationCompleted, userState);
        }
        
        private void OnGetFileAssociationsByIdsOperationCompleted(object arg) {
            if ((this.GetFileAssociationsByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileAssociationsByIdsCompleted(this, new GetFileAssociationsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestFileAssociationsByMasterI" +
            "ds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileAssocArray[] GetLatestFileAssociationsByMasterIds(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            object[] results = this.Invoke("GetLatestFileAssociationsByMasterIds", new object[] {
                        fileMasterIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden});
            return ((FileAssocArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestFileAssociationsByMasterIds(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestFileAssociationsByMasterIds", new object[] {
                        fileMasterIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileAssocArray[] EndGetLatestFileAssociationsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileAssocArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestFileAssociationsByMasterIdsAsync(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            this.GetLatestFileAssociationsByMasterIdsAsync(fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, null);
        }
        
        /// <remarks/>
        public void GetLatestFileAssociationsByMasterIdsAsync(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, object userState) {
            if ((this.GetLatestFileAssociationsByMasterIdsOperationCompleted == null)) {
                this.GetLatestFileAssociationsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestFileAssociationsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetLatestFileAssociationsByMasterIds", new object[] {
                        fileMasterIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, this.GetLatestFileAssociationsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetLatestFileAssociationsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetLatestFileAssociationsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestFileAssociationsByMasterIdsCompleted(this, new GetLatestFileAssociationsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAssociatedFilePathsByIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilePathArray[] GetAssociatedFilePathsByIds(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            object[] results = this.Invoke("GetAssociatedFilePathsByIds", new object[] {
                        fileIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden});
            return ((FilePathArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAssociatedFilePathsByIds(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAssociatedFilePathsByIds", new object[] {
                        fileIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilePathArray[] EndGetAssociatedFilePathsByIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilePathArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatedFilePathsByIdsAsync(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            this.GetAssociatedFilePathsByIdsAsync(fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, null);
        }
        
        /// <remarks/>
        public void GetAssociatedFilePathsByIdsAsync(long[] fileIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, object userState) {
            if ((this.GetAssociatedFilePathsByIdsOperationCompleted == null)) {
                this.GetAssociatedFilePathsByIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatedFilePathsByIdsOperationCompleted);
            }
            this.InvokeAsync("GetAssociatedFilePathsByIds", new object[] {
                        fileIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, this.GetAssociatedFilePathsByIdsOperationCompleted, userState);
        }
        
        private void OnGetAssociatedFilePathsByIdsOperationCompleted(object arg) {
            if ((this.GetAssociatedFilePathsByIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatedFilePathsByIdsCompleted(this, new GetAssociatedFilePathsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetLatestAssociatedFilePathsByMast" +
            "erIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FilePathArray[] GetLatestAssociatedFilePathsByMasterIds(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            object[] results = this.Invoke("GetLatestAssociatedFilePathsByMasterIds", new object[] {
                        fileMasterIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden});
            return ((FilePathArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLatestAssociatedFilePathsByMasterIds(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLatestAssociatedFilePathsByMasterIds", new object[] {
                        fileMasterIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, callback, asyncState);
        }
        
        /// <remarks/>
        public FilePathArray[] EndGetLatestAssociatedFilePathsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FilePathArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestAssociatedFilePathsByMasterIdsAsync(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden) {
            this.GetLatestAssociatedFilePathsByMasterIdsAsync(fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, null);
        }
        
        /// <remarks/>
        public void GetLatestAssociatedFilePathsByMasterIdsAsync(long[] fileMasterIds, FileAssociationTypeEnum parentAssociationType, bool parentRecurse, FileAssociationTypeEnum childAssociationType, bool childRecurse, bool includeRelatedDocuments, bool includeHidden, object userState) {
            if ((this.GetLatestAssociatedFilePathsByMasterIdsOperationCompleted == null)) {
                this.GetLatestAssociatedFilePathsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestAssociatedFilePathsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetLatestAssociatedFilePathsByMasterIds", new object[] {
                        fileMasterIds,
                        parentAssociationType,
                        parentRecurse,
                        childAssociationType,
                        childRecurse,
                        includeRelatedDocuments,
                        includeHidden}, this.GetLatestAssociatedFilePathsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetLatestAssociatedFilePathsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetLatestAssociatedFilePathsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestAssociatedFilePathsByMasterIdsCompleted(this, new GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/ValidateBOMByFileId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateBOMByFileId(long fileId) {
            object[] results = this.Invoke("ValidateBOMByFileId", new object[] {
                        fileId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidateBOMByFileId(long fileId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidateBOMByFileId", new object[] {
                        fileId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndValidateBOMByFileId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateBOMByFileIdAsync(long fileId) {
            this.ValidateBOMByFileIdAsync(fileId, null);
        }
        
        /// <remarks/>
        public void ValidateBOMByFileIdAsync(long fileId, object userState) {
            if ((this.ValidateBOMByFileIdOperationCompleted == null)) {
                this.ValidateBOMByFileIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBOMByFileIdOperationCompleted);
            }
            this.InvokeAsync("ValidateBOMByFileId", new object[] {
                        fileId}, this.ValidateBOMByFileIdOperationCompleted, userState);
        }
        
        private void OnValidateBOMByFileIdOperationCompleted(object arg) {
            if ((this.ValidateBOMByFileIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBOMByFileIdCompleted(this, new ValidateBOMByFileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetComponentProperties", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CompPropInfo GetComponentProperties(long fileId, string uniqueId) {
            object[] results = this.Invoke("GetComponentProperties", new object[] {
                        fileId,
                        uniqueId});
            return ((CompPropInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetComponentProperties(long fileId, string uniqueId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetComponentProperties", new object[] {
                        fileId,
                        uniqueId}, callback, asyncState);
        }
        
        /// <remarks/>
        public CompPropInfo EndGetComponentProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CompPropInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetComponentPropertiesAsync(long fileId, string uniqueId) {
            this.GetComponentPropertiesAsync(fileId, uniqueId, null);
        }
        
        /// <remarks/>
        public void GetComponentPropertiesAsync(long fileId, string uniqueId, object userState) {
            if ((this.GetComponentPropertiesOperationCompleted == null)) {
                this.GetComponentPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComponentPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetComponentProperties", new object[] {
                        fileId,
                        uniqueId}, this.GetComponentPropertiesOperationCompleted, userState);
        }
        
        private void OnGetComponentPropertiesOperationCompleted(object arg) {
            if ((this.GetComponentPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComponentPropertiesCompleted(this, new GetComponentPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddComponentCustomPropertyDefiniti" +
            "on", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PropDef AddComponentCustomPropertyDefinition(string name, string dataType) {
            object[] results = this.Invoke("AddComponentCustomPropertyDefinition", new object[] {
                        name,
                        dataType});
            return ((PropDef)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddComponentCustomPropertyDefinition(string name, string dataType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddComponentCustomPropertyDefinition", new object[] {
                        name,
                        dataType}, callback, asyncState);
        }
        
        /// <remarks/>
        public PropDef EndAddComponentCustomPropertyDefinition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PropDef)(results[0]));
        }
        
        /// <remarks/>
        public void AddComponentCustomPropertyDefinitionAsync(string name, string dataType) {
            this.AddComponentCustomPropertyDefinitionAsync(name, dataType, null);
        }
        
        /// <remarks/>
        public void AddComponentCustomPropertyDefinitionAsync(string name, string dataType, object userState) {
            if ((this.AddComponentCustomPropertyDefinitionOperationCompleted == null)) {
                this.AddComponentCustomPropertyDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddComponentCustomPropertyDefinitionOperationCompleted);
            }
            this.InvokeAsync("AddComponentCustomPropertyDefinition", new object[] {
                        name,
                        dataType}, this.AddComponentCustomPropertyDefinitionOperationCompleted, userState);
        }
        
        private void OnAddComponentCustomPropertyDefinitionOperationCompleted(object arg) {
            if ((this.AddComponentCustomPropertyDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddComponentCustomPropertyDefinitionCompleted(this, new AddComponentCustomPropertyDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteComponentCustomPropertyDefin" +
            "ition", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteComponentCustomPropertyDefinition(long propertyDefId) {
            this.Invoke("DeleteComponentCustomPropertyDefinition", new object[] {
                        propertyDefId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteComponentCustomPropertyDefinition(long propertyDefId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteComponentCustomPropertyDefinition", new object[] {
                        propertyDefId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteComponentCustomPropertyDefinition(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteComponentCustomPropertyDefinitionAsync(long propertyDefId) {
            this.DeleteComponentCustomPropertyDefinitionAsync(propertyDefId, null);
        }
        
        /// <remarks/>
        public void DeleteComponentCustomPropertyDefinitionAsync(long propertyDefId, object userState) {
            if ((this.DeleteComponentCustomPropertyDefinitionOperationCompleted == null)) {
                this.DeleteComponentCustomPropertyDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteComponentCustomPropertyDefinitionOperationCompleted);
            }
            this.InvokeAsync("DeleteComponentCustomPropertyDefinition", new object[] {
                        propertyDefId}, this.DeleteComponentCustomPropertyDefinitionOperationCompleted, userState);
        }
        
        private void OnDeleteComponentCustomPropertyDefinitionOperationCompleted(object arg) {
            if ((this.DeleteComponentCustomPropertyDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteComponentCustomPropertyDefinitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileVersionDeleteRestrictionsBy" +
            "MasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelRestricEx[] GetFileVersionDeleteRestrictionsByMasterIds(long[] fileMasterIds, int keepCount, int minAge, string comment) {
            object[] results = this.Invoke("GetFileVersionDeleteRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment});
            return ((FileDelRestricEx[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileVersionDeleteRestrictionsByMasterIds(long[] fileMasterIds, int keepCount, int minAge, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileVersionDeleteRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelRestricEx[] EndGetFileVersionDeleteRestrictionsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelRestricEx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileVersionDeleteRestrictionsByMasterIdsAsync(long[] fileMasterIds, int keepCount, int minAge, string comment) {
            this.GetFileVersionDeleteRestrictionsByMasterIdsAsync(fileMasterIds, keepCount, minAge, comment, null);
        }
        
        /// <remarks/>
        public void GetFileVersionDeleteRestrictionsByMasterIdsAsync(long[] fileMasterIds, int keepCount, int minAge, string comment, object userState) {
            if ((this.GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted == null)) {
                this.GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileVersionDeleteRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment}, this.GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetFileVersionDeleteRestrictionsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileVersionDeleteRestrictionsByMasterIdsCompleted(this, new GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileVersionsByMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelStatus[] DeleteFileVersionsByMasterIds(long[] fileMasterIds, int keepCount, int minAge, string comment) {
            object[] results = this.Invoke("DeleteFileVersionsByMasterIds", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment});
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileVersionsByMasterIds(long[] fileMasterIds, int keepCount, int minAge, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileVersionsByMasterIds", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelStatus[] EndDeleteFileVersionsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileVersionsByMasterIdsAsync(long[] fileMasterIds, int keepCount, int minAge, string comment) {
            this.DeleteFileVersionsByMasterIdsAsync(fileMasterIds, keepCount, minAge, comment, null);
        }
        
        /// <remarks/>
        public void DeleteFileVersionsByMasterIdsAsync(long[] fileMasterIds, int keepCount, int minAge, string comment, object userState) {
            if ((this.DeleteFileVersionsByMasterIdsOperationCompleted == null)) {
                this.DeleteFileVersionsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileVersionsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("DeleteFileVersionsByMasterIds", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment}, this.DeleteFileVersionsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnDeleteFileVersionsByMasterIdsOperationCompleted(object arg) {
            if ((this.DeleteFileVersionsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileVersionsByMasterIdsCompleted(this, new DeleteFileVersionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileVersionsByMasterIdsUncon" +
            "ditional", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelStatus[] DeleteFileVersionsByMasterIdsUnconditional(long[] fileMasterIds, int keepCount, int minAge, string comment) {
            object[] results = this.Invoke("DeleteFileVersionsByMasterIdsUnconditional", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment});
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileVersionsByMasterIdsUnconditional(long[] fileMasterIds, int keepCount, int minAge, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileVersionsByMasterIdsUnconditional", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelStatus[] EndDeleteFileVersionsByMasterIdsUnconditional(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileVersionsByMasterIdsUnconditionalAsync(long[] fileMasterIds, int keepCount, int minAge, string comment) {
            this.DeleteFileVersionsByMasterIdsUnconditionalAsync(fileMasterIds, keepCount, minAge, comment, null);
        }
        
        /// <remarks/>
        public void DeleteFileVersionsByMasterIdsUnconditionalAsync(long[] fileMasterIds, int keepCount, int minAge, string comment, object userState) {
            if ((this.DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted == null)) {
                this.DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileVersionsByMasterIdsUnconditionalOperationCompleted);
            }
            this.InvokeAsync("DeleteFileVersionsByMasterIdsUnconditional", new object[] {
                        fileMasterIds,
                        keepCount,
                        minAge,
                        comment}, this.DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted, userState);
        }
        
        private void OnDeleteFileVersionsByMasterIdsUnconditionalOperationCompleted(object arg) {
            if ((this.DeleteFileVersionsByMasterIdsUnconditionalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileVersionsByMasterIdsUnconditionalCompleted(this, new DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetTrackFileStatus", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetTrackFileStatus() {
            object[] results = this.Invoke("GetTrackFileStatus", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTrackFileStatus(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTrackFileStatus", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndGetTrackFileStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrackFileStatusAsync() {
            this.GetTrackFileStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetTrackFileStatusAsync(object userState) {
            if ((this.GetTrackFileStatusOperationCompleted == null)) {
                this.GetTrackFileStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrackFileStatusOperationCompleted);
            }
            this.InvokeAsync("GetTrackFileStatus", new object[0], this.GetTrackFileStatusOperationCompleted, userState);
        }
        
        private void OnGetTrackFileStatusOperationCompleted(object arg) {
            if ((this.GetTrackFileStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrackFileStatusCompleted(this, new GetTrackFileStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetTrackFileStatus", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTrackFileStatus(bool trackStatus) {
            this.Invoke("SetTrackFileStatus", new object[] {
                        trackStatus});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetTrackFileStatus(bool trackStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetTrackFileStatus", new object[] {
                        trackStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetTrackFileStatus(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetTrackFileStatusAsync(bool trackStatus) {
            this.SetTrackFileStatusAsync(trackStatus, null);
        }
        
        /// <remarks/>
        public void SetTrackFileStatusAsync(bool trackStatus, object userState) {
            if ((this.SetTrackFileStatusOperationCompleted == null)) {
                this.SetTrackFileStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTrackFileStatusOperationCompleted);
            }
            this.InvokeAsync("SetTrackFileStatus", new object[] {
                        trackStatus}, this.SetTrackFileStatusOperationCompleted, userState);
        }
        
        private void OnSetTrackFileStatusOperationCompleted(object arg) {
            if ((this.SetTrackFileStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTrackFileStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFilterConfigXml", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFilterConfigXml() {
            object[] results = this.Invoke("GetFilterConfigXml", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFilterConfigXml(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFilterConfigXml", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetFilterConfigXml(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilterConfigXmlAsync() {
            this.GetFilterConfigXmlAsync(null);
        }
        
        /// <remarks/>
        public void GetFilterConfigXmlAsync(object userState) {
            if ((this.GetFilterConfigXmlOperationCompleted == null)) {
                this.GetFilterConfigXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilterConfigXmlOperationCompleted);
            }
            this.InvokeAsync("GetFilterConfigXml", new object[0], this.GetFilterConfigXmlOperationCompleted, userState);
        }
        
        private void OnGetFilterConfigXmlOperationCompleted(object arg) {
            if ((this.GetFilterConfigXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilterConfigXmlCompleted(this, new GetFilterConfigXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileVersions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelStatus[] DeleteFileVersions(long[] fileIds) {
            object[] results = this.Invoke("DeleteFileVersions", new object[] {
                        fileIds});
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileVersions(long[] fileIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileVersions", new object[] {
                        fileIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelStatus[] EndDeleteFileVersions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileVersionsAsync(long[] fileIds) {
            this.DeleteFileVersionsAsync(fileIds, null);
        }
        
        /// <remarks/>
        public void DeleteFileVersionsAsync(long[] fileIds, object userState) {
            if ((this.DeleteFileVersionsOperationCompleted == null)) {
                this.DeleteFileVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileVersionsOperationCompleted);
            }
            this.InvokeAsync("DeleteFileVersions", new object[] {
                        fileIds}, this.DeleteFileVersionsOperationCompleted, userState);
        }
        
        private void OnDeleteFileVersionsOperationCompleted(object arg) {
            if ((this.DeleteFileVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileVersionsCompleted(this, new DeleteFileVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileVersionsUnconditional", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelStatus[] DeleteFileVersionsUnconditional(long[] fileIds) {
            object[] results = this.Invoke("DeleteFileVersionsUnconditional", new object[] {
                        fileIds});
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileVersionsUnconditional(long[] fileIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileVersionsUnconditional", new object[] {
                        fileIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelStatus[] EndDeleteFileVersionsUnconditional(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileVersionsUnconditionalAsync(long[] fileIds) {
            this.DeleteFileVersionsUnconditionalAsync(fileIds, null);
        }
        
        /// <remarks/>
        public void DeleteFileVersionsUnconditionalAsync(long[] fileIds, object userState) {
            if ((this.DeleteFileVersionsUnconditionalOperationCompleted == null)) {
                this.DeleteFileVersionsUnconditionalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileVersionsUnconditionalOperationCompleted);
            }
            this.InvokeAsync("DeleteFileVersionsUnconditional", new object[] {
                        fileIds}, this.DeleteFileVersionsUnconditionalOperationCompleted, userState);
        }
        
        private void OnDeleteFileVersionsUnconditionalOperationCompleted(object arg) {
            if ((this.DeleteFileVersionsUnconditionalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileVersionsUnconditionalCompleted(this, new DeleteFileVersionsUnconditionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetFileStatusByMasterId", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File SetFileStatusByMasterId(long fileMasterId, FileStatus fileStatus) {
            object[] results = this.Invoke("SetFileStatusByMasterId", new object[] {
                        fileMasterId,
                        fileStatus});
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetFileStatusByMasterId(long fileMasterId, FileStatus fileStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetFileStatusByMasterId", new object[] {
                        fileMasterId,
                        fileStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public File EndSetFileStatusByMasterId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File)(results[0]));
        }
        
        /// <remarks/>
        public void SetFileStatusByMasterIdAsync(long fileMasterId, FileStatus fileStatus) {
            this.SetFileStatusByMasterIdAsync(fileMasterId, fileStatus, null);
        }
        
        /// <remarks/>
        public void SetFileStatusByMasterIdAsync(long fileMasterId, FileStatus fileStatus, object userState) {
            if ((this.SetFileStatusByMasterIdOperationCompleted == null)) {
                this.SetFileStatusByMasterIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFileStatusByMasterIdOperationCompleted);
            }
            this.InvokeAsync("SetFileStatusByMasterId", new object[] {
                        fileMasterId,
                        fileStatus}, this.SetFileStatusByMasterIdOperationCompleted, userState);
        }
        
        private void OnSetFileStatusByMasterIdOperationCompleted(object arg) {
            if ((this.SetFileStatusByMasterIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFileStatusByMasterIdCompleted(this, new SetFileStatusByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetFileStatusByMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public File[] SetFileStatusByMasterIds(long[] fileMasterIds, FileStatus fileStatus) {
            object[] results = this.Invoke("SetFileStatusByMasterIds", new object[] {
                        fileMasterIds,
                        fileStatus});
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetFileStatusByMasterIds(long[] fileMasterIds, FileStatus fileStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetFileStatusByMasterIds", new object[] {
                        fileMasterIds,
                        fileStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public File[] EndSetFileStatusByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((File[])(results[0]));
        }
        
        /// <remarks/>
        public void SetFileStatusByMasterIdsAsync(long[] fileMasterIds, FileStatus fileStatus) {
            this.SetFileStatusByMasterIdsAsync(fileMasterIds, fileStatus, null);
        }
        
        /// <remarks/>
        public void SetFileStatusByMasterIdsAsync(long[] fileMasterIds, FileStatus fileStatus, object userState) {
            if ((this.SetFileStatusByMasterIdsOperationCompleted == null)) {
                this.SetFileStatusByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetFileStatusByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("SetFileStatusByMasterIds", new object[] {
                        fileMasterIds,
                        fileStatus}, this.SetFileStatusByMasterIdsOperationCompleted, userState);
        }
        
        private void OnSetFileStatusByMasterIdsOperationCompleted(object arg) {
            if ((this.SetFileStatusByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetFileStatusByMasterIdsCompleted(this, new SetFileStatusByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileStatusSetRestrictionsByMast" +
            "erIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocRestricArray[] GetFileStatusSetRestrictionsByMasterIds(long[] fileMasterIds, FileStatus fileStatus) {
            object[] results = this.Invoke("GetFileStatusSetRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        fileStatus});
            return ((DocRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileStatusSetRestrictionsByMasterIds(long[] fileMasterIds, FileStatus fileStatus, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileStatusSetRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        fileStatus}, callback, asyncState);
        }
        
        /// <remarks/>
        public DocRestricArray[] EndGetFileStatusSetRestrictionsByMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((DocRestricArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileStatusSetRestrictionsByMasterIdsAsync(long[] fileMasterIds, FileStatus fileStatus) {
            this.GetFileStatusSetRestrictionsByMasterIdsAsync(fileMasterIds, fileStatus, null);
        }
        
        /// <remarks/>
        public void GetFileStatusSetRestrictionsByMasterIdsAsync(long[] fileMasterIds, FileStatus fileStatus, object userState) {
            if ((this.GetFileStatusSetRestrictionsByMasterIdsOperationCompleted == null)) {
                this.GetFileStatusSetRestrictionsByMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStatusSetRestrictionsByMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileStatusSetRestrictionsByMasterIds", new object[] {
                        fileMasterIds,
                        fileStatus}, this.GetFileStatusSetRestrictionsByMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetFileStatusSetRestrictionsByMasterIdsOperationCompleted(object arg) {
            if ((this.GetFileStatusSetRestrictionsByMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStatusSetRestrictionsByMasterIdsCompleted(this, new GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetFileVersionDeleteRestrictionsBy" +
            "FileIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileDelRestricEx[] GetFileVersionDeleteRestrictionsByFileIds(long[] fileIds) {
            object[] results = this.Invoke("GetFileVersionDeleteRestrictionsByFileIds", new object[] {
                        fileIds});
            return ((FileDelRestricEx[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFileVersionDeleteRestrictionsByFileIds(long[] fileIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFileVersionDeleteRestrictionsByFileIds", new object[] {
                        fileIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileDelRestricEx[] EndGetFileVersionDeleteRestrictionsByFileIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileDelRestricEx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileVersionDeleteRestrictionsByFileIdsAsync(long[] fileIds) {
            this.GetFileVersionDeleteRestrictionsByFileIdsAsync(fileIds, null);
        }
        
        /// <remarks/>
        public void GetFileVersionDeleteRestrictionsByFileIdsAsync(long[] fileIds, object userState) {
            if ((this.GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted == null)) {
                this.GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileVersionDeleteRestrictionsByFileIdsOperationCompleted);
            }
            this.InvokeAsync("GetFileVersionDeleteRestrictionsByFileIds", new object[] {
                        fileIds}, this.GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted, userState);
        }
        
        private void OnGetFileVersionDeleteRestrictionsByFileIdsOperationCompleted(object arg) {
            if ((this.GetFileVersionDeleteRestrictionsByFileIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileVersionDeleteRestrictionsByFileIdsCompleted(this, new GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddFileNamingScheme", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileNmngSchm AddFileNamingScheme(FileNmngSchm scheme) {
            object[] results = this.Invoke("AddFileNamingScheme", new object[] {
                        scheme});
            return ((FileNmngSchm)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddFileNamingScheme(FileNmngSchm scheme, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddFileNamingScheme", new object[] {
                        scheme}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileNmngSchm EndAddFileNamingScheme(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileNmngSchm)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileNamingSchemeAsync(FileNmngSchm scheme) {
            this.AddFileNamingSchemeAsync(scheme, null);
        }
        
        /// <remarks/>
        public void AddFileNamingSchemeAsync(FileNmngSchm scheme, object userState) {
            if ((this.AddFileNamingSchemeOperationCompleted == null)) {
                this.AddFileNamingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileNamingSchemeOperationCompleted);
            }
            this.InvokeAsync("AddFileNamingScheme", new object[] {
                        scheme}, this.AddFileNamingSchemeOperationCompleted, userState);
        }
        
        private void OnAddFileNamingSchemeOperationCompleted(object arg) {
            if ((this.AddFileNamingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileNamingSchemeCompleted(this, new AddFileNamingSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/UpdateFileNamingScheme", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFileNamingScheme(FileNmngSchm scheme) {
            this.Invoke("UpdateFileNamingScheme", new object[] {
                        scheme});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFileNamingScheme(FileNmngSchm scheme, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFileNamingScheme", new object[] {
                        scheme}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateFileNamingScheme(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateFileNamingSchemeAsync(FileNmngSchm scheme) {
            this.UpdateFileNamingSchemeAsync(scheme, null);
        }
        
        /// <remarks/>
        public void UpdateFileNamingSchemeAsync(FileNmngSchm scheme, object userState) {
            if ((this.UpdateFileNamingSchemeOperationCompleted == null)) {
                this.UpdateFileNamingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileNamingSchemeOperationCompleted);
            }
            this.InvokeAsync("UpdateFileNamingScheme", new object[] {
                        scheme}, this.UpdateFileNamingSchemeOperationCompleted, userState);
        }
        
        private void OnUpdateFileNamingSchemeOperationCompleted(object arg) {
            if ((this.UpdateFileNamingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileNamingSchemeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/DeleteFileNamingScheme", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFileNamingScheme(long schemeId) {
            this.Invoke("DeleteFileNamingScheme", new object[] {
                        schemeId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFileNamingScheme(long schemeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFileNamingScheme", new object[] {
                        schemeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFileNamingScheme(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFileNamingSchemeAsync(long schemeId) {
            this.DeleteFileNamingSchemeAsync(schemeId, null);
        }
        
        /// <remarks/>
        public void DeleteFileNamingSchemeAsync(long schemeId, object userState) {
            if ((this.DeleteFileNamingSchemeOperationCompleted == null)) {
                this.DeleteFileNamingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileNamingSchemeOperationCompleted);
            }
            this.InvokeAsync("DeleteFileNamingScheme", new object[] {
                        schemeId}, this.DeleteFileNamingSchemeOperationCompleted, userState);
        }
        
        private void OnDeleteFileNamingSchemeOperationCompleted(object arg) {
            if ((this.DeleteFileNamingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileNamingSchemeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetDefaultFileNamingScheme", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDefaultFileNamingScheme(long schemeId) {
            this.Invoke("SetDefaultFileNamingScheme", new object[] {
                        schemeId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDefaultFileNamingScheme(long schemeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDefaultFileNamingScheme", new object[] {
                        schemeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDefaultFileNamingScheme(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetDefaultFileNamingSchemeAsync(long schemeId) {
            this.SetDefaultFileNamingSchemeAsync(schemeId, null);
        }
        
        /// <remarks/>
        public void SetDefaultFileNamingSchemeAsync(long schemeId, object userState) {
            if ((this.SetDefaultFileNamingSchemeOperationCompleted == null)) {
                this.SetDefaultFileNamingSchemeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDefaultFileNamingSchemeOperationCompleted);
            }
            this.InvokeAsync("SetDefaultFileNamingScheme", new object[] {
                        schemeId}, this.SetDefaultFileNamingSchemeOperationCompleted, userState);
        }
        
        private void OnSetDefaultFileNamingSchemeOperationCompleted(object arg) {
            if ((this.SetDefaultFileNamingSchemeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDefaultFileNamingSchemeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAllFileNamingSchemes", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileNmngSchm[] GetAllFileNamingSchemes() {
            object[] results = this.Invoke("GetAllFileNamingSchemes", new object[0]);
            return ((FileNmngSchm[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllFileNamingSchemes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllFileNamingSchemes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public FileNmngSchm[] EndGetAllFileNamingSchemes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileNmngSchm[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFileNamingSchemesAsync() {
            this.GetAllFileNamingSchemesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllFileNamingSchemesAsync(object userState) {
            if ((this.GetAllFileNamingSchemesOperationCompleted == null)) {
                this.GetAllFileNamingSchemesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFileNamingSchemesOperationCompleted);
            }
            this.InvokeAsync("GetAllFileNamingSchemes", new object[0], this.GetAllFileNamingSchemesOperationCompleted, userState);
        }
        
        private void OnGetAllFileNamingSchemesOperationCompleted(object arg) {
            if ((this.GetAllFileNamingSchemesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFileNamingSchemesCompleted(this, new GetAllFileNamingSchemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/ReserveFileNamingDescriptions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileNmngDescr[] ReserveFileNamingDescriptions(long fileNamingSchemeId, int size) {
            object[] results = this.Invoke("ReserveFileNamingDescriptions", new object[] {
                        fileNamingSchemeId,
                        size});
            return ((FileNmngDescr[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReserveFileNamingDescriptions(long fileNamingSchemeId, int size, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReserveFileNamingDescriptions", new object[] {
                        fileNamingSchemeId,
                        size}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileNmngDescr[] EndReserveFileNamingDescriptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileNmngDescr[])(results[0]));
        }
        
        /// <remarks/>
        public void ReserveFileNamingDescriptionsAsync(long fileNamingSchemeId, int size) {
            this.ReserveFileNamingDescriptionsAsync(fileNamingSchemeId, size, null);
        }
        
        /// <remarks/>
        public void ReserveFileNamingDescriptionsAsync(long fileNamingSchemeId, int size, object userState) {
            if ((this.ReserveFileNamingDescriptionsOperationCompleted == null)) {
                this.ReserveFileNamingDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReserveFileNamingDescriptionsOperationCompleted);
            }
            this.InvokeAsync("ReserveFileNamingDescriptions", new object[] {
                        fileNamingSchemeId,
                        size}, this.ReserveFileNamingDescriptionsOperationCompleted, userState);
        }
        
        private void OnReserveFileNamingDescriptionsOperationCompleted(object arg) {
            if ((this.ReserveFileNamingDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReserveFileNamingDescriptionsCompleted(this, new ReserveFileNamingDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/RollbackFileNamingDescriptions", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RollbackFileNamingDescriptions(FileNmngDescr[] descriptions) {
            this.Invoke("RollbackFileNamingDescriptions", new object[] {
                        descriptions});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRollbackFileNamingDescriptions(FileNmngDescr[] descriptions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RollbackFileNamingDescriptions", new object[] {
                        descriptions}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRollbackFileNamingDescriptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RollbackFileNamingDescriptionsAsync(FileNmngDescr[] descriptions) {
            this.RollbackFileNamingDescriptionsAsync(descriptions, null);
        }
        
        /// <remarks/>
        public void RollbackFileNamingDescriptionsAsync(FileNmngDescr[] descriptions, object userState) {
            if ((this.RollbackFileNamingDescriptionsOperationCompleted == null)) {
                this.RollbackFileNamingDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRollbackFileNamingDescriptionsOperationCompleted);
            }
            this.InvokeAsync("RollbackFileNamingDescriptions", new object[] {
                        descriptions}, this.RollbackFileNamingDescriptionsOperationCompleted, userState);
        }
        
        private void OnRollbackFileNamingDescriptionsOperationCompleted(object arg) {
            if ((this.RollbackFileNamingDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RollbackFileNamingDescriptionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetAllBasicSearchPropertyDefinitio" +
            "nIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] GetAllBasicSearchPropertyDefinitionIds() {
            object[] results = this.Invoke("GetAllBasicSearchPropertyDefinitionIds", new object[0]);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllBasicSearchPropertyDefinitionIds(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllBasicSearchPropertyDefinitionIds", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public long[] EndGetAllBasicSearchPropertyDefinitionIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBasicSearchPropertyDefinitionIdsAsync() {
            this.GetAllBasicSearchPropertyDefinitionIdsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllBasicSearchPropertyDefinitionIdsAsync(object userState) {
            if ((this.GetAllBasicSearchPropertyDefinitionIdsOperationCompleted == null)) {
                this.GetAllBasicSearchPropertyDefinitionIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBasicSearchPropertyDefinitionIdsOperationCompleted);
            }
            this.InvokeAsync("GetAllBasicSearchPropertyDefinitionIds", new object[0], this.GetAllBasicSearchPropertyDefinitionIdsOperationCompleted, userState);
        }
        
        private void OnGetAllBasicSearchPropertyDefinitionIdsOperationCompleted(object arg) {
            if ((this.GetAllBasicSearchPropertyDefinitionIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBasicSearchPropertyDefinitionIdsCompleted(this, new GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/AddDesignVisualizationFileAttachme" +
            "nt", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddDesignVisualizationFileAttachment(long fileId, long attachFileId, string attachSource) {
            this.Invoke("AddDesignVisualizationFileAttachment", new object[] {
                        fileId,
                        attachFileId,
                        attachSource});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddDesignVisualizationFileAttachment(long fileId, long attachFileId, string attachSource, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddDesignVisualizationFileAttachment", new object[] {
                        fileId,
                        attachFileId,
                        attachSource}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddDesignVisualizationFileAttachment(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddDesignVisualizationFileAttachmentAsync(long fileId, long attachFileId, string attachSource) {
            this.AddDesignVisualizationFileAttachmentAsync(fileId, attachFileId, attachSource, null);
        }
        
        /// <remarks/>
        public void AddDesignVisualizationFileAttachmentAsync(long fileId, long attachFileId, string attachSource, object userState) {
            if ((this.AddDesignVisualizationFileAttachmentOperationCompleted == null)) {
                this.AddDesignVisualizationFileAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDesignVisualizationFileAttachmentOperationCompleted);
            }
            this.InvokeAsync("AddDesignVisualizationFileAttachment", new object[] {
                        fileId,
                        attachFileId,
                        attachSource}, this.AddDesignVisualizationFileAttachmentOperationCompleted, userState);
        }
        
        private void OnAddDesignVisualizationFileAttachmentOperationCompleted(object arg) {
            if ((this.AddDesignVisualizationFileAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDesignVisualizationFileAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/SetDesignVisualizationAttachmentSt" +
            "atusById", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDesignVisualizationAttachmentStatusById(long fileId, DesignVisualizationAttachmentStatus status) {
            this.Invoke("SetDesignVisualizationAttachmentStatusById", new object[] {
                        fileId,
                        status});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDesignVisualizationAttachmentStatusById(long fileId, DesignVisualizationAttachmentStatus status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDesignVisualizationAttachmentStatusById", new object[] {
                        fileId,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDesignVisualizationAttachmentStatusById(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetDesignVisualizationAttachmentStatusByIdAsync(long fileId, DesignVisualizationAttachmentStatus status) {
            this.SetDesignVisualizationAttachmentStatusByIdAsync(fileId, status, null);
        }
        
        /// <remarks/>
        public void SetDesignVisualizationAttachmentStatusByIdAsync(long fileId, DesignVisualizationAttachmentStatus status, object userState) {
            if ((this.SetDesignVisualizationAttachmentStatusByIdOperationCompleted == null)) {
                this.SetDesignVisualizationAttachmentStatusByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDesignVisualizationAttachmentStatusByIdOperationCompleted);
            }
            this.InvokeAsync("SetDesignVisualizationAttachmentStatusById", new object[] {
                        fileId,
                        status}, this.SetDesignVisualizationAttachmentStatusByIdOperationCompleted, userState);
        }
        
        private void OnSetDesignVisualizationAttachmentStatusByIdOperationCompleted(object arg) {
            if ((this.SetDesignVisualizationAttachmentStatusByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDesignVisualizationAttachmentStatusByIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/01/17/2008/GetDesignVisualizationAttachmentsB" +
            "yFileMasterIds", RequestNamespace="http://AutodeskDM/Services/Document/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Document/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FileAssocArray[] GetDesignVisualizationAttachmentsByFileMasterIds(long[] fileMasterIds) {
            object[] results = this.Invoke("GetDesignVisualizationAttachmentsByFileMasterIds", new object[] {
                        fileMasterIds});
            return ((FileAssocArray[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDesignVisualizationAttachmentsByFileMasterIds(long[] fileMasterIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDesignVisualizationAttachmentsByFileMasterIds", new object[] {
                        fileMasterIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public FileAssocArray[] EndGetDesignVisualizationAttachmentsByFileMasterIds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FileAssocArray[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDesignVisualizationAttachmentsByFileMasterIdsAsync(long[] fileMasterIds) {
            this.GetDesignVisualizationAttachmentsByFileMasterIdsAsync(fileMasterIds, null);
        }
        
        /// <remarks/>
        public void GetDesignVisualizationAttachmentsByFileMasterIdsAsync(long[] fileMasterIds, object userState) {
            if ((this.GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted == null)) {
                this.GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted);
            }
            this.InvokeAsync("GetDesignVisualizationAttachmentsByFileMasterIds", new object[] {
                        fileMasterIds}, this.GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted, userState);
        }
        
        private void OnGetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted(object arg) {
            if ((this.GetDesignVisualizationAttachmentsByFileMasterIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDesignVisualizationAttachmentsByFileMasterIdsCompleted(this, new GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/", IsNullable=false)]
    public partial class SecurityHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string ticketField;
        
        private long userIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileNmngDescr {
        
        private long schemeIdField;
        
        private string valField;
        
        private long numField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long SchemeId {
            get {
                return this.schemeIdField;
            }
            set {
                this.schemeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Num {
            get {
                return this.numField;
            }
            set {
                this.numField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileNmngSchm {
        
        private long idField;
        
        private string nameField;
        
        private string descrField;
        
        private string prefixField;
        
        private string suffixField;
        
        private long startNumField;
        
        private int fieldLenField;
        
        private bool isDfltField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long StartNum {
            get {
                return this.startNumField;
            }
            set {
                this.startNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int FieldLen {
            get {
                return this.fieldLenField;
            }
            set {
                this.fieldLenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsDflt {
            get {
                return this.isDfltField;
            }
            set {
                this.isDfltField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class DocRestricArray {
        
        private DocRestric[] restrictionsField;
        
        /// <remarks/>
        public DocRestric[] Restrictions {
            get {
                return this.restrictionsField;
            }
            set {
                this.restrictionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class DocRestric {
        
        private object[] paramsField;
        
        private DocRestricCode codeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Params")]
        public object[] Params {
            get {
                return this.paramsField;
            }
            set {
                this.paramsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DocRestricCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum DocRestricCode {
        
        /// <remarks/>
        FileDependantParents,
        
        /// <remarks/>
        FileCheckedOut,
        
        /// <remarks/>
        FileOldVersion,
        
        /// <remarks/>
        FileLinkedToItem,
        
        /// <remarks/>
        FileAttachedToItem,
        
        /// <remarks/>
        FileParentSameName,
        
        /// <remarks/>
        FolderIsRoot,
        
        /// <remarks/>
        BadFolderId,
        
        /// <remarks/>
        MoveFolderExists,
        
        /// <remarks/>
        MoveFolderDescendentCheckedOut,
        
        /// <remarks/>
        MoveFolderChildRootInvalid,
        
        /// <remarks/>
        MoveFolderLibraryRelationshipInvalid,
        
        /// <remarks/>
        MoveFolderConcurrent,
        
        /// <remarks/>
        FileStatusTrackingDisabled,
        
        /// <remarks/>
        FileStatusChildNotUpToDate,
        
        /// <remarks/>
        MoveFolderDestinationIsDescendant,
        
        /// <remarks/>
        MoveFolderDestinationIsSelf,
        
        /// <remarks/>
        MoveFolderFolderFileNameCollision,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileDelStatus {
        
        private File fileField;
        
        private int codeField;
        
        /// <remarks/>
        public File File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class File {
        
        private long idField;
        
        private string nameField;
        
        private long masterIdField;
        
        private int verNumField;
        
        private int maxCkInVerNumField;
        
        private System.DateTime ckInDateField;
        
        private string commField;
        
        private System.DateTime createDateField;
        
        private long createUserIdField;
        
        private int cksumField;
        
        private long fileSizeField;
        
        private string createUserNameField;
        
        private bool checkedOutField;
        
        private long ckOutFolderIdField;
        
        private string ckOutSpecField;
        
        private string ckOutMachField;
        
        private long ckOutUserIdField;
        
        private FileClassification fileClassField;
        
        private bool hiddenField;
        
        private bool lockedField;
        
        private bool cloakedField;
        
        private FileStatus fileStatusField;
        
        private bool isOnSiteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long MasterId {
            get {
                return this.masterIdField;
            }
            set {
                this.masterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int VerNum {
            get {
                return this.verNumField;
            }
            set {
                this.verNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxCkInVerNum {
            get {
                return this.maxCkInVerNumField;
            }
            set {
                this.maxCkInVerNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CkInDate {
            get {
                return this.ckInDateField;
            }
            set {
                this.ckInDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comm {
            get {
                return this.commField;
            }
            set {
                this.commField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CreateUserId {
            get {
                return this.createUserIdField;
            }
            set {
                this.createUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Cksum {
            get {
                return this.cksumField;
            }
            set {
                this.cksumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CheckedOut {
            get {
                return this.checkedOutField;
            }
            set {
                this.checkedOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CkOutFolderId {
            get {
                return this.ckOutFolderIdField;
            }
            set {
                this.ckOutFolderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CkOutSpec {
            get {
                return this.ckOutSpecField;
            }
            set {
                this.ckOutSpecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CkOutMach {
            get {
                return this.ckOutMachField;
            }
            set {
                this.ckOutMachField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CkOutUserId {
            get {
                return this.ckOutUserIdField;
            }
            set {
                this.ckOutUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileClassification FileClass {
            get {
                return this.fileClassField;
            }
            set {
                this.fileClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Hidden {
            get {
                return this.hiddenField;
            }
            set {
                this.hiddenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Locked {
            get {
                return this.lockedField;
            }
            set {
                this.lockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Cloaked {
            get {
                return this.cloakedField;
            }
            set {
                this.cloakedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileStatus FileStatus {
            get {
                return this.fileStatusField;
            }
            set {
                this.fileStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsOnSite {
            get {
                return this.isOnSiteField;
            }
            set {
                this.isOnSiteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum FileClassification {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        DesignVisualization,
        
        /// <remarks/>
        DesignDocument,
        
        /// <remarks/>
        ConfigurationMember,
        
        /// <remarks/>
        ConfigurationFactory,
        
        /// <remarks/>
        ElectricalProject,
        
        /// <remarks/>
        DesignSubstitute,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum FileStatus {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        NeedsUpdating,
        
        /// <remarks/>
        UpToDate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileDelRestricEx {
        
        private int codeField;
        
        private long masterIdField;
        
        private long fileIdField;
        
        private int verNumField;
        
        private string paramField;
        
        private string param2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long MasterId {
            get {
                return this.masterIdField;
            }
            set {
                this.masterIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int VerNum {
            get {
                return this.verNumField;
            }
            set {
                this.verNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Param {
            get {
                return this.paramField;
            }
            set {
                this.paramField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Param2 {
            get {
                return this.param2Field;
            }
            set {
                this.param2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class CompIdent {
        
        private long idField;
        
        private long fileIdField;
        
        private string uniqueIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UniqueId {
            get {
                return this.uniqueIdField;
            }
            set {
                this.uniqueIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class CompPropInfo {
        
        private CompIdent[] compIdentArrayField;
        
        private BOMProp[] propArrayField;
        
        private BOMCompAttr[] attrArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("CompIdentity")]
        public CompIdent[] CompIdentArray {
            get {
                return this.compIdentArrayField;
            }
            set {
                this.compIdentArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Prop")]
        public BOMProp[] PropArray {
            get {
                return this.propArrayField;
            }
            set {
                this.propArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Attr")]
        public BOMCompAttr[] AttrArray {
            get {
                return this.attrArrayField;
            }
            set {
                this.attrArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMProp {
        
        private long idField;
        
        private string propSetIdField;
        
        private string propIdField;
        
        private string nameField;
        
        private string dispNameField;
        
        private PropertyTypeEnum typField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PropSetId {
            get {
                return this.propSetIdField;
            }
            set {
                this.propSetIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PropId {
            get {
                return this.propIdField;
            }
            set {
                this.propIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DispName {
            get {
                return this.dispNameField;
            }
            set {
                this.dispNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PropertyTypeEnum Typ {
            get {
                return this.typField;
            }
            set {
                this.typField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum PropertyTypeEnum {
        
        /// <remarks/>
        Number,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Text,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMCompAttr {
        
        private long idField;
        
        private long compIdField;
        
        private long propIdField;
        
        private string valField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CompId {
            get {
                return this.compIdField;
            }
            set {
                this.compIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long PropId {
            get {
                return this.propIdField;
            }
            set {
                this.propIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileAssoc {
        
        private File parFileField;
        
        private File cldFileField;
        
        private long idField;
        
        private AssociationType typField;
        
        private string sourceField;
        
        /// <remarks/>
        public File ParFile {
            get {
                return this.parFileField;
            }
            set {
                this.parFileField = value;
            }
        }
        
        /// <remarks/>
        public File CldFile {
            get {
                return this.cldFileField;
            }
            set {
                this.cldFileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AssociationType Typ {
            get {
                return this.typField;
            }
            set {
                this.typField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum AssociationType {
        
        /// <remarks/>
        Dependency,
        
        /// <remarks/>
        Attachment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileAssocArray {
        
        private FileAssoc[] fileAssocsField;
        
        /// <remarks/>
        public FileAssoc[] FileAssocs {
            get {
                return this.fileAssocsField;
            }
            set {
                this.fileAssocsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class Label {
        
        private long idField;
        
        private string nameField;
        
        private string commField;
        
        private System.DateTime createDateField;
        
        private long createUserIdField;
        
        private string createUserNameField;
        
        private int numFilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comm {
            get {
                return this.commField;
            }
            set {
                this.commField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CreateUserId {
            get {
                return this.createUserIdField;
            }
            set {
                this.createUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int NumFiles {
            get {
                return this.numFilesField;
            }
            set {
                this.numFilesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class PropGrp {
        
        private PropDef[] propDefArrayField;
        
        private long idField;
        
        private string dispNameField;
        
        private string sysNameField;
        
        private bool isActField;
        
        private string dataTypeField;
        
        /// <remarks/>
        public PropDef[] PropDefArray {
            get {
                return this.propDefArrayField;
            }
            set {
                this.propDefArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DispName {
            get {
                return this.dispNameField;
            }
            set {
                this.dispNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SysName {
            get {
                return this.sysNameField;
            }
            set {
                this.sysNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsAct {
            get {
                return this.isActField;
            }
            set {
                this.isActField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class PropDef {
        
        private object dfltValField;
        
        private object[] valArrayField;
        
        private long idField;
        
        private string setIdField;
        
        private string propIdField;
        
        private string typField;
        
        private string dispNameField;
        
        private string sysNameField;
        
        private bool isActField;
        
        private string monikerField;
        
        private PropDefSrc srcField;
        
        private int usageCountField;
        
        /// <remarks/>
        public object DfltVal {
            get {
                return this.dfltValField;
            }
            set {
                this.dfltValField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Val")]
        public object[] ValArray {
            get {
                return this.valArrayField;
            }
            set {
                this.valArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SetId {
            get {
                return this.setIdField;
            }
            set {
                this.setIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PropId {
            get {
                return this.propIdField;
            }
            set {
                this.propIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Typ {
            get {
                return this.typField;
            }
            set {
                this.typField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DispName {
            get {
                return this.dispNameField;
            }
            set {
                this.dispNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SysName {
            get {
                return this.sysNameField;
            }
            set {
                this.sysNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsAct {
            get {
                return this.isActField;
            }
            set {
                this.isActField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Moniker {
            get {
                return this.monikerField;
            }
            set {
                this.monikerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PropDefSrc Src {
            get {
                return this.srcField;
            }
            set {
                this.srcField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int UsageCount {
            get {
                return this.usageCountField;
            }
            set {
                this.usageCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum PropDefSrc {
        
        /// <remarks/>
        System,
        
        /// <remarks/>
        Derived,
        
        /// <remarks/>
        Custom,
        
        /// <remarks/>
        Group,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileFolder {
        
        private Folder folderField;
        
        private File fileField;
        
        /// <remarks/>
        public Folder Folder {
            get {
                return this.folderField;
            }
            set {
                this.folderField = value;
            }
        }
        
        /// <remarks/>
        public File File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class Folder {
        
        private long idField;
        
        private string nameField;
        
        private string fullNameField;
        
        private long parIdField;
        
        private System.DateTime createDateField;
        
        private long createUserIdField;
        
        private bool isActField;
        
        private bool isLibField;
        
        private string createUserNameField;
        
        private int numCldsField;
        
        private string fullUncNameField;
        
        private bool cloakedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ParId {
            get {
                return this.parIdField;
            }
            set {
                this.parIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CreateUserId {
            get {
                return this.createUserIdField;
            }
            set {
                this.createUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsAct {
            get {
                return this.isActField;
            }
            set {
                this.isActField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsLib {
            get {
                return this.isLibField;
            }
            set {
                this.isLibField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CreateUserName {
            get {
                return this.createUserNameField;
            }
            set {
                this.createUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int NumClds {
            get {
                return this.numCldsField;
            }
            set {
                this.numCldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FullUncName {
            get {
                return this.fullUncNameField;
            }
            set {
                this.fullUncNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Cloaked {
            get {
                return this.cloakedField;
            }
            set {
                this.cloakedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class PropInst {
        
        private object valField;
        
        private long entityIdField;
        
        private long propDefIdField;
        
        private string valTypField;
        
        /// <remarks/>
        public object Val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long PropDefId {
            get {
                return this.propDefIdField;
            }
            set {
                this.propDefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ValTyp {
            get {
                return this.valTypField;
            }
            set {
                this.valTypField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class SrchStatus {
        
        private int totalHitsField;
        
        private IndexingStatus indxStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TotalHits {
            get {
                return this.totalHitsField;
            }
            set {
                this.totalHitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public IndexingStatus IndxStatus {
            get {
                return this.indxStatusField;
            }
            set {
                this.indxStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum IndexingStatus {
        
        /// <remarks/>
        IndexingComplete,
        
        /// <remarks/>
        IndexingProperties,
        
        /// <remarks/>
        IndexingContent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class SrchSort {
        
        private long propDefIdField;
        
        private bool sortAscField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long PropDefId {
            get {
                return this.propDefIdField;
            }
            set {
                this.propDefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool SortAsc {
            get {
                return this.sortAscField;
            }
            set {
                this.sortAscField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class SrchCond {
        
        private long propDefIdField;
        
        private long srchOperField;
        
        private string srchTxtField;
        
        private PropertySearchType propTypField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long PropDefId {
            get {
                return this.propDefIdField;
            }
            set {
                this.propDefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long SrchOper {
            get {
                return this.srchOperField;
            }
            set {
                this.srchOperField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SrchTxt {
            get {
                return this.srchTxtField;
            }
            set {
                this.srchTxtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PropertySearchType PropTyp {
            get {
                return this.propTypField;
            }
            set {
                this.propTypField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum PropertySearchType {
        
        /// <remarks/>
        SingleProperty,
        
        /// <remarks/>
        AllProperties,
        
        /// <remarks/>
        AllPropertiesAndContent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileRenameRestricArray {
        
        private FileRenameRestric[] fileRenameRestrictionsField;
        
        /// <remarks/>
        public FileRenameRestric[] FileRenameRestrictions {
            get {
                return this.fileRenameRestrictionsField;
            }
            set {
                this.fileRenameRestrictionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileRenameRestric {
        
        private int codeField;
        
        private long fileIdField;
        
        private string infoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileAssocRestric {
        
        private int codeField;
        
        private long fileIdField;
        
        private string fileNameField;
        
        private string infoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long FileId {
            get {
                return this.fileIdField;
            }
            set {
                this.fileIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileDelRestricArray {
        
        private FileDelRestric[] fileDeleteRestrictionsField;
        
        /// <remarks/>
        public FileDelRestric[] FileDeleteRestrictions {
            get {
                return this.fileDeleteRestrictionsField;
            }
            set {
                this.fileDeleteRestrictionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileDelRestric {
        
        private int codeField;
        
        private string infoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMCompRefDesig {
        
        private long idField;
        
        private long compIdField;
        
        private long refIdField;
        
        private int cntField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CompId {
            get {
                return this.compIdField;
            }
            set {
                this.compIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long RefId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Cnt {
            get {
                return this.cntField;
            }
            set {
                this.cntField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMRefDesigAttr {
        
        private long idField;
        
        private long refIdField;
        
        private long propIdField;
        
        private string valField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long RefId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long PropId {
            get {
                return this.propIdField;
            }
            set {
                this.propIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMRefDesig {
        
        private long idField;
        
        private string tagField;
        
        private string locField;
        
        private string instField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Tag {
            get {
                return this.tagField;
            }
            set {
                this.tagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Loc {
            get {
                return this.locField;
            }
            set {
                this.locField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Inst {
            get {
                return this.instField;
            }
            set {
                this.instField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMSchmOccur {
        
        private long idField;
        
        private int schmIdField;
        
        private long parOccurIdField;
        
        private long compIdField;
        
        private int orderField;
        
        private string dtlIdField;
        
        private int depthField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SchmId {
            get {
                return this.schmIdField;
            }
            set {
                this.schmIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ParOccurId {
            get {
                return this.parOccurIdField;
            }
            set {
                this.parOccurIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CompId {
            get {
                return this.compIdField;
            }
            set {
                this.compIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DtlId {
            get {
                return this.dtlIdField;
            }
            set {
                this.dtlIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMSchm {
        
        private long idField;
        
        private SchemeTypeEnum schmTypField;
        
        private long rootCompIdField;
        
        private bool insepAsPrtField;
        
        private bool insepPrmtsPrchField;
        
        private bool prchAsPrtField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public SchemeTypeEnum SchmTyp {
            get {
                return this.schmTypField;
            }
            set {
                this.schmTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long RootCompId {
            get {
                return this.rootCompIdField;
            }
            set {
                this.rootCompIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool InsepAsPrt {
            get {
                return this.insepAsPrtField;
            }
            set {
                this.insepAsPrtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool InsepPrmtsPrch {
            get {
                return this.insepPrmtsPrchField;
            }
            set {
                this.insepPrmtsPrchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool PrchAsPrt {
            get {
                return this.prchAsPrtField;
            }
            set {
                this.prchAsPrtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum SchemeTypeEnum {
        
        /// <remarks/>
        Structured,
        
        /// <remarks/>
        PartsOnly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMInst {
        
        private long idField;
        
        private long parIdField;
        
        private long cldIdField;
        
        private BOMStructureOverrideEnum bOMStructOverdeField;
        
        private int quantField;
        
        private double quantOverdeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ParId {
            get {
                return this.parIdField;
            }
            set {
                this.parIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long CldId {
            get {
                return this.cldIdField;
            }
            set {
                this.cldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public BOMStructureOverrideEnum BOMStructOverde {
            get {
                return this.bOMStructOverdeField;
            }
            set {
                this.bOMStructOverdeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Quant {
            get {
                return this.quantField;
            }
            set {
                this.quantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double QuantOverde {
            get {
                return this.quantOverdeField;
            }
            set {
                this.quantOverdeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum BOMStructureOverrideEnum {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Purchased,
        
        /// <remarks/>
        Inseperable,
        
        /// <remarks/>
        Phantom,
        
        /// <remarks/>
        Reference,
        
        /// <remarks/>
        DynamicPhantom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOMComp {
        
        private long idField;
        
        private string uniqueIdField;
        
        private XRefTypeEnum xRefTypField;
        
        private long xRefIdField;
        
        private string nameField;
        
        private ComponentTypeEnum compTypField;
        
        private string baseUOMField;
        
        private double baseQtyField;
        
        private BOMStructureEnum bOMStructField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UniqueId {
            get {
                return this.uniqueIdField;
            }
            set {
                this.uniqueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public XRefTypeEnum XRefTyp {
            get {
                return this.xRefTypField;
            }
            set {
                this.xRefTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long XRefId {
            get {
                return this.xRefIdField;
            }
            set {
                this.xRefIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ComponentTypeEnum CompTyp {
            get {
                return this.compTypField;
            }
            set {
                this.compTypField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BaseUOM {
            get {
                return this.baseUOMField;
            }
            set {
                this.baseUOMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double BaseQty {
            get {
                return this.baseQtyField;
            }
            set {
                this.baseQtyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public BOMStructureEnum BOMStruct {
            get {
                return this.bOMStructField;
            }
            set {
                this.bOMStructField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum XRefTypeEnum {
        
        /// <remarks/>
        Internal,
        
        /// <remarks/>
        External,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum ComponentTypeEnum {
        
        /// <remarks/>
        Part,
        
        /// <remarks/>
        Assembly,
        
        /// <remarks/>
        Virtual,
        
        /// <remarks/>
        Standard,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum BOMStructureEnum {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Purchased,
        
        /// <remarks/>
        Inseperable,
        
        /// <remarks/>
        Phantom,
        
        /// <remarks/>
        Reference,
        
        /// <remarks/>
        DynamicPhantom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class BOM {
        
        private BOMComp[] compArrayField;
        
        private BOMInst[] instArrayField;
        
        private BOMProp[] propArrayField;
        
        private BOMCompAttr[] compAttrArrayField;
        
        private BOMSchm[] schmArrayField;
        
        private BOMSchmOccur[] schmOccArrayField;
        
        private BOMRefDesig[] refDsgArrayField;
        
        private BOMRefDesigAttr[] refDsgAttrArrayField;
        
        private BOMCompRefDesig[] compRefDsgArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Comp")]
        public BOMComp[] CompArray {
            get {
                return this.compArrayField;
            }
            set {
                this.compArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Inst")]
        public BOMInst[] InstArray {
            get {
                return this.instArrayField;
            }
            set {
                this.instArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Prop")]
        public BOMProp[] PropArray {
            get {
                return this.propArrayField;
            }
            set {
                this.propArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("CompAttr")]
        public BOMCompAttr[] CompAttrArray {
            get {
                return this.compAttrArrayField;
            }
            set {
                this.compAttrArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Schm")]
        public BOMSchm[] SchmArray {
            get {
                return this.schmArrayField;
            }
            set {
                this.schmArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("SchmOcc")]
        public BOMSchmOccur[] SchmOccArray {
            get {
                return this.schmOccArrayField;
            }
            set {
                this.schmOccArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("RefDsg")]
        public BOMRefDesig[] RefDsgArray {
            get {
                return this.refDsgArrayField;
            }
            set {
                this.refDsgArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("RefDsgAttr")]
        public BOMRefDesigAttr[] RefDsgAttrArray {
            get {
                return this.refDsgAttrArrayField;
            }
            set {
                this.refDsgAttrArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("CompRefDsg")]
        public BOMCompRefDesig[] CompRefDsgArray {
            get {
                return this.compRefDsgArrayField;
            }
            set {
                this.compRefDsgArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileArray {
        
        private File[] filesField;
        
        /// <remarks/>
        public File[] Files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FilePathArray {
        
        private FilePath[] filePathsField;
        
        /// <remarks/>
        public FilePath[] FilePaths {
            get {
                return this.filePathsField;
            }
            set {
                this.filePathsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FilePath {
        
        private File fileField;
        
        private string pathField;
        
        /// <remarks/>
        public File File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileLockRestricArray {
        
        private FileLockRestric[] fileLockRestrictionsField;
        
        /// <remarks/>
        public FileLockRestric[] FileLockRestrictions {
            get {
                return this.fileLockRestrictionsField;
            }
            set {
                this.fileLockRestrictionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FileLockRestric {
        
        private int codeField;
        
        private string infoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FolderDelRestricArray {
        
        private FolderDelRestric[] folderDeleteRestrictionsField;
        
        /// <remarks/>
        public FolderDelRestric[] FolderDeleteRestrictions {
            get {
                return this.folderDeleteRestrictionsField;
            }
            set {
                this.folderDeleteRestrictionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FolderDelRestric {
        
        private int codeField;
        
        private string infoField;
        
        private string info2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Info2 {
            get {
                return this.info2Field;
            }
            set {
                this.info2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public partial class FolderArray {
        
        private Folder[] foldersField;
        
        /// <remarks/>
        public Folder[] Folders {
            get {
                return this.foldersField;
            }
            set {
                this.foldersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum BreakDesignVisualizationLinkCommandList {
        
        /// <remarks/>
        CategoryChange = 1,
        
        /// <remarks/>
        CopyDesign = 2,
        
        /// <remarks/>
        Checkin = 4,
        
        /// <remarks/>
        EditProperties = 8,
        
        /// <remarks/>
        LifeCycleDefinitionChange = 16,
        
        /// <remarks/>
        LifeCycleStateChange = 32,
        
        /// <remarks/>
        ModifyAttachments = 64,
        
        /// <remarks/>
        MoveFile = 128,
        
        /// <remarks/>
        MoveFolder = 256,
        
        /// <remarks/>
        RenameFile = 512,
        
        /// <remarks/>
        RenameFolder = 1024,
        
        /// <remarks/>
        Replace = 2048,
        
        /// <remarks/>
        RevisionSchemeChange = 4096,
        
        /// <remarks/>
        RevisionChange = 8192,
        
        /// <remarks/>
        SyncronizeProperties = 16384,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum FileAssociationTypeEnum {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Dependency,
        
        /// <remarks/>
        Attachment,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Document/01/17/2008/")]
    public enum DesignVisualizationAttachmentStatus {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Syncronized,
        
        /// <remarks/>
        NotSyncronized,
        
        /// <remarks/>
        UserVerified,
        
        /// <remarks/>
        Legacy,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderRootCompletedEventHandler(object sender, GetFolderRootCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderRootCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderRootCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderByPathCompletedEventHandler(object sender, GetFolderByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFoldersByPathsCompletedEventHandler(object sender, GetFoldersByPathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByPathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByPathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFoldersByPathsCompletedEventHandler(object sender, FindFoldersByPathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFoldersByPathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFoldersByPathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderByIdCompletedEventHandler(object sender, GetFolderByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFoldersByIdsCompletedEventHandler(object sender, GetFoldersByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFoldersByIdsCompletedEventHandler(object sender, FindFoldersByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFoldersByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFoldersByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFoldersByParentIdCompletedEventHandler(object sender, GetFoldersByParentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByParentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByParentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFoldersByParentIdsCompletedEventHandler(object sender, GetFoldersByParentIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByParentIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByParentIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFoldersByFileMasterIdCompletedEventHandler(object sender, GetFoldersByFileMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByFileMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByFileMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFoldersByFileMasterIdsCompletedEventHandler(object sender, GetFoldersByFileMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersByFileMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersByFileMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddFolderCompletedEventHandler(object sender, AddFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFolderHierarchyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFolderHierarchyUnconditionalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderDeleteRestrictionsByIdCompletedEventHandler(object sender, GetFolderDeleteRestrictionsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderDeleteRestrictionsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderDeleteRestrictionsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderDelRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderDelRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderDeleteRestrictionsByIdsCompletedEventHandler(object sender, GetFolderDeleteRestrictionsByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderDeleteRestrictionsByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderDeleteRestrictionsByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderDelRestricArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderDelRestricArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateFolderUNCPathCompletedEventHandler(object sender, UpdateFolderUNCPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderUNCPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderUNCPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateFolderNameCompletedEventHandler(object sender, UpdateFolderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFolderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFolderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Folder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Folder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileByIdCompletedEventHandler(object sender, GetFileByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilesByIdsCompletedEventHandler(object sender, GetFilesByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LockFileByMasterIdCompletedEventHandler(object sender, LockFileByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockFileByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockFileByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LockFilesByMasterIdsCompletedEventHandler(object sender, LockFilesByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockFilesByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockFilesByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileLockRestrictionsByMasterIdCompletedEventHandler(object sender, GetFileLockRestrictionsByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileLockRestrictionsByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileLockRestrictionsByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileLockRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileLockRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileLockRestrictionsByMasterIdsCompletedEventHandler(object sender, GetFileLockRestrictionsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileLockRestrictionsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileLockRestrictionsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileLockRestricArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileLockRestricArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindLatestFilesByPathsCompletedEventHandler(object sender, FindLatestFilesByPathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindLatestFilesByPathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindLatestFilesByPathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFilesByPathsAndChecksumsCompletedEventHandler(object sender, FindFilesByPathsAndChecksumsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFilesByPathsAndChecksumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFilesByPathsAndChecksumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFilesByFoldersNamesAndChecksumsCompletedEventHandler(object sender, FindFilesByFoldersNamesAndChecksumsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFilesByFoldersNamesAndChecksumsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFilesByFoldersNamesAndChecksumsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFilePathsByNameAndChecksumCompletedEventHandler(object sender, FindFilePathsByNameAndChecksumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFilePathsByNameAndChecksumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFilePathsByNameAndChecksumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilePath[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilePath[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestFilePathsByNamesCompletedEventHandler(object sender, GetLatestFilePathsByNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFilePathsByNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFilePathsByNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilePathArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilePathArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestDuplicateFilePathsCompletedEventHandler(object sender, GetLatestDuplicateFilePathsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDuplicateFilePathsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDuplicateFilePathsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilePath[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilePath[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestFilesByFolderIdCompletedEventHandler(object sender, GetLatestFilesByFolderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFilesByFolderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFilesByFolderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestFilesByFolderIdsCompletedEventHandler(object sender, GetLatestFilesByFolderIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFilesByFolderIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFilesByFolderIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilesByMasterIdCompletedEventHandler(object sender, GetFilesByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilesByMasterIdsCompletedEventHandler(object sender, GetFilesByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileByVersionCompletedEventHandler(object sender, GetFileByVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileByVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileByVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilesByVersionsCompletedEventHandler(object sender, GetFilesByVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesByVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesByVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestFileByMasterIdCompletedEventHandler(object sender, GetLatestFileByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFileByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFileByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestFilesByMasterIdsCompletedEventHandler(object sender, GetLatestFilesByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFilesByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFilesByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DownloadFileCompletedEventHandler(object sender, DownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] fileContents {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DownloadFilePartCompletedEventHandler(object sender, DownloadFilePartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadFilePartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadFilePartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UploadFilePartCompletedEventHandler(object sender, UploadFilePartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFilePartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFilePartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddFileCompletedEventHandler(object sender, AddFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddUploadedFileCompletedEventHandler(object sender, AddUploadedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUploadedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUploadedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckinFileCompletedEventHandler(object sender, CheckinFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckinFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckinFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckinUploadedFileCompletedEventHandler(object sender, CheckinUploadedFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckinUploadedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckinUploadedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckoutFileCompletedEventHandler(object sender, CheckoutFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckoutFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckoutFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] fileContents {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UndoCheckoutFileCompletedEventHandler(object sender, UndoCheckoutFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UndoCheckoutFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UndoCheckoutFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] fileContents {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileFromFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFilesFromFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileFromFolderUnconditionalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFilesFromFolderUnconditionalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileDeleteRestrictionsByMasterIdCompletedEventHandler(object sender, GetFileDeleteRestrictionsByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDeleteRestrictionsByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDeleteRestrictionsByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileDeleteRestrictionsByMasterIdsCompletedEventHandler(object sender, GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelRestricArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelRestricArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ShareFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MoveFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileAssociationRestrictionsByIdCompletedEventHandler(object sender, GetFileAssociationRestrictionsByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileAssociationRestrictionsByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileAssociationRestrictionsByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileAssocRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileAssocRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileRenameRestrictionsByMasterIdCompletedEventHandler(object sender, GetFileRenameRestrictionsByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileRenameRestrictionsByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileRenameRestrictionsByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileRenameRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileRenameRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileRenameRestrictionsByMasterIdsCompletedEventHandler(object sender, GetFileRenameRestrictionsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileRenameRestrictionsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileRenameRestrictionsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileRenameRestricArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileRenameRestricArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFilesBySearchConditionsCompletedEventHandler(object sender, FindFilesBySearchConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFilesBySearchConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFilesBySearchConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bookmark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SrchStatus searchstatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SrchStatus)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBOMByFileIdCompletedEventHandler(object sender, GetBOMByFileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBOMByFileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBOMByFileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BOM Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BOM)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBOMByFileIdsCompletedEventHandler(object sender, GetBOMByFileIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBOMByFileIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBOMByFileIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BOM[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BOM[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPropertyDefinitionsCompletedEventHandler(object sender, GetAllPropertyDefinitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropertyDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropertyDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropDef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropDef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPropertyDefinitionsExtendedCompletedEventHandler(object sender, GetAllPropertyDefinitionsExtendedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropertyDefinitionsExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropertyDefinitionsExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropDef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropDef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventHandler(object sender, FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropDef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropDef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetPropertyDefinitionDisplayNameCompletedEventHandler(object sender, SetPropertyDefinitionDisplayNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPropertyDefinitionDisplayNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPropertyDefinitionDisplayNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropDef Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropDef)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetPropertyDefinitionsDisplayNamesCompletedEventHandler(object sender, SetPropertyDefinitionsDisplayNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPropertyDefinitionsDisplayNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPropertyDefinitionsDisplayNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropDef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropDef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPropertiesCompletedEventHandler(object sender, GetPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropInst[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropInst[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindFileFoldersBySearchConditionsCompletedEventHandler(object sender, FindFileFoldersBySearchConditionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindFileFoldersBySearchConditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindFileFoldersBySearchConditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileFolder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileFolder[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string bookmark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public SrchStatus searchstatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SrchStatus)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllPropertyGroupsCompletedEventHandler(object sender, GetAllPropertyGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPropertyGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPropertyGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropGrp[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropGrp[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddPropertyGroupCompletedEventHandler(object sender, AddPropertyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPropertyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPropertyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropGrp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropGrp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdatePropertyGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdatePropertyGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeletePropertyGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeletePropertyGroupsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void VoidPropertyDefinitionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UnvoidPropertyDefinitionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DisablePropertyDefinitionsForBasicSearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void EnablePropertyDefinitionsForBasicSearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllLabelsCompletedEventHandler(object sender, GetAllLabelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLabelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLabelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Label[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Label[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindLabelByNameCompletedEventHandler(object sender, FindLabelByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindLabelByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindLabelByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Label Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Label)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void FindLabelsByNamesCompletedEventHandler(object sender, FindLabelsByNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindLabelsByNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindLabelsByNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Label[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Label[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddLabelCompletedEventHandler(object sender, AddLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Label Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Label)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateLabelCompletedEventHandler(object sender, UpdateLabelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLabelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLabelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Label Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Label)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileFoldersByLabelIdCompletedEventHandler(object sender, GetFileFoldersByLabelIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileFoldersByLabelIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileFoldersByLabelIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileFolder[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileFolder[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void MoveFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderMoveRestrictionsCompletedEventHandler(object sender, GetFolderMoveRestrictionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderMoveRestrictionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderMoveRestrictionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFolderRenameRestrictionsCompletedEventHandler(object sender, GetFolderRenameRestrictionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderRenameRestrictionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderRenameRestrictionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUniqueFileNameRequiredCompletedEventHandler(object sender, GetUniqueFileNameRequiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUniqueFileNameRequiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUniqueFileNameRequiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetUniqueFileNameRequiredCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetEnableDWFAttachmentCompletedEventHandler(object sender, GetEnableDWFAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnableDWFAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnableDWFAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetEnableDWFAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDWFPublishFolderLocationCompletedEventHandler(object sender, GetDWFPublishFolderLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDWFPublishFolderLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDWFPublishFolderLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDWFPublishFolderLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDWFPublishPreserveFolderHierarchyCompletedEventHandler(object sender, GetDWFPublishPreserveFolderHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDWFPublishPreserveFolderHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDWFPublishPreserveFolderHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDWFPublishPreserveFolderHierarchyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetEnforceWorkingFolderCompletedEventHandler(object sender, GetEnforceWorkingFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnforceWorkingFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnforceWorkingFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetEnforceWorkingFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRequiredWorkingFolderLocationCompletedEventHandler(object sender, GetRequiredWorkingFolderLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequiredWorkingFolderLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequiredWorkingFolderLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetRequiredWorkingFolderLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetWorkspaceSyncFileLimitCompletedEventHandler(object sender, GetWorkspaceSyncFileLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkspaceSyncFileLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkspaceSyncFileLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public uint Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetWorkspaceSyncFileLimitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBreakDesignVisualizationLinkCommandListCompletedEventHandler(object sender, GetBreakDesignVisualizationLinkCommandListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBreakDesignVisualizationLinkCommandListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBreakDesignVisualizationLinkCommandListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BreakDesignVisualizationLinkCommandList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BreakDesignVisualizationLinkCommandList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetBreakDesignVisualizationLinkCommandListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBlockExplorerDesignFileCheckinCompletedEventHandler(object sender, GetBlockExplorerDesignFileCheckinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlockExplorerDesignFileCheckinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlockExplorerDesignFileCheckinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetBlockExplorerDesignFileCheckinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileAssociationsByIdsCompletedEventHandler(object sender, GetFileAssociationsByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileAssociationsByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileAssociationsByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileAssocArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileAssocArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestFileAssociationsByMasterIdsCompletedEventHandler(object sender, GetLatestFileAssociationsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestFileAssociationsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestFileAssociationsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileAssocArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileAssocArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAssociatedFilePathsByIdsCompletedEventHandler(object sender, GetAssociatedFilePathsByIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociatedFilePathsByIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociatedFilePathsByIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilePathArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilePathArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLatestAssociatedFilePathsByMasterIdsCompletedEventHandler(object sender, GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilePathArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilePathArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ValidateBOMByFileIdCompletedEventHandler(object sender, ValidateBOMByFileIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBOMByFileIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateBOMByFileIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetComponentPropertiesCompletedEventHandler(object sender, GetComponentPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComponentPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComponentPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompPropInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompPropInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddComponentCustomPropertyDefinitionCompletedEventHandler(object sender, AddComponentCustomPropertyDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddComponentCustomPropertyDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddComponentCustomPropertyDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PropDef Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PropDef)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteComponentCustomPropertyDefinitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventHandler(object sender, GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelRestricEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelRestricEx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileVersionsByMasterIdsCompletedEventHandler(object sender, DeleteFileVersionsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileVersionsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileVersionsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileVersionsByMasterIdsUnconditionalCompletedEventHandler(object sender, DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTrackFileStatusCompletedEventHandler(object sender, GetTrackFileStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrackFileStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrackFileStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetTrackFileStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFilterConfigXmlCompletedEventHandler(object sender, GetFilterConfigXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilterConfigXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilterConfigXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileVersionsCompletedEventHandler(object sender, DeleteFileVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileVersionsUnconditionalCompletedEventHandler(object sender, DeleteFileVersionsUnconditionalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileVersionsUnconditionalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileVersionsUnconditionalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetFileStatusByMasterIdCompletedEventHandler(object sender, SetFileStatusByMasterIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFileStatusByMasterIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFileStatusByMasterIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetFileStatusByMasterIdsCompletedEventHandler(object sender, SetFileStatusByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetFileStatusByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetFileStatusByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public File[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((File[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileStatusSetRestrictionsByMasterIdsCompletedEventHandler(object sender, GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocRestricArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocRestricArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFileVersionDeleteRestrictionsByFileIdsCompletedEventHandler(object sender, GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileDelRestricEx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileDelRestricEx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddFileNamingSchemeCompletedEventHandler(object sender, AddFileNamingSchemeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileNamingSchemeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileNamingSchemeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileNmngSchm Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileNmngSchm)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateFileNamingSchemeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteFileNamingSchemeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDefaultFileNamingSchemeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllFileNamingSchemesCompletedEventHandler(object sender, GetAllFileNamingSchemesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFileNamingSchemesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFileNamingSchemesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileNmngSchm[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileNmngSchm[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ReserveFileNamingDescriptionsCompletedEventHandler(object sender, ReserveFileNamingDescriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReserveFileNamingDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReserveFileNamingDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileNmngDescr[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileNmngDescr[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RollbackFileNamingDescriptionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllBasicSearchPropertyDefinitionIdsCompletedEventHandler(object sender, GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddDesignVisualizationFileAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDesignVisualizationAttachmentStatusByIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventHandler(object sender, GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FileAssocArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FileAssocArray[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591