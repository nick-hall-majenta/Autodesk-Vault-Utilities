//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace VaultFolderCreate.SecuritySvc {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SecurityServiceSoap", Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SecRestric[]))]
    public partial class SecurityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SecurityHeader securityHeaderValueField;
        
        private System.Threading.SendOrPostCallback SignInOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignIn2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SignOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACLsByEntityIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateACLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACLUpdateRestrictionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAccessPermissionsAndGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSystemACLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateACLEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSystemACLsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntACLsByEntityIdsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SecurityService() {
            this.Url = global::VaultFolderCreate.Properties.Settings.Default.VaultFolderCreate_SecuritySvc_SecurityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SecurityHeader SecurityHeaderValue {
            get {
                return this.securityHeaderValueField;
            }
            set {
                this.securityHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SignInCompletedEventHandler SignInCompleted;
        
        /// <remarks/>
        public event SignIn2CompletedEventHandler SignIn2Completed;
        
        /// <remarks/>
        public event SignOutCompletedEventHandler SignOutCompleted;
        
        /// <remarks/>
        public event GetACLsByEntityIdsCompletedEventHandler GetACLsByEntityIdsCompleted;
        
        /// <remarks/>
        public event UpdateACLCompletedEventHandler UpdateACLCompleted;
        
        /// <remarks/>
        public event GetACLUpdateRestrictionsCompletedEventHandler GetACLUpdateRestrictionsCompleted;
        
        /// <remarks/>
        public event GetAllAccessPermissionsAndGroupsCompletedEventHandler GetAllAccessPermissionsAndGroupsCompleted;
        
        /// <remarks/>
        public event AddSystemACLCompletedEventHandler AddSystemACLCompleted;
        
        /// <remarks/>
        public event UpdateACLEntriesCompletedEventHandler UpdateACLEntriesCompleted;
        
        /// <remarks/>
        public event SetSystemACLsCompletedEventHandler SetSystemACLsCompleted;
        
        /// <remarks/>
        public event GetEntACLsByEntityIdsCompletedEventHandler GetEntACLsByEntityIdsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/SignIn", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SignIn(string userName, string userPassword, string knowledgeVault) {
            this.Invoke("SignIn", new object[] {
                        userName,
                        userPassword,
                        knowledgeVault});
        }
        
        /// <remarks/>
        public void SignInAsync(string userName, string userPassword, string knowledgeVault) {
            this.SignInAsync(userName, userPassword, knowledgeVault, null);
        }
        
        /// <remarks/>
        public void SignInAsync(string userName, string userPassword, string knowledgeVault, object userState) {
            if ((this.SignInOperationCompleted == null)) {
                this.SignInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignInOperationCompleted);
            }
            this.InvokeAsync("SignIn", new object[] {
                        userName,
                        userPassword,
                        knowledgeVault}, this.SignInOperationCompleted, userState);
        }
        
        private void OnSignInOperationCompleted(object arg) {
            if ((this.SignInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignInCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.Out)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/SignIn2", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SignIn2(string userName, string userPassword) {
            this.Invoke("SignIn2", new object[] {
                        userName,
                        userPassword});
        }
        
        /// <remarks/>
        public void SignIn2Async(string userName, string userPassword) {
            this.SignIn2Async(userName, userPassword, null);
        }
        
        /// <remarks/>
        public void SignIn2Async(string userName, string userPassword, object userState) {
            if ((this.SignIn2OperationCompleted == null)) {
                this.SignIn2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignIn2OperationCompleted);
            }
            this.InvokeAsync("SignIn2", new object[] {
                        userName,
                        userPassword}, this.SignIn2OperationCompleted, userState);
        }
        
        private void OnSignIn2OperationCompleted(object arg) {
            if ((this.SignIn2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignIn2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue", Direction=System.Web.Services.Protocols.SoapHeaderDirection.InOut)]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/SignOut", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SignOut() {
            this.Invoke("SignOut", new object[0]);
        }
        
        /// <remarks/>
        public void SignOutAsync() {
            this.SignOutAsync(null);
        }
        
        /// <remarks/>
        public void SignOutAsync(object userState) {
            if ((this.SignOutOperationCompleted == null)) {
                this.SignOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignOutOperationCompleted);
            }
            this.InvokeAsync("SignOut", new object[0], this.SignOutOperationCompleted, userState);
        }
        
        private void OnSignOutOperationCompleted(object arg) {
            if ((this.SignOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/GetACLsByEntityIds", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ACL[] GetACLsByEntityIds(long[] entityIds) {
            object[] results = this.Invoke("GetACLsByEntityIds", new object[] {
                        entityIds});
            return ((ACL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetACLsByEntityIdsAsync(long[] entityIds) {
            this.GetACLsByEntityIdsAsync(entityIds, null);
        }
        
        /// <remarks/>
        public void GetACLsByEntityIdsAsync(long[] entityIds, object userState) {
            if ((this.GetACLsByEntityIdsOperationCompleted == null)) {
                this.GetACLsByEntityIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACLsByEntityIdsOperationCompleted);
            }
            this.InvokeAsync("GetACLsByEntityIds", new object[] {
                        entityIds}, this.GetACLsByEntityIdsOperationCompleted, userState);
        }
        
        private void OnGetACLsByEntityIdsOperationCompleted(object arg) {
            if ((this.GetACLsByEntityIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACLsByEntityIdsCompleted(this, new GetACLsByEntityIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/UpdateACL", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ACL UpdateACL(long entityId, ACE[] entries, PrpgType prpgType) {
            object[] results = this.Invoke("UpdateACL", new object[] {
                        entityId,
                        entries,
                        prpgType});
            return ((ACL)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateACLAsync(long entityId, ACE[] entries, PrpgType prpgType) {
            this.UpdateACLAsync(entityId, entries, prpgType, null);
        }
        
        /// <remarks/>
        public void UpdateACLAsync(long entityId, ACE[] entries, PrpgType prpgType, object userState) {
            if ((this.UpdateACLOperationCompleted == null)) {
                this.UpdateACLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateACLOperationCompleted);
            }
            this.InvokeAsync("UpdateACL", new object[] {
                        entityId,
                        entries,
                        prpgType}, this.UpdateACLOperationCompleted, userState);
        }
        
        private void OnUpdateACLOperationCompleted(object arg) {
            if ((this.UpdateACLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateACLCompleted(this, new UpdateACLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/GetACLUpdateRestrictions", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SecRestric[] GetACLUpdateRestrictions(long entityId, ACE[] entries) {
            object[] results = this.Invoke("GetACLUpdateRestrictions", new object[] {
                        entityId,
                        entries});
            return ((SecRestric[])(results[0]));
        }
        
        /// <remarks/>
        public void GetACLUpdateRestrictionsAsync(long entityId, ACE[] entries) {
            this.GetACLUpdateRestrictionsAsync(entityId, entries, null);
        }
        
        /// <remarks/>
        public void GetACLUpdateRestrictionsAsync(long entityId, ACE[] entries, object userState) {
            if ((this.GetACLUpdateRestrictionsOperationCompleted == null)) {
                this.GetACLUpdateRestrictionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACLUpdateRestrictionsOperationCompleted);
            }
            this.InvokeAsync("GetACLUpdateRestrictions", new object[] {
                        entityId,
                        entries}, this.GetACLUpdateRestrictionsOperationCompleted, userState);
        }
        
        private void OnGetACLUpdateRestrictionsOperationCompleted(object arg) {
            if ((this.GetACLUpdateRestrictionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACLUpdateRestrictionsCompleted(this, new GetACLUpdateRestrictionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/GetAllAccessPermissionsAndGroups", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessPermisAndGrp GetAllAccessPermissionsAndGroups() {
            object[] results = this.Invoke("GetAllAccessPermissionsAndGroups", new object[0]);
            return ((AccessPermisAndGrp)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAccessPermissionsAndGroupsAsync() {
            this.GetAllAccessPermissionsAndGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllAccessPermissionsAndGroupsAsync(object userState) {
            if ((this.GetAllAccessPermissionsAndGroupsOperationCompleted == null)) {
                this.GetAllAccessPermissionsAndGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAccessPermissionsAndGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAllAccessPermissionsAndGroups", new object[0], this.GetAllAccessPermissionsAndGroupsOperationCompleted, userState);
        }
        
        private void OnGetAllAccessPermissionsAndGroupsOperationCompleted(object arg) {
            if ((this.GetAllAccessPermissionsAndGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAccessPermissionsAndGroupsCompleted(this, new GetAllAccessPermissionsAndGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/AddSystemACL", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ACL AddSystemACL(ACE[] entries) {
            object[] results = this.Invoke("AddSystemACL", new object[] {
                        entries});
            return ((ACL)(results[0]));
        }
        
        /// <remarks/>
        public void AddSystemACLAsync(ACE[] entries) {
            this.AddSystemACLAsync(entries, null);
        }
        
        /// <remarks/>
        public void AddSystemACLAsync(ACE[] entries, object userState) {
            if ((this.AddSystemACLOperationCompleted == null)) {
                this.AddSystemACLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSystemACLOperationCompleted);
            }
            this.InvokeAsync("AddSystemACL", new object[] {
                        entries}, this.AddSystemACLOperationCompleted, userState);
        }
        
        private void OnAddSystemACLOperationCompleted(object arg) {
            if ((this.AddSystemACLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSystemACLCompleted(this, new AddSystemACLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/UpdateACLEntries", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ACL UpdateACLEntries(long aclId, ACE[] entries) {
            object[] results = this.Invoke("UpdateACLEntries", new object[] {
                        aclId,
                        entries});
            return ((ACL)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateACLEntriesAsync(long aclId, ACE[] entries) {
            this.UpdateACLEntriesAsync(aclId, entries, null);
        }
        
        /// <remarks/>
        public void UpdateACLEntriesAsync(long aclId, ACE[] entries, object userState) {
            if ((this.UpdateACLEntriesOperationCompleted == null)) {
                this.UpdateACLEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateACLEntriesOperationCompleted);
            }
            this.InvokeAsync("UpdateACLEntries", new object[] {
                        aclId,
                        entries}, this.UpdateACLEntriesOperationCompleted, userState);
        }
        
        private void OnUpdateACLEntriesOperationCompleted(object arg) {
            if ((this.UpdateACLEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateACLEntriesCompleted(this, new UpdateACLEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/SetSystemACLs", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSystemACLs(long[] entityIds, long aclId) {
            this.Invoke("SetSystemACLs", new object[] {
                        entityIds,
                        aclId});
        }
        
        /// <remarks/>
        public void SetSystemACLsAsync(long[] entityIds, long aclId) {
            this.SetSystemACLsAsync(entityIds, aclId, null);
        }
        
        /// <remarks/>
        public void SetSystemACLsAsync(long[] entityIds, long aclId, object userState) {
            if ((this.SetSystemACLsOperationCompleted == null)) {
                this.SetSystemACLsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSystemACLsOperationCompleted);
            }
            this.InvokeAsync("SetSystemACLs", new object[] {
                        entityIds,
                        aclId}, this.SetSystemACLsOperationCompleted, userState);
        }
        
        private void OnSetSystemACLsOperationCompleted(object arg) {
            if ((this.SetSystemACLsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSystemACLsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Security/01/17/2008/GetEntACLsByEntityIds", RequestNamespace="http://AutodeskDM/Services/Security/01/17/2008/", ResponseNamespace="http://AutodeskDM/Services/Security/01/17/2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EntsAndACLs GetEntACLsByEntityIds(long[] entityIds) {
            object[] results = this.Invoke("GetEntACLsByEntityIds", new object[] {
                        entityIds});
            return ((EntsAndACLs)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntACLsByEntityIdsAsync(long[] entityIds) {
            this.GetEntACLsByEntityIdsAsync(entityIds, null);
        }
        
        /// <remarks/>
        public void GetEntACLsByEntityIdsAsync(long[] entityIds, object userState) {
            if ((this.GetEntACLsByEntityIdsOperationCompleted == null)) {
                this.GetEntACLsByEntityIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntACLsByEntityIdsOperationCompleted);
            }
            this.InvokeAsync("GetEntACLsByEntityIds", new object[] {
                        entityIds}, this.GetEntACLsByEntityIdsOperationCompleted, userState);
        }
        
        private void OnGetEntACLsByEntityIdsOperationCompleted(object arg) {
            if ((this.GetEntACLsByEntityIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntACLsByEntityIdsCompleted(this, new GetEntACLsByEntityIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/", IsNullable=false)]
    public partial class SecurityHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string ticketField;
        
        private long userIdField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Ticket {
            get {
                return this.ticketField;
            }
            set {
                this.ticketField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class EntACL {
        
        private long entIdField;
        
        private long aCLIdField;
        
        private long sysACLIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long EntId {
            get {
                return this.entIdField;
            }
            set {
                this.entIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ACLId {
            get {
                return this.aCLIdField;
            }
            set {
                this.aCLIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long SysACLId {
            get {
                return this.sysACLIdField;
            }
            set {
                this.sysACLIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class EntsAndACLs {
        
        private ACL[] aCLArrayField;
        
        private EntACL[] entACLArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ACLArray")]
        public ACL[] ACLArray {
            get {
                return this.aCLArrayField;
            }
            set {
                this.aCLArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EntACLArray")]
        public EntACL[] EntACLArray {
            get {
                return this.entACLArrayField;
            }
            set {
                this.entACLArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class ACL {
        
        private ACE[] aCEArrayField;
        
        private long idField;
        
        /// <remarks/>
        public ACE[] ACEArray {
            get {
                return this.aCEArrayField;
            }
            set {
                this.aCEArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class ACE {
        
        private AccessPermis[] permisArrayField;
        
        private long userGrpIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Permis")]
        public AccessPermis[] PermisArray {
            get {
                return this.permisArrayField;
            }
            set {
                this.permisArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long UserGrpId {
            get {
                return this.userGrpIdField;
            }
            set {
                this.userGrpIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class AccessPermis {
        
        private long idField;
        
        private bool valField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Val {
            get {
                return this.valField;
            }
            set {
                this.valField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class AccessPermisGrp {
        
        private AccessPermis[] permisArrayField;
        
        private long idField;
        
        private string nameField;
        
        private string descrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Permis")]
        public AccessPermis[] PermisArray {
            get {
                return this.permisArrayField;
            }
            set {
                this.permisArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class AccessPermisDef {
        
        private long idField;
        
        private string nameField;
        
        private string descrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Descr {
            get {
                return this.descrField;
            }
            set {
                this.descrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class AccessPermisAndGrp {
        
        private AccessPermisDef[] defArrayField;
        
        private AccessPermisGrp[] grpArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Def")]
        public AccessPermisDef[] DefArray {
            get {
                return this.defArrayField;
            }
            set {
                this.defArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Desc")]
        public AccessPermisGrp[] GrpArray {
            get {
                return this.grpArrayField;
            }
            set {
                this.grpArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public partial class SecRestric {
        
        private object[] paramArrayField;
        
        private SecRestricCode codeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ParamArray")]
        public object[] ParamArray {
            get {
                return this.paramArrayField;
            }
            set {
                this.paramArrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public SecRestricCode Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public enum SecRestricCode {
        
        /// <remarks/>
        LessRestrctiveParent,
        
        /// <remarks/>
        BadEntityId,
        
        /// <remarks/>
        UnsupportedEntityClass,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://AutodeskDM/Services/Security/01/17/2008/")]
    public enum PrpgType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        AppendPermissions,
        
        /// <remarks/>
        ReplacePermissions,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SignInCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SignIn2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SignOutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetACLsByEntityIdsCompletedEventHandler(object sender, GetACLsByEntityIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACLsByEntityIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACLsByEntityIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateACLCompletedEventHandler(object sender, UpdateACLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateACLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateACLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACL)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetACLUpdateRestrictionsCompletedEventHandler(object sender, GetACLUpdateRestrictionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACLUpdateRestrictionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACLUpdateRestrictionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SecRestric[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SecRestric[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllAccessPermissionsAndGroupsCompletedEventHandler(object sender, GetAllAccessPermissionsAndGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAccessPermissionsAndGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAccessPermissionsAndGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessPermisAndGrp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessPermisAndGrp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddSystemACLCompletedEventHandler(object sender, AddSystemACLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSystemACLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSystemACLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACL)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateACLEntriesCompletedEventHandler(object sender, UpdateACLEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateACLEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateACLEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACL)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetSystemACLsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetEntACLsByEntityIdsCompletedEventHandler(object sender, GetEntACLsByEntityIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntACLsByEntityIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntACLsByEntityIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EntsAndACLs Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EntsAndACLs)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591