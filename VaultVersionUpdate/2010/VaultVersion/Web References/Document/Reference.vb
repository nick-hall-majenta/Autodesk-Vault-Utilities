'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3082
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3082.
'
Namespace Document
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="DocumentServiceSoap", [Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class DocumentService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private securityHeaderValueField As SecurityHeader
        
        Private GetFileFoldersByLabelIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MoveFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderMoveRestrictionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderRenameRestrictionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUniqueFileNameRequiredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetUniqueFileNameRequiredOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEnableDWFAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetEnableDWFAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDWFPublishFolderLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDWFPublishFolderLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDWFPublishPreserveFolderHierarchyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDWFPublishPreserveFolderHierarchyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEnforceWorkingFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetEnforceWorkingFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRequiredWorkingFolderLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRequiredWorkingFolderLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWorkspaceSyncFileLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetWorkspaceSyncFileLimitOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBulkFileThresholdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetBulkFileThresholdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBreakDesignVisualizationLinkCommandListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetBreakDesignVisualizationLinkCommandListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBlockExplorerDesignFileCheckinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetBlockExplorerDesignFileCheckinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRestrictMoveOnRevisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRestrictMoveOnRevisionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileAssociationsByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestFileAssociationsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRevisionFileAssociationsByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAssociatedFilePathsByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRevisionAssociatedFilePathsByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestAssociatedFilePathsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateBOMByFileIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComponentPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddComponentCustomPropertyDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteComponentCustomPropertyDefinitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileVersionsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackFileStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetTrackFileStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilterConfigXmlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileVersionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileVersionsUnconditionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetFileStatusByMasterIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetFileStatusByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileStatusSetRestrictionsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFileNamingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFileNamingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileNamingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDefaultFileNamingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllFileNamingSchemesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReserveFileNamingDescriptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RollbackFileNamingDescriptionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllBasicSearchPropertyDefinitionIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddDesignVisualizationFileAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDesignVisualizationAttachmentStatusByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateFileNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateFileNumbersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNumberingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateNumberingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteNumberingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteNumberingSchemeUnconditionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActivateNumberingSchemesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeactivateNumberingSchemesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDefaultNumberingSchemeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNumberingSchemesByTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContentSourcesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContentSourceIdsByFileIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderRootOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderByPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFoldersByPathsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFoldersByPathsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFoldersByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFoldersByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFoldersByParentIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFoldersByParentIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFoldersByFileMasterIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFoldersByFileMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFolderHierarchyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFolderHierarchyUnconditionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderDeleteRestrictionsByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderDeleteRestrictionsByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFolderUNCPathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFolderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilesByIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindLatestFilesByPathsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilesByPathsAndChecksumsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilesByFoldersNamesAndChecksumsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilePathsByNameAndChecksumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilesByDatesPathsAndChecksumsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilesByFoldersDatesNamesAndChecksumsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilePathsByDateNameAndChecksumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestFilePathsByNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestDuplicateFilePathsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestFilesByFolderIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestFilesByFolderIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilesByMasterIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilesByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilesByHistoryTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileByVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFilesByVersionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestFileByMasterIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLatestFilesByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DownloadFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DownloadFilePartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadFilePartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddUploadedFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckinFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckinUploadedFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckoutFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UndoCheckoutFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileFromFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFilesFromFolderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFileFromFolderUnconditionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFilesFromFolderUnconditionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileDeleteRestrictionsByMasterIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileDeleteRestrictionsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ShareFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MoveFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileAssociationRestrictionsByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileRenameRestrictionsByMasterIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFileRenameRestrictionsByMasterIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFilesBySearchConditionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBOMByFileIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBOMByFileIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllPropertyDefinitionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPropertyDefinitionDisplayNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPropertyDefinitionsDisplayNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPropertiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindFileFoldersBySearchConditionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllPropertyGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPropertyGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePropertyGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePropertyGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePropertyGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePropertyGroupsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private VoidPropertyDefinitionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UnvoidPropertyDefinitionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DisablePropertyDefinitionsForBasicSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EnablePropertyDefinitionsForBasicSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllLabelsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindLabelByNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindLabelsByNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.VaultVersion.My.MySettings.Default.VaultVersion_Document_DocumentService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property SecurityHeaderValue() As SecurityHeader
            Get
                Return Me.securityHeaderValueField
            End Get
            Set
                Me.securityHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetFileFoldersByLabelIdCompleted As GetFileFoldersByLabelIdCompletedEventHandler
        
        '''<remarks/>
        Public Event MoveFolderCompleted As MoveFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderMoveRestrictionsCompleted As GetFolderMoveRestrictionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderRenameRestrictionsCompleted As GetFolderRenameRestrictionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUniqueFileNameRequiredCompleted As GetUniqueFileNameRequiredCompletedEventHandler
        
        '''<remarks/>
        Public Event SetUniqueFileNameRequiredCompleted As SetUniqueFileNameRequiredCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEnableDWFAttachmentCompleted As GetEnableDWFAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event SetEnableDWFAttachmentCompleted As SetEnableDWFAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDWFPublishFolderLocationCompleted As GetDWFPublishFolderLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDWFPublishFolderLocationCompleted As SetDWFPublishFolderLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDWFPublishPreserveFolderHierarchyCompleted As GetDWFPublishPreserveFolderHierarchyCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDWFPublishPreserveFolderHierarchyCompleted As SetDWFPublishPreserveFolderHierarchyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEnforceWorkingFolderCompleted As GetEnforceWorkingFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event SetEnforceWorkingFolderCompleted As SetEnforceWorkingFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRequiredWorkingFolderLocationCompleted As GetRequiredWorkingFolderLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRequiredWorkingFolderLocationCompleted As SetRequiredWorkingFolderLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWorkspaceSyncFileLimitCompleted As GetWorkspaceSyncFileLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event SetWorkspaceSyncFileLimitCompleted As SetWorkspaceSyncFileLimitCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBulkFileThresholdCompleted As GetBulkFileThresholdCompletedEventHandler
        
        '''<remarks/>
        Public Event SetBulkFileThresholdCompleted As SetBulkFileThresholdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBreakDesignVisualizationLinkCommandListCompleted As GetBreakDesignVisualizationLinkCommandListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetBreakDesignVisualizationLinkCommandListCompleted As SetBreakDesignVisualizationLinkCommandListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBlockExplorerDesignFileCheckinCompleted As GetBlockExplorerDesignFileCheckinCompletedEventHandler
        
        '''<remarks/>
        Public Event SetBlockExplorerDesignFileCheckinCompleted As SetBlockExplorerDesignFileCheckinCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRestrictMoveOnRevisionCompleted As GetRestrictMoveOnRevisionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRestrictMoveOnRevisionCompleted As SetRestrictMoveOnRevisionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileAssociationsByIdsCompleted As GetFileAssociationsByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestFileAssociationsByMasterIdsCompleted As GetLatestFileAssociationsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRevisionFileAssociationsByIdsCompleted As GetRevisionFileAssociationsByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAssociatedFilePathsByIdsCompleted As GetAssociatedFilePathsByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRevisionAssociatedFilePathsByIdsCompleted As GetRevisionAssociatedFilePathsByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestAssociatedFilePathsByMasterIdsCompleted As GetLatestAssociatedFilePathsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateBOMByFileIdCompleted As ValidateBOMByFileIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComponentPropertiesCompleted As GetComponentPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event AddComponentCustomPropertyDefinitionCompleted As AddComponentCustomPropertyDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteComponentCustomPropertyDefinitionCompleted As DeleteComponentCustomPropertyDefinitionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileVersionDeleteRestrictionsByMasterIdsCompleted As GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileVersionsByMasterIdsCompleted As DeleteFileVersionsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileVersionsByMasterIdsUnconditionalCompleted As DeleteFileVersionsByMasterIdsUnconditionalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackFileStatusCompleted As GetTrackFileStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SetTrackFileStatusCompleted As SetTrackFileStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilterConfigXmlCompleted As GetFilterConfigXmlCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileVersionsCompleted As DeleteFileVersionsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileVersionsUnconditionalCompleted As DeleteFileVersionsUnconditionalCompletedEventHandler
        
        '''<remarks/>
        Public Event SetFileStatusByMasterIdCompleted As SetFileStatusByMasterIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SetFileStatusByMasterIdsCompleted As SetFileStatusByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileStatusSetRestrictionsByMasterIdsCompleted As GetFileStatusSetRestrictionsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileVersionDeleteRestrictionsByFileIdsCompleted As GetFileVersionDeleteRestrictionsByFileIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFileNamingSchemeCompleted As AddFileNamingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFileNamingSchemeCompleted As UpdateFileNamingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileNamingSchemeCompleted As DeleteFileNamingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDefaultFileNamingSchemeCompleted As SetDefaultFileNamingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllFileNamingSchemesCompleted As GetAllFileNamingSchemesCompletedEventHandler
        
        '''<remarks/>
        Public Event ReserveFileNamingDescriptionsCompleted As ReserveFileNamingDescriptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event RollbackFileNamingDescriptionsCompleted As RollbackFileNamingDescriptionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllBasicSearchPropertyDefinitionIdsCompleted As GetAllBasicSearchPropertyDefinitionIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddDesignVisualizationFileAttachmentCompleted As AddDesignVisualizationFileAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDesignVisualizationAttachmentStatusByIdCompleted As SetDesignVisualizationAttachmentStatusByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDesignVisualizationAttachmentsByFileMasterIdsCompleted As GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateFileNumberCompleted As GenerateFileNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateFileNumbersCompleted As GenerateFileNumbersCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNumberingSchemeCompleted As AddNumberingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateNumberingSchemeCompleted As UpdateNumberingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteNumberingSchemeCompleted As DeleteNumberingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteNumberingSchemeUnconditionalCompleted As DeleteNumberingSchemeUnconditionalCompletedEventHandler
        
        '''<remarks/>
        Public Event ActivateNumberingSchemesCompleted As ActivateNumberingSchemesCompletedEventHandler
        
        '''<remarks/>
        Public Event DeactivateNumberingSchemesCompleted As DeactivateNumberingSchemesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDefaultNumberingSchemeCompleted As SetDefaultNumberingSchemeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNumberingSchemesByTypeCompleted As GetNumberingSchemesByTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContentSourcesCompleted As GetContentSourcesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContentSourceIdsByFileIdsCompleted As GetContentSourceIdsByFileIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderRootCompleted As GetFolderRootCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderByPathCompleted As GetFolderByPathCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFoldersByPathsCompleted As GetFoldersByPathsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFoldersByPathsCompleted As FindFoldersByPathsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderByIdCompleted As GetFolderByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFoldersByIdsCompleted As GetFoldersByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFoldersByIdsCompleted As FindFoldersByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFoldersByParentIdCompleted As GetFoldersByParentIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFoldersByParentIdsCompleted As GetFoldersByParentIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFoldersByFileMasterIdCompleted As GetFoldersByFileMasterIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFoldersByFileMasterIdsCompleted As GetFoldersByFileMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFolderCompleted As AddFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFolderHierarchyCompleted As DeleteFolderHierarchyCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFolderHierarchyUnconditionalCompleted As DeleteFolderHierarchyUnconditionalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderDeleteRestrictionsByIdCompleted As GetFolderDeleteRestrictionsByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderDeleteRestrictionsByIdsCompleted As GetFolderDeleteRestrictionsByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFolderUNCPathCompleted As UpdateFolderUNCPathCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFolderNameCompleted As UpdateFolderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileByIdCompleted As GetFileByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilesByIdsCompleted As GetFilesByIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindLatestFilesByPathsCompleted As FindLatestFilesByPathsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilesByPathsAndChecksumsCompleted As FindFilesByPathsAndChecksumsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilesByFoldersNamesAndChecksumsCompleted As FindFilesByFoldersNamesAndChecksumsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilePathsByNameAndChecksumCompleted As FindFilePathsByNameAndChecksumCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilesByDatesPathsAndChecksumsCompleted As FindFilesByDatesPathsAndChecksumsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilesByFoldersDatesNamesAndChecksumsCompleted As FindFilesByFoldersDatesNamesAndChecksumsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilePathsByDateNameAndChecksumCompleted As FindFilePathsByDateNameAndChecksumCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestFilePathsByNamesCompleted As GetLatestFilePathsByNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestDuplicateFilePathsCompleted As GetLatestDuplicateFilePathsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestFilesByFolderIdCompleted As GetLatestFilesByFolderIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestFilesByFolderIdsCompleted As GetLatestFilesByFolderIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilesByMasterIdCompleted As GetFilesByMasterIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilesByMasterIdsCompleted As GetFilesByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilesByHistoryTypeCompleted As GetFilesByHistoryTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileByVersionCompleted As GetFileByVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFilesByVersionsCompleted As GetFilesByVersionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestFileByMasterIdCompleted As GetLatestFileByMasterIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLatestFilesByMasterIdsCompleted As GetLatestFilesByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event DownloadFileCompleted As DownloadFileCompletedEventHandler
        
        '''<remarks/>
        Public Event DownloadFilePartCompleted As DownloadFilePartCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadFilePartCompleted As UploadFilePartCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFileCompleted As AddFileCompletedEventHandler
        
        '''<remarks/>
        Public Event AddUploadedFileCompleted As AddUploadedFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckinFileCompleted As CheckinFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckinUploadedFileCompleted As CheckinUploadedFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckoutFileCompleted As CheckoutFileCompletedEventHandler
        
        '''<remarks/>
        Public Event UndoCheckoutFileCompleted As UndoCheckoutFileCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileFromFolderCompleted As DeleteFileFromFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFilesFromFolderCompleted As DeleteFilesFromFolderCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFileFromFolderUnconditionalCompleted As DeleteFileFromFolderUnconditionalCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFilesFromFolderUnconditionalCompleted As DeleteFilesFromFolderUnconditionalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileDeleteRestrictionsByMasterIdCompleted As GetFileDeleteRestrictionsByMasterIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileDeleteRestrictionsByMasterIdsCompleted As GetFileDeleteRestrictionsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event ShareFileCompleted As ShareFileCompletedEventHandler
        
        '''<remarks/>
        Public Event MoveFileCompleted As MoveFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileAssociationRestrictionsByIdCompleted As GetFileAssociationRestrictionsByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileRenameRestrictionsByMasterIdCompleted As GetFileRenameRestrictionsByMasterIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFileRenameRestrictionsByMasterIdsCompleted As GetFileRenameRestrictionsByMasterIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFilesBySearchConditionsCompleted As FindFilesBySearchConditionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBOMByFileIdCompleted As GetBOMByFileIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBOMByFileIdsCompleted As GetBOMByFileIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllPropertyDefinitionsCompleted As GetAllPropertyDefinitionsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompleted As FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPropertyDefinitionDisplayNameCompleted As SetPropertyDefinitionDisplayNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPropertyDefinitionsDisplayNamesCompleted As SetPropertyDefinitionsDisplayNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPropertiesCompleted As GetPropertiesCompletedEventHandler
        
        '''<remarks/>
        Public Event FindFileFoldersBySearchConditionsCompleted As FindFileFoldersBySearchConditionsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllPropertyGroupsCompleted As GetAllPropertyGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPropertyGroupCompleted As AddPropertyGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePropertyGroupCompleted As UpdatePropertyGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePropertyGroupsCompleted As UpdatePropertyGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePropertyGroupCompleted As DeletePropertyGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePropertyGroupsCompleted As DeletePropertyGroupsCompletedEventHandler
        
        '''<remarks/>
        Public Event VoidPropertyDefinitionsCompleted As VoidPropertyDefinitionsCompletedEventHandler
        
        '''<remarks/>
        Public Event UnvoidPropertyDefinitionsCompleted As UnvoidPropertyDefinitionsCompletedEventHandler
        
        '''<remarks/>
        Public Event DisablePropertyDefinitionsForBasicSearchCompleted As DisablePropertyDefinitionsForBasicSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event EnablePropertyDefinitionsForBasicSearchCompleted As EnablePropertyDefinitionsForBasicSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllLabelsCompleted As GetAllLabelsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindLabelByNameCompleted As FindLabelByNameCompletedEventHandler
        
        '''<remarks/>
        Public Event FindLabelsByNamesCompleted As FindLabelsByNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event AddLabelCompleted As AddLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteLabelCompleted As DeleteLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLabelCompleted As UpdateLabelCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileFoldersByLabelId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileFoldersByLabelId(ByVal labelId As Long) As FileFolder()
            Dim results() As Object = Me.Invoke("GetFileFoldersByLabelId", New Object() {labelId})
            Return CType(results(0),FileFolder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileFoldersByLabelIdAsync(ByVal labelId As Long)
            Me.GetFileFoldersByLabelIdAsync(labelId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileFoldersByLabelIdAsync(ByVal labelId As Long, ByVal userState As Object)
            If (Me.GetFileFoldersByLabelIdOperationCompleted Is Nothing) Then
                Me.GetFileFoldersByLabelIdOperationCompleted = AddressOf Me.OnGetFileFoldersByLabelIdOperationCompleted
            End If
            Me.InvokeAsync("GetFileFoldersByLabelId", New Object() {labelId}, Me.GetFileFoldersByLabelIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileFoldersByLabelIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileFoldersByLabelIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileFoldersByLabelIdCompleted(Me, New GetFileFoldersByLabelIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/MoveFolder", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MoveFolder(ByVal folderId As Long, ByVal newParentFolderId As Long)
            Me.Invoke("MoveFolder", New Object() {folderId, newParentFolderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveFolderAsync(ByVal folderId As Long, ByVal newParentFolderId As Long)
            Me.MoveFolderAsync(folderId, newParentFolderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveFolderAsync(ByVal folderId As Long, ByVal newParentFolderId As Long, ByVal userState As Object)
            If (Me.MoveFolderOperationCompleted Is Nothing) Then
                Me.MoveFolderOperationCompleted = AddressOf Me.OnMoveFolderOperationCompleted
            End If
            Me.InvokeAsync("MoveFolder", New Object() {folderId, newParentFolderId}, Me.MoveFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnMoveFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.MoveFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MoveFolderCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderMoveRestrictions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderMoveRestrictions(ByVal folderId As Long, ByVal newParentFolderId As Long) As DocRestric()
            Dim results() As Object = Me.Invoke("GetFolderMoveRestrictions", New Object() {folderId, newParentFolderId})
            Return CType(results(0),DocRestric())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderMoveRestrictionsAsync(ByVal folderId As Long, ByVal newParentFolderId As Long)
            Me.GetFolderMoveRestrictionsAsync(folderId, newParentFolderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderMoveRestrictionsAsync(ByVal folderId As Long, ByVal newParentFolderId As Long, ByVal userState As Object)
            If (Me.GetFolderMoveRestrictionsOperationCompleted Is Nothing) Then
                Me.GetFolderMoveRestrictionsOperationCompleted = AddressOf Me.OnGetFolderMoveRestrictionsOperationCompleted
            End If
            Me.InvokeAsync("GetFolderMoveRestrictions", New Object() {folderId, newParentFolderId}, Me.GetFolderMoveRestrictionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderMoveRestrictionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderMoveRestrictionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderMoveRestrictionsCompleted(Me, New GetFolderMoveRestrictionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderRenameRestrictions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderRenameRestrictions(ByVal folderId As Long, ByVal newFolderName As String) As DocRestric()
            Dim results() As Object = Me.Invoke("GetFolderRenameRestrictions", New Object() {folderId, newFolderName})
            Return CType(results(0),DocRestric())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderRenameRestrictionsAsync(ByVal folderId As Long, ByVal newFolderName As String)
            Me.GetFolderRenameRestrictionsAsync(folderId, newFolderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderRenameRestrictionsAsync(ByVal folderId As Long, ByVal newFolderName As String, ByVal userState As Object)
            If (Me.GetFolderRenameRestrictionsOperationCompleted Is Nothing) Then
                Me.GetFolderRenameRestrictionsOperationCompleted = AddressOf Me.OnGetFolderRenameRestrictionsOperationCompleted
            End If
            Me.InvokeAsync("GetFolderRenameRestrictions", New Object() {folderId, newFolderName}, Me.GetFolderRenameRestrictionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderRenameRestrictionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderRenameRestrictionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderRenameRestrictionsCompleted(Me, New GetFolderRenameRestrictionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetUniqueFileNameRequired", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUniqueFileNameRequired() As Boolean
            Dim results() As Object = Me.Invoke("GetUniqueFileNameRequired", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUniqueFileNameRequiredAsync()
            Me.GetUniqueFileNameRequiredAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUniqueFileNameRequiredAsync(ByVal userState As Object)
            If (Me.GetUniqueFileNameRequiredOperationCompleted Is Nothing) Then
                Me.GetUniqueFileNameRequiredOperationCompleted = AddressOf Me.OnGetUniqueFileNameRequiredOperationCompleted
            End If
            Me.InvokeAsync("GetUniqueFileNameRequired", New Object(-1) {}, Me.GetUniqueFileNameRequiredOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUniqueFileNameRequiredOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUniqueFileNameRequiredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUniqueFileNameRequiredCompleted(Me, New GetUniqueFileNameRequiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetUniqueFileNameRequired", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetUniqueFileNameRequired(ByVal required As Boolean)
            Me.Invoke("SetUniqueFileNameRequired", New Object() {required})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUniqueFileNameRequiredAsync(ByVal required As Boolean)
            Me.SetUniqueFileNameRequiredAsync(required, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetUniqueFileNameRequiredAsync(ByVal required As Boolean, ByVal userState As Object)
            If (Me.SetUniqueFileNameRequiredOperationCompleted Is Nothing) Then
                Me.SetUniqueFileNameRequiredOperationCompleted = AddressOf Me.OnSetUniqueFileNameRequiredOperationCompleted
            End If
            Me.InvokeAsync("SetUniqueFileNameRequired", New Object() {required}, Me.SetUniqueFileNameRequiredOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetUniqueFileNameRequiredOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetUniqueFileNameRequiredCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetUniqueFileNameRequiredCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetEnableDWFAttachment", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEnableDWFAttachment() As Boolean
            Dim results() As Object = Me.Invoke("GetEnableDWFAttachment", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEnableDWFAttachmentAsync()
            Me.GetEnableDWFAttachmentAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEnableDWFAttachmentAsync(ByVal userState As Object)
            If (Me.GetEnableDWFAttachmentOperationCompleted Is Nothing) Then
                Me.GetEnableDWFAttachmentOperationCompleted = AddressOf Me.OnGetEnableDWFAttachmentOperationCompleted
            End If
            Me.InvokeAsync("GetEnableDWFAttachment", New Object(-1) {}, Me.GetEnableDWFAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEnableDWFAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEnableDWFAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEnableDWFAttachmentCompleted(Me, New GetEnableDWFAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetEnableDWFAttachment", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetEnableDWFAttachment(ByVal enabled As Boolean)
            Me.Invoke("SetEnableDWFAttachment", New Object() {enabled})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetEnableDWFAttachmentAsync(ByVal enabled As Boolean)
            Me.SetEnableDWFAttachmentAsync(enabled, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetEnableDWFAttachmentAsync(ByVal enabled As Boolean, ByVal userState As Object)
            If (Me.SetEnableDWFAttachmentOperationCompleted Is Nothing) Then
                Me.SetEnableDWFAttachmentOperationCompleted = AddressOf Me.OnSetEnableDWFAttachmentOperationCompleted
            End If
            Me.InvokeAsync("SetEnableDWFAttachment", New Object() {enabled}, Me.SetEnableDWFAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetEnableDWFAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetEnableDWFAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetEnableDWFAttachmentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetDWFPublishFolderLocation", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDWFPublishFolderLocation() As String
            Dim results() As Object = Me.Invoke("GetDWFPublishFolderLocation", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDWFPublishFolderLocationAsync()
            Me.GetDWFPublishFolderLocationAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDWFPublishFolderLocationAsync(ByVal userState As Object)
            If (Me.GetDWFPublishFolderLocationOperationCompleted Is Nothing) Then
                Me.GetDWFPublishFolderLocationOperationCompleted = AddressOf Me.OnGetDWFPublishFolderLocationOperationCompleted
            End If
            Me.InvokeAsync("GetDWFPublishFolderLocation", New Object(-1) {}, Me.GetDWFPublishFolderLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDWFPublishFolderLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDWFPublishFolderLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDWFPublishFolderLocationCompleted(Me, New GetDWFPublishFolderLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetDWFPublishFolderLocation", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDWFPublishFolderLocation(ByVal location As String)
            Me.Invoke("SetDWFPublishFolderLocation", New Object() {location})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDWFPublishFolderLocationAsync(ByVal location As String)
            Me.SetDWFPublishFolderLocationAsync(location, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDWFPublishFolderLocationAsync(ByVal location As String, ByVal userState As Object)
            If (Me.SetDWFPublishFolderLocationOperationCompleted Is Nothing) Then
                Me.SetDWFPublishFolderLocationOperationCompleted = AddressOf Me.OnSetDWFPublishFolderLocationOperationCompleted
            End If
            Me.InvokeAsync("SetDWFPublishFolderLocation", New Object() {location}, Me.SetDWFPublishFolderLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDWFPublishFolderLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDWFPublishFolderLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDWFPublishFolderLocationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetDWFPublishPreserveFolderHierarch"& _ 
            "y", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDWFPublishPreserveFolderHierarchy() As Boolean
            Dim results() As Object = Me.Invoke("GetDWFPublishPreserveFolderHierarchy", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDWFPublishPreserveFolderHierarchyAsync()
            Me.GetDWFPublishPreserveFolderHierarchyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDWFPublishPreserveFolderHierarchyAsync(ByVal userState As Object)
            If (Me.GetDWFPublishPreserveFolderHierarchyOperationCompleted Is Nothing) Then
                Me.GetDWFPublishPreserveFolderHierarchyOperationCompleted = AddressOf Me.OnGetDWFPublishPreserveFolderHierarchyOperationCompleted
            End If
            Me.InvokeAsync("GetDWFPublishPreserveFolderHierarchy", New Object(-1) {}, Me.GetDWFPublishPreserveFolderHierarchyOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDWFPublishPreserveFolderHierarchyOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDWFPublishPreserveFolderHierarchyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDWFPublishPreserveFolderHierarchyCompleted(Me, New GetDWFPublishPreserveFolderHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetDWFPublishPreserveFolderHierarch"& _ 
            "y", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDWFPublishPreserveFolderHierarchy(ByVal [preserve] As Boolean)
            Me.Invoke("SetDWFPublishPreserveFolderHierarchy", New Object() {[preserve]})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDWFPublishPreserveFolderHierarchyAsync(ByVal [preserve] As Boolean)
            Me.SetDWFPublishPreserveFolderHierarchyAsync([preserve], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDWFPublishPreserveFolderHierarchyAsync(ByVal [preserve] As Boolean, ByVal userState As Object)
            If (Me.SetDWFPublishPreserveFolderHierarchyOperationCompleted Is Nothing) Then
                Me.SetDWFPublishPreserveFolderHierarchyOperationCompleted = AddressOf Me.OnSetDWFPublishPreserveFolderHierarchyOperationCompleted
            End If
            Me.InvokeAsync("SetDWFPublishPreserveFolderHierarchy", New Object() {[preserve]}, Me.SetDWFPublishPreserveFolderHierarchyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDWFPublishPreserveFolderHierarchyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDWFPublishPreserveFolderHierarchyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDWFPublishPreserveFolderHierarchyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetEnforceWorkingFolder", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEnforceWorkingFolder() As Boolean
            Dim results() As Object = Me.Invoke("GetEnforceWorkingFolder", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEnforceWorkingFolderAsync()
            Me.GetEnforceWorkingFolderAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEnforceWorkingFolderAsync(ByVal userState As Object)
            If (Me.GetEnforceWorkingFolderOperationCompleted Is Nothing) Then
                Me.GetEnforceWorkingFolderOperationCompleted = AddressOf Me.OnGetEnforceWorkingFolderOperationCompleted
            End If
            Me.InvokeAsync("GetEnforceWorkingFolder", New Object(-1) {}, Me.GetEnforceWorkingFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEnforceWorkingFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEnforceWorkingFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEnforceWorkingFolderCompleted(Me, New GetEnforceWorkingFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetEnforceWorkingFolder", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetEnforceWorkingFolder(ByVal enforce As Boolean)
            Me.Invoke("SetEnforceWorkingFolder", New Object() {enforce})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetEnforceWorkingFolderAsync(ByVal enforce As Boolean)
            Me.SetEnforceWorkingFolderAsync(enforce, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetEnforceWorkingFolderAsync(ByVal enforce As Boolean, ByVal userState As Object)
            If (Me.SetEnforceWorkingFolderOperationCompleted Is Nothing) Then
                Me.SetEnforceWorkingFolderOperationCompleted = AddressOf Me.OnSetEnforceWorkingFolderOperationCompleted
            End If
            Me.InvokeAsync("SetEnforceWorkingFolder", New Object() {enforce}, Me.SetEnforceWorkingFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetEnforceWorkingFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetEnforceWorkingFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetEnforceWorkingFolderCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetRequiredWorkingFolderLocation", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRequiredWorkingFolderLocation() As String
            Dim results() As Object = Me.Invoke("GetRequiredWorkingFolderLocation", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRequiredWorkingFolderLocationAsync()
            Me.GetRequiredWorkingFolderLocationAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRequiredWorkingFolderLocationAsync(ByVal userState As Object)
            If (Me.GetRequiredWorkingFolderLocationOperationCompleted Is Nothing) Then
                Me.GetRequiredWorkingFolderLocationOperationCompleted = AddressOf Me.OnGetRequiredWorkingFolderLocationOperationCompleted
            End If
            Me.InvokeAsync("GetRequiredWorkingFolderLocation", New Object(-1) {}, Me.GetRequiredWorkingFolderLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRequiredWorkingFolderLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRequiredWorkingFolderLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRequiredWorkingFolderLocationCompleted(Me, New GetRequiredWorkingFolderLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetRequiredWorkingFolderLocation", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetRequiredWorkingFolderLocation(ByVal location As String)
            Me.Invoke("SetRequiredWorkingFolderLocation", New Object() {location})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRequiredWorkingFolderLocationAsync(ByVal location As String)
            Me.SetRequiredWorkingFolderLocationAsync(location, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRequiredWorkingFolderLocationAsync(ByVal location As String, ByVal userState As Object)
            If (Me.SetRequiredWorkingFolderLocationOperationCompleted Is Nothing) Then
                Me.SetRequiredWorkingFolderLocationOperationCompleted = AddressOf Me.OnSetRequiredWorkingFolderLocationOperationCompleted
            End If
            Me.InvokeAsync("SetRequiredWorkingFolderLocation", New Object() {location}, Me.SetRequiredWorkingFolderLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRequiredWorkingFolderLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRequiredWorkingFolderLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRequiredWorkingFolderLocationCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetWorkspaceSyncFileLimit", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWorkspaceSyncFileLimit() As UInteger
            Dim results() As Object = Me.Invoke("GetWorkspaceSyncFileLimit", New Object(-1) {})
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWorkspaceSyncFileLimitAsync()
            Me.GetWorkspaceSyncFileLimitAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWorkspaceSyncFileLimitAsync(ByVal userState As Object)
            If (Me.GetWorkspaceSyncFileLimitOperationCompleted Is Nothing) Then
                Me.GetWorkspaceSyncFileLimitOperationCompleted = AddressOf Me.OnGetWorkspaceSyncFileLimitOperationCompleted
            End If
            Me.InvokeAsync("GetWorkspaceSyncFileLimit", New Object(-1) {}, Me.GetWorkspaceSyncFileLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWorkspaceSyncFileLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWorkspaceSyncFileLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWorkspaceSyncFileLimitCompleted(Me, New GetWorkspaceSyncFileLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetWorkspaceSyncFileLimit", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetWorkspaceSyncFileLimit(ByVal limit As UInteger)
            Me.Invoke("SetWorkspaceSyncFileLimit", New Object() {limit})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetWorkspaceSyncFileLimitAsync(ByVal limit As UInteger)
            Me.SetWorkspaceSyncFileLimitAsync(limit, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetWorkspaceSyncFileLimitAsync(ByVal limit As UInteger, ByVal userState As Object)
            If (Me.SetWorkspaceSyncFileLimitOperationCompleted Is Nothing) Then
                Me.SetWorkspaceSyncFileLimitOperationCompleted = AddressOf Me.OnSetWorkspaceSyncFileLimitOperationCompleted
            End If
            Me.InvokeAsync("SetWorkspaceSyncFileLimit", New Object() {limit}, Me.SetWorkspaceSyncFileLimitOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetWorkspaceSyncFileLimitOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetWorkspaceSyncFileLimitCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetWorkspaceSyncFileLimitCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetBulkFileThreshold", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBulkFileThreshold() As BlkThres
            Dim results() As Object = Me.Invoke("GetBulkFileThreshold", New Object(-1) {})
            Return CType(results(0),BlkThres)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBulkFileThresholdAsync()
            Me.GetBulkFileThresholdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBulkFileThresholdAsync(ByVal userState As Object)
            If (Me.GetBulkFileThresholdOperationCompleted Is Nothing) Then
                Me.GetBulkFileThresholdOperationCompleted = AddressOf Me.OnGetBulkFileThresholdOperationCompleted
            End If
            Me.InvokeAsync("GetBulkFileThreshold", New Object(-1) {}, Me.GetBulkFileThresholdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBulkFileThresholdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBulkFileThresholdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBulkFileThresholdCompleted(Me, New GetBulkFileThresholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetBulkFileThreshold", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetBulkFileThreshold(ByVal warningThreshold As UInteger, ByVal maximumThreshold As UInteger)
            Me.Invoke("SetBulkFileThreshold", New Object() {warningThreshold, maximumThreshold})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBulkFileThresholdAsync(ByVal warningThreshold As UInteger, ByVal maximumThreshold As UInteger)
            Me.SetBulkFileThresholdAsync(warningThreshold, maximumThreshold, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBulkFileThresholdAsync(ByVal warningThreshold As UInteger, ByVal maximumThreshold As UInteger, ByVal userState As Object)
            If (Me.SetBulkFileThresholdOperationCompleted Is Nothing) Then
                Me.SetBulkFileThresholdOperationCompleted = AddressOf Me.OnSetBulkFileThresholdOperationCompleted
            End If
            Me.InvokeAsync("SetBulkFileThreshold", New Object() {warningThreshold, maximumThreshold}, Me.SetBulkFileThresholdOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetBulkFileThresholdOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetBulkFileThresholdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetBulkFileThresholdCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetBreakDesignVisualizationLinkComm"& _ 
            "andList", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBreakDesignVisualizationLinkCommandList() As BreakDesignVisualizationLinkCommandList
            Dim results() As Object = Me.Invoke("GetBreakDesignVisualizationLinkCommandList", New Object(-1) {})
            Return CType(results(0),BreakDesignVisualizationLinkCommandList)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBreakDesignVisualizationLinkCommandListAsync()
            Me.GetBreakDesignVisualizationLinkCommandListAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBreakDesignVisualizationLinkCommandListAsync(ByVal userState As Object)
            If (Me.GetBreakDesignVisualizationLinkCommandListOperationCompleted Is Nothing) Then
                Me.GetBreakDesignVisualizationLinkCommandListOperationCompleted = AddressOf Me.OnGetBreakDesignVisualizationLinkCommandListOperationCompleted
            End If
            Me.InvokeAsync("GetBreakDesignVisualizationLinkCommandList", New Object(-1) {}, Me.GetBreakDesignVisualizationLinkCommandListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBreakDesignVisualizationLinkCommandListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBreakDesignVisualizationLinkCommandListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBreakDesignVisualizationLinkCommandListCompleted(Me, New GetBreakDesignVisualizationLinkCommandListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetBreakDesignVisualizationLinkComm"& _ 
            "andList", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetBreakDesignVisualizationLinkCommandList(ByVal commandList As BreakDesignVisualizationLinkCommandList)
            Me.Invoke("SetBreakDesignVisualizationLinkCommandList", New Object() {commandList})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBreakDesignVisualizationLinkCommandListAsync(ByVal commandList As BreakDesignVisualizationLinkCommandList)
            Me.SetBreakDesignVisualizationLinkCommandListAsync(commandList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBreakDesignVisualizationLinkCommandListAsync(ByVal commandList As BreakDesignVisualizationLinkCommandList, ByVal userState As Object)
            If (Me.SetBreakDesignVisualizationLinkCommandListOperationCompleted Is Nothing) Then
                Me.SetBreakDesignVisualizationLinkCommandListOperationCompleted = AddressOf Me.OnSetBreakDesignVisualizationLinkCommandListOperationCompleted
            End If
            Me.InvokeAsync("SetBreakDesignVisualizationLinkCommandList", New Object() {commandList}, Me.SetBreakDesignVisualizationLinkCommandListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetBreakDesignVisualizationLinkCommandListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetBreakDesignVisualizationLinkCommandListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetBreakDesignVisualizationLinkCommandListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetBlockExplorerDesignFileCheckin", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBlockExplorerDesignFileCheckin() As Boolean
            Dim results() As Object = Me.Invoke("GetBlockExplorerDesignFileCheckin", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBlockExplorerDesignFileCheckinAsync()
            Me.GetBlockExplorerDesignFileCheckinAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBlockExplorerDesignFileCheckinAsync(ByVal userState As Object)
            If (Me.GetBlockExplorerDesignFileCheckinOperationCompleted Is Nothing) Then
                Me.GetBlockExplorerDesignFileCheckinOperationCompleted = AddressOf Me.OnGetBlockExplorerDesignFileCheckinOperationCompleted
            End If
            Me.InvokeAsync("GetBlockExplorerDesignFileCheckin", New Object(-1) {}, Me.GetBlockExplorerDesignFileCheckinOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBlockExplorerDesignFileCheckinOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBlockExplorerDesignFileCheckinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBlockExplorerDesignFileCheckinCompleted(Me, New GetBlockExplorerDesignFileCheckinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetBlockExplorerDesignFileCheckin", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetBlockExplorerDesignFileCheckin(ByVal blockCheckin As Boolean)
            Me.Invoke("SetBlockExplorerDesignFileCheckin", New Object() {blockCheckin})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBlockExplorerDesignFileCheckinAsync(ByVal blockCheckin As Boolean)
            Me.SetBlockExplorerDesignFileCheckinAsync(blockCheckin, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetBlockExplorerDesignFileCheckinAsync(ByVal blockCheckin As Boolean, ByVal userState As Object)
            If (Me.SetBlockExplorerDesignFileCheckinOperationCompleted Is Nothing) Then
                Me.SetBlockExplorerDesignFileCheckinOperationCompleted = AddressOf Me.OnSetBlockExplorerDesignFileCheckinOperationCompleted
            End If
            Me.InvokeAsync("SetBlockExplorerDesignFileCheckin", New Object() {blockCheckin}, Me.SetBlockExplorerDesignFileCheckinOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetBlockExplorerDesignFileCheckinOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetBlockExplorerDesignFileCheckinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetBlockExplorerDesignFileCheckinCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetRestrictMoveOnRevision", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRestrictMoveOnRevision() As Boolean
            Dim results() As Object = Me.Invoke("GetRestrictMoveOnRevision", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRestrictMoveOnRevisionAsync()
            Me.GetRestrictMoveOnRevisionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRestrictMoveOnRevisionAsync(ByVal userState As Object)
            If (Me.GetRestrictMoveOnRevisionOperationCompleted Is Nothing) Then
                Me.GetRestrictMoveOnRevisionOperationCompleted = AddressOf Me.OnGetRestrictMoveOnRevisionOperationCompleted
            End If
            Me.InvokeAsync("GetRestrictMoveOnRevision", New Object(-1) {}, Me.GetRestrictMoveOnRevisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRestrictMoveOnRevisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRestrictMoveOnRevisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRestrictMoveOnRevisionCompleted(Me, New GetRestrictMoveOnRevisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetRestrictMoveOnRevision", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetRestrictMoveOnRevision(ByVal restrictMove As Boolean)
            Me.Invoke("SetRestrictMoveOnRevision", New Object() {restrictMove})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRestrictMoveOnRevisionAsync(ByVal restrictMove As Boolean)
            Me.SetRestrictMoveOnRevisionAsync(restrictMove, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRestrictMoveOnRevisionAsync(ByVal restrictMove As Boolean, ByVal userState As Object)
            If (Me.SetRestrictMoveOnRevisionOperationCompleted Is Nothing) Then
                Me.SetRestrictMoveOnRevisionOperationCompleted = AddressOf Me.OnSetRestrictMoveOnRevisionOperationCompleted
            End If
            Me.InvokeAsync("SetRestrictMoveOnRevision", New Object() {restrictMove}, Me.SetRestrictMoveOnRevisionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRestrictMoveOnRevisionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRestrictMoveOnRevisionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRestrictMoveOnRevisionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileAssociationsByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileAssociationsByIds(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean) As FileAssocArray()
            Dim results() As Object = Me.Invoke("GetFileAssociationsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden})
            Return CType(results(0),FileAssocArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileAssociationsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean)
            Me.GetFileAssociationsByIdsAsync(fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileAssociationsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal userState As Object)
            If (Me.GetFileAssociationsByIdsOperationCompleted Is Nothing) Then
                Me.GetFileAssociationsByIdsOperationCompleted = AddressOf Me.OnGetFileAssociationsByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFileAssociationsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden}, Me.GetFileAssociationsByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileAssociationsByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileAssociationsByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileAssociationsByIdsCompleted(Me, New GetFileAssociationsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestFileAssociationsByMasterId"& _ 
            "s", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestFileAssociationsByMasterIds(ByVal fileMasterIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean) As FileAssocArray()
            Dim results() As Object = Me.Invoke("GetLatestFileAssociationsByMasterIds", New Object() {fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased})
            Return CType(results(0),FileAssocArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestFileAssociationsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean)
            Me.GetLatestFileAssociationsByMasterIdsAsync(fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestFileAssociationsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean, ByVal userState As Object)
            If (Me.GetLatestFileAssociationsByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetLatestFileAssociationsByMasterIdsOperationCompleted = AddressOf Me.OnGetLatestFileAssociationsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetLatestFileAssociationsByMasterIds", New Object() {fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased}, Me.GetLatestFileAssociationsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestFileAssociationsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestFileAssociationsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestFileAssociationsByMasterIdsCompleted(Me, New GetLatestFileAssociationsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetRevisionFileAssociationsByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRevisionFileAssociationsByIds(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean) As FileAssocArray()
            Dim results() As Object = Me.Invoke("GetRevisionFileAssociationsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased})
            Return CType(results(0),FileAssocArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRevisionFileAssociationsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean)
            Me.GetRevisionFileAssociationsByIdsAsync(fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRevisionFileAssociationsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean, ByVal userState As Object)
            If (Me.GetRevisionFileAssociationsByIdsOperationCompleted Is Nothing) Then
                Me.GetRevisionFileAssociationsByIdsOperationCompleted = AddressOf Me.OnGetRevisionFileAssociationsByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetRevisionFileAssociationsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased}, Me.GetRevisionFileAssociationsByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRevisionFileAssociationsByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRevisionFileAssociationsByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRevisionFileAssociationsByIdsCompleted(Me, New GetRevisionFileAssociationsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetAssociatedFilePathsByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAssociatedFilePathsByIds(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean) As FilePathArray()
            Dim results() As Object = Me.Invoke("GetAssociatedFilePathsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden})
            Return CType(results(0),FilePathArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAssociatedFilePathsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean)
            Me.GetAssociatedFilePathsByIdsAsync(fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAssociatedFilePathsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal userState As Object)
            If (Me.GetAssociatedFilePathsByIdsOperationCompleted Is Nothing) Then
                Me.GetAssociatedFilePathsByIdsOperationCompleted = AddressOf Me.OnGetAssociatedFilePathsByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetAssociatedFilePathsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden}, Me.GetAssociatedFilePathsByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAssociatedFilePathsByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAssociatedFilePathsByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAssociatedFilePathsByIdsCompleted(Me, New GetAssociatedFilePathsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetRevisionAssociatedFilePathsByIds"& _ 
            "", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRevisionAssociatedFilePathsByIds(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean) As FilePathArray()
            Dim results() As Object = Me.Invoke("GetRevisionAssociatedFilePathsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased})
            Return CType(results(0),FilePathArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRevisionAssociatedFilePathsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean)
            Me.GetRevisionAssociatedFilePathsByIdsAsync(fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRevisionAssociatedFilePathsByIdsAsync(ByVal fileIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean, ByVal userState As Object)
            If (Me.GetRevisionAssociatedFilePathsByIdsOperationCompleted Is Nothing) Then
                Me.GetRevisionAssociatedFilePathsByIdsOperationCompleted = AddressOf Me.OnGetRevisionAssociatedFilePathsByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetRevisionAssociatedFilePathsByIds", New Object() {fileIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased}, Me.GetRevisionAssociatedFilePathsByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRevisionAssociatedFilePathsByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRevisionAssociatedFilePathsByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRevisionAssociatedFilePathsByIdsCompleted(Me, New GetRevisionAssociatedFilePathsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestAssociatedFilePathsByMaste"& _ 
            "rIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestAssociatedFilePathsByMasterIds(ByVal fileMasterIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean) As FilePathArray()
            Dim results() As Object = Me.Invoke("GetLatestAssociatedFilePathsByMasterIds", New Object() {fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased})
            Return CType(results(0),FilePathArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestAssociatedFilePathsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean)
            Me.GetLatestAssociatedFilePathsByMasterIdsAsync(fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestAssociatedFilePathsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal parentAssociationType As FileAssociationTypeEnum, ByVal parentRecurse As Boolean, ByVal childAssociationType As FileAssociationTypeEnum, ByVal childRecurse As Boolean, ByVal includeRelatedDocuments As Boolean, ByVal includeHidden As Boolean, ByVal releasedBiased As Boolean, ByVal userState As Object)
            If (Me.GetLatestAssociatedFilePathsByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetLatestAssociatedFilePathsByMasterIdsOperationCompleted = AddressOf Me.OnGetLatestAssociatedFilePathsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetLatestAssociatedFilePathsByMasterIds", New Object() {fileMasterIds, parentAssociationType, parentRecurse, childAssociationType, childRecurse, includeRelatedDocuments, includeHidden, releasedBiased}, Me.GetLatestAssociatedFilePathsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestAssociatedFilePathsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestAssociatedFilePathsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestAssociatedFilePathsByMasterIdsCompleted(Me, New GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/ValidateBOMByFileId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateBOMByFileId(ByVal fileId As Long) As Boolean
            Dim results() As Object = Me.Invoke("ValidateBOMByFileId", New Object() {fileId})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateBOMByFileIdAsync(ByVal fileId As Long)
            Me.ValidateBOMByFileIdAsync(fileId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateBOMByFileIdAsync(ByVal fileId As Long, ByVal userState As Object)
            If (Me.ValidateBOMByFileIdOperationCompleted Is Nothing) Then
                Me.ValidateBOMByFileIdOperationCompleted = AddressOf Me.OnValidateBOMByFileIdOperationCompleted
            End If
            Me.InvokeAsync("ValidateBOMByFileId", New Object() {fileId}, Me.ValidateBOMByFileIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateBOMByFileIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateBOMByFileIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateBOMByFileIdCompleted(Me, New ValidateBOMByFileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetComponentProperties", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComponentProperties(ByVal fileId As Long, ByVal uniqueId As String) As CompPropInfo
            Dim results() As Object = Me.Invoke("GetComponentProperties", New Object() {fileId, uniqueId})
            Return CType(results(0),CompPropInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComponentPropertiesAsync(ByVal fileId As Long, ByVal uniqueId As String)
            Me.GetComponentPropertiesAsync(fileId, uniqueId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComponentPropertiesAsync(ByVal fileId As Long, ByVal uniqueId As String, ByVal userState As Object)
            If (Me.GetComponentPropertiesOperationCompleted Is Nothing) Then
                Me.GetComponentPropertiesOperationCompleted = AddressOf Me.OnGetComponentPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetComponentProperties", New Object() {fileId, uniqueId}, Me.GetComponentPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComponentPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComponentPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComponentPropertiesCompleted(Me, New GetComponentPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddComponentCustomPropertyDefinitio"& _ 
            "n", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddComponentCustomPropertyDefinition(ByVal name As String, ByVal dataType As String) As PropDef
            Dim results() As Object = Me.Invoke("AddComponentCustomPropertyDefinition", New Object() {name, dataType})
            Return CType(results(0),PropDef)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddComponentCustomPropertyDefinitionAsync(ByVal name As String, ByVal dataType As String)
            Me.AddComponentCustomPropertyDefinitionAsync(name, dataType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddComponentCustomPropertyDefinitionAsync(ByVal name As String, ByVal dataType As String, ByVal userState As Object)
            If (Me.AddComponentCustomPropertyDefinitionOperationCompleted Is Nothing) Then
                Me.AddComponentCustomPropertyDefinitionOperationCompleted = AddressOf Me.OnAddComponentCustomPropertyDefinitionOperationCompleted
            End If
            Me.InvokeAsync("AddComponentCustomPropertyDefinition", New Object() {name, dataType}, Me.AddComponentCustomPropertyDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddComponentCustomPropertyDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddComponentCustomPropertyDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddComponentCustomPropertyDefinitionCompleted(Me, New AddComponentCustomPropertyDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteComponentCustomPropertyDefini"& _ 
            "tion", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteComponentCustomPropertyDefinition(ByVal propertyDefId As Long)
            Me.Invoke("DeleteComponentCustomPropertyDefinition", New Object() {propertyDefId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteComponentCustomPropertyDefinitionAsync(ByVal propertyDefId As Long)
            Me.DeleteComponentCustomPropertyDefinitionAsync(propertyDefId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteComponentCustomPropertyDefinitionAsync(ByVal propertyDefId As Long, ByVal userState As Object)
            If (Me.DeleteComponentCustomPropertyDefinitionOperationCompleted Is Nothing) Then
                Me.DeleteComponentCustomPropertyDefinitionOperationCompleted = AddressOf Me.OnDeleteComponentCustomPropertyDefinitionOperationCompleted
            End If
            Me.InvokeAsync("DeleteComponentCustomPropertyDefinition", New Object() {propertyDefId}, Me.DeleteComponentCustomPropertyDefinitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteComponentCustomPropertyDefinitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteComponentCustomPropertyDefinitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteComponentCustomPropertyDefinitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileVersionDeleteRestrictionsByM"& _ 
            "asterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileVersionDeleteRestrictionsByMasterIds(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String) As FileDelRestricEx()
            Dim results() As Object = Me.Invoke("GetFileVersionDeleteRestrictionsByMasterIds", New Object() {fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment})
            Return CType(results(0),FileDelRestricEx())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileVersionDeleteRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String)
            Me.GetFileVersionDeleteRestrictionsByMasterIdsAsync(fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileVersionDeleteRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String, ByVal userState As Object)
            If (Me.GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted = AddressOf Me.OnGetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFileVersionDeleteRestrictionsByMasterIds", New Object() {fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment}, Me.GetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileVersionDeleteRestrictionsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileVersionDeleteRestrictionsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileVersionDeleteRestrictionsByMasterIdsCompleted(Me, New GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileVersionsByMasterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFileVersionsByMasterIds(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String) As FileDelStatus()
            Dim results() As Object = Me.Invoke("DeleteFileVersionsByMasterIds", New Object() {fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment})
            Return CType(results(0),FileDelStatus())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String)
            Me.DeleteFileVersionsByMasterIdsAsync(fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String, ByVal userState As Object)
            If (Me.DeleteFileVersionsByMasterIdsOperationCompleted Is Nothing) Then
                Me.DeleteFileVersionsByMasterIdsOperationCompleted = AddressOf Me.OnDeleteFileVersionsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileVersionsByMasterIds", New Object() {fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment}, Me.DeleteFileVersionsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileVersionsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileVersionsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileVersionsByMasterIdsCompleted(Me, New DeleteFileVersionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileVersionsByMasterIdsUncond"& _ 
            "itional", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFileVersionsByMasterIdsUnconditional(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String) As FileDelStatus()
            Dim results() As Object = Me.Invoke("DeleteFileVersionsByMasterIdsUnconditional", New Object() {fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment})
            Return CType(results(0),FileDelStatus())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsByMasterIdsUnconditionalAsync(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String)
            Me.DeleteFileVersionsByMasterIdsUnconditionalAsync(fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsByMasterIdsUnconditionalAsync(ByVal fileMasterIds() As Long, ByVal deleteUncontrolledVersions As Boolean, ByVal keepCount As Integer, ByVal minAge As Integer, ByVal comment As String, ByVal userState As Object)
            If (Me.DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted Is Nothing) Then
                Me.DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted = AddressOf Me.OnDeleteFileVersionsByMasterIdsUnconditionalOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileVersionsByMasterIdsUnconditional", New Object() {fileMasterIds, deleteUncontrolledVersions, keepCount, minAge, comment}, Me.DeleteFileVersionsByMasterIdsUnconditionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileVersionsByMasterIdsUnconditionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileVersionsByMasterIdsUnconditionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileVersionsByMasterIdsUnconditionalCompleted(Me, New DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetTrackFileStatus", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackFileStatus() As Boolean
            Dim results() As Object = Me.Invoke("GetTrackFileStatus", New Object(-1) {})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackFileStatusAsync()
            Me.GetTrackFileStatusAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackFileStatusAsync(ByVal userState As Object)
            If (Me.GetTrackFileStatusOperationCompleted Is Nothing) Then
                Me.GetTrackFileStatusOperationCompleted = AddressOf Me.OnGetTrackFileStatusOperationCompleted
            End If
            Me.InvokeAsync("GetTrackFileStatus", New Object(-1) {}, Me.GetTrackFileStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackFileStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackFileStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackFileStatusCompleted(Me, New GetTrackFileStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetTrackFileStatus", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetTrackFileStatus(ByVal trackStatus As Boolean)
            Me.Invoke("SetTrackFileStatus", New Object() {trackStatus})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTrackFileStatusAsync(ByVal trackStatus As Boolean)
            Me.SetTrackFileStatusAsync(trackStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetTrackFileStatusAsync(ByVal trackStatus As Boolean, ByVal userState As Object)
            If (Me.SetTrackFileStatusOperationCompleted Is Nothing) Then
                Me.SetTrackFileStatusOperationCompleted = AddressOf Me.OnSetTrackFileStatusOperationCompleted
            End If
            Me.InvokeAsync("SetTrackFileStatus", New Object() {trackStatus}, Me.SetTrackFileStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetTrackFileStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetTrackFileStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetTrackFileStatusCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFilterConfigXml", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilterConfigXml() As String
            Dim results() As Object = Me.Invoke("GetFilterConfigXml", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilterConfigXmlAsync()
            Me.GetFilterConfigXmlAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilterConfigXmlAsync(ByVal userState As Object)
            If (Me.GetFilterConfigXmlOperationCompleted Is Nothing) Then
                Me.GetFilterConfigXmlOperationCompleted = AddressOf Me.OnGetFilterConfigXmlOperationCompleted
            End If
            Me.InvokeAsync("GetFilterConfigXml", New Object(-1) {}, Me.GetFilterConfigXmlOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilterConfigXmlOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilterConfigXmlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilterConfigXmlCompleted(Me, New GetFilterConfigXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileVersions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFileVersions(ByVal fileIds() As Long) As FileDelStatus()
            Dim results() As Object = Me.Invoke("DeleteFileVersions", New Object() {fileIds})
            Return CType(results(0),FileDelStatus())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsAsync(ByVal fileIds() As Long)
            Me.DeleteFileVersionsAsync(fileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsAsync(ByVal fileIds() As Long, ByVal userState As Object)
            If (Me.DeleteFileVersionsOperationCompleted Is Nothing) Then
                Me.DeleteFileVersionsOperationCompleted = AddressOf Me.OnDeleteFileVersionsOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileVersions", New Object() {fileIds}, Me.DeleteFileVersionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileVersionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileVersionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileVersionsCompleted(Me, New DeleteFileVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileVersionsUnconditional", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFileVersionsUnconditional(ByVal fileIds() As Long) As FileDelStatus()
            Dim results() As Object = Me.Invoke("DeleteFileVersionsUnconditional", New Object() {fileIds})
            Return CType(results(0),FileDelStatus())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsUnconditionalAsync(ByVal fileIds() As Long)
            Me.DeleteFileVersionsUnconditionalAsync(fileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileVersionsUnconditionalAsync(ByVal fileIds() As Long, ByVal userState As Object)
            If (Me.DeleteFileVersionsUnconditionalOperationCompleted Is Nothing) Then
                Me.DeleteFileVersionsUnconditionalOperationCompleted = AddressOf Me.OnDeleteFileVersionsUnconditionalOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileVersionsUnconditional", New Object() {fileIds}, Me.DeleteFileVersionsUnconditionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileVersionsUnconditionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileVersionsUnconditionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileVersionsUnconditionalCompleted(Me, New DeleteFileVersionsUnconditionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetFileStatusByMasterId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetFileStatusByMasterId(ByVal fileMasterId As Long, ByVal fileStatus As FileStatus) As File
            Dim results() As Object = Me.Invoke("SetFileStatusByMasterId", New Object() {fileMasterId, fileStatus})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetFileStatusByMasterIdAsync(ByVal fileMasterId As Long, ByVal fileStatus As FileStatus)
            Me.SetFileStatusByMasterIdAsync(fileMasterId, fileStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetFileStatusByMasterIdAsync(ByVal fileMasterId As Long, ByVal fileStatus As FileStatus, ByVal userState As Object)
            If (Me.SetFileStatusByMasterIdOperationCompleted Is Nothing) Then
                Me.SetFileStatusByMasterIdOperationCompleted = AddressOf Me.OnSetFileStatusByMasterIdOperationCompleted
            End If
            Me.InvokeAsync("SetFileStatusByMasterId", New Object() {fileMasterId, fileStatus}, Me.SetFileStatusByMasterIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetFileStatusByMasterIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetFileStatusByMasterIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetFileStatusByMasterIdCompleted(Me, New SetFileStatusByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetFileStatusByMasterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetFileStatusByMasterIds(ByVal fileMasterIds() As Long, ByVal fileStatus As FileStatus) As File()
            Dim results() As Object = Me.Invoke("SetFileStatusByMasterIds", New Object() {fileMasterIds, fileStatus})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetFileStatusByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal fileStatus As FileStatus)
            Me.SetFileStatusByMasterIdsAsync(fileMasterIds, fileStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetFileStatusByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal fileStatus As FileStatus, ByVal userState As Object)
            If (Me.SetFileStatusByMasterIdsOperationCompleted Is Nothing) Then
                Me.SetFileStatusByMasterIdsOperationCompleted = AddressOf Me.OnSetFileStatusByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("SetFileStatusByMasterIds", New Object() {fileMasterIds, fileStatus}, Me.SetFileStatusByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetFileStatusByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetFileStatusByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetFileStatusByMasterIdsCompleted(Me, New SetFileStatusByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileStatusSetRestrictionsByMaste"& _ 
            "rIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileStatusSetRestrictionsByMasterIds(ByVal fileMasterIds() As Long, ByVal fileStatus As FileStatus) As DocRestricArray()
            Dim results() As Object = Me.Invoke("GetFileStatusSetRestrictionsByMasterIds", New Object() {fileMasterIds, fileStatus})
            Return CType(results(0),DocRestricArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileStatusSetRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal fileStatus As FileStatus)
            Me.GetFileStatusSetRestrictionsByMasterIdsAsync(fileMasterIds, fileStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileStatusSetRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal fileStatus As FileStatus, ByVal userState As Object)
            If (Me.GetFileStatusSetRestrictionsByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetFileStatusSetRestrictionsByMasterIdsOperationCompleted = AddressOf Me.OnGetFileStatusSetRestrictionsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFileStatusSetRestrictionsByMasterIds", New Object() {fileMasterIds, fileStatus}, Me.GetFileStatusSetRestrictionsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileStatusSetRestrictionsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileStatusSetRestrictionsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileStatusSetRestrictionsByMasterIdsCompleted(Me, New GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileVersionDeleteRestrictionsByF"& _ 
            "ileIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileVersionDeleteRestrictionsByFileIds(ByVal fileIds() As Long) As FileDelRestricEx()
            Dim results() As Object = Me.Invoke("GetFileVersionDeleteRestrictionsByFileIds", New Object() {fileIds})
            Return CType(results(0),FileDelRestricEx())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileVersionDeleteRestrictionsByFileIdsAsync(ByVal fileIds() As Long)
            Me.GetFileVersionDeleteRestrictionsByFileIdsAsync(fileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileVersionDeleteRestrictionsByFileIdsAsync(ByVal fileIds() As Long, ByVal userState As Object)
            If (Me.GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted Is Nothing) Then
                Me.GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted = AddressOf Me.OnGetFileVersionDeleteRestrictionsByFileIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFileVersionDeleteRestrictionsByFileIds", New Object() {fileIds}, Me.GetFileVersionDeleteRestrictionsByFileIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileVersionDeleteRestrictionsByFileIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileVersionDeleteRestrictionsByFileIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileVersionDeleteRestrictionsByFileIdsCompleted(Me, New GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddFileNamingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFileNamingScheme(ByVal scheme As FileNmngSchm) As FileNmngSchm
            Dim results() As Object = Me.Invoke("AddFileNamingScheme", New Object() {scheme})
            Return CType(results(0),FileNmngSchm)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFileNamingSchemeAsync(ByVal scheme As FileNmngSchm)
            Me.AddFileNamingSchemeAsync(scheme, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFileNamingSchemeAsync(ByVal scheme As FileNmngSchm, ByVal userState As Object)
            If (Me.AddFileNamingSchemeOperationCompleted Is Nothing) Then
                Me.AddFileNamingSchemeOperationCompleted = AddressOf Me.OnAddFileNamingSchemeOperationCompleted
            End If
            Me.InvokeAsync("AddFileNamingScheme", New Object() {scheme}, Me.AddFileNamingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFileNamingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFileNamingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFileNamingSchemeCompleted(Me, New AddFileNamingSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdateFileNamingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateFileNamingScheme(ByVal scheme As FileNmngSchm)
            Me.Invoke("UpdateFileNamingScheme", New Object() {scheme})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFileNamingSchemeAsync(ByVal scheme As FileNmngSchm)
            Me.UpdateFileNamingSchemeAsync(scheme, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFileNamingSchemeAsync(ByVal scheme As FileNmngSchm, ByVal userState As Object)
            If (Me.UpdateFileNamingSchemeOperationCompleted Is Nothing) Then
                Me.UpdateFileNamingSchemeOperationCompleted = AddressOf Me.OnUpdateFileNamingSchemeOperationCompleted
            End If
            Me.InvokeAsync("UpdateFileNamingScheme", New Object() {scheme}, Me.UpdateFileNamingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFileNamingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFileNamingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFileNamingSchemeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileNamingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFileNamingScheme(ByVal schemeId As Long)
            Me.Invoke("DeleteFileNamingScheme", New Object() {schemeId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileNamingSchemeAsync(ByVal schemeId As Long)
            Me.DeleteFileNamingSchemeAsync(schemeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileNamingSchemeAsync(ByVal schemeId As Long, ByVal userState As Object)
            If (Me.DeleteFileNamingSchemeOperationCompleted Is Nothing) Then
                Me.DeleteFileNamingSchemeOperationCompleted = AddressOf Me.OnDeleteFileNamingSchemeOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileNamingScheme", New Object() {schemeId}, Me.DeleteFileNamingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileNamingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileNamingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileNamingSchemeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetDefaultFileNamingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDefaultFileNamingScheme(ByVal schemeId As Long)
            Me.Invoke("SetDefaultFileNamingScheme", New Object() {schemeId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDefaultFileNamingSchemeAsync(ByVal schemeId As Long)
            Me.SetDefaultFileNamingSchemeAsync(schemeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDefaultFileNamingSchemeAsync(ByVal schemeId As Long, ByVal userState As Object)
            If (Me.SetDefaultFileNamingSchemeOperationCompleted Is Nothing) Then
                Me.SetDefaultFileNamingSchemeOperationCompleted = AddressOf Me.OnSetDefaultFileNamingSchemeOperationCompleted
            End If
            Me.InvokeAsync("SetDefaultFileNamingScheme", New Object() {schemeId}, Me.SetDefaultFileNamingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDefaultFileNamingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDefaultFileNamingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDefaultFileNamingSchemeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetAllFileNamingSchemes", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllFileNamingSchemes() As FileNmngSchm()
            Dim results() As Object = Me.Invoke("GetAllFileNamingSchemes", New Object(-1) {})
            Return CType(results(0),FileNmngSchm())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllFileNamingSchemesAsync()
            Me.GetAllFileNamingSchemesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllFileNamingSchemesAsync(ByVal userState As Object)
            If (Me.GetAllFileNamingSchemesOperationCompleted Is Nothing) Then
                Me.GetAllFileNamingSchemesOperationCompleted = AddressOf Me.OnGetAllFileNamingSchemesOperationCompleted
            End If
            Me.InvokeAsync("GetAllFileNamingSchemes", New Object(-1) {}, Me.GetAllFileNamingSchemesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllFileNamingSchemesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllFileNamingSchemesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllFileNamingSchemesCompleted(Me, New GetAllFileNamingSchemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/ReserveFileNamingDescriptions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReserveFileNamingDescriptions(ByVal fileNamingSchemeId As Long, ByVal size As Integer) As FileNmngDescr()
            Dim results() As Object = Me.Invoke("ReserveFileNamingDescriptions", New Object() {fileNamingSchemeId, size})
            Return CType(results(0),FileNmngDescr())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReserveFileNamingDescriptionsAsync(ByVal fileNamingSchemeId As Long, ByVal size As Integer)
            Me.ReserveFileNamingDescriptionsAsync(fileNamingSchemeId, size, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReserveFileNamingDescriptionsAsync(ByVal fileNamingSchemeId As Long, ByVal size As Integer, ByVal userState As Object)
            If (Me.ReserveFileNamingDescriptionsOperationCompleted Is Nothing) Then
                Me.ReserveFileNamingDescriptionsOperationCompleted = AddressOf Me.OnReserveFileNamingDescriptionsOperationCompleted
            End If
            Me.InvokeAsync("ReserveFileNamingDescriptions", New Object() {fileNamingSchemeId, size}, Me.ReserveFileNamingDescriptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnReserveFileNamingDescriptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReserveFileNamingDescriptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReserveFileNamingDescriptionsCompleted(Me, New ReserveFileNamingDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/RollbackFileNamingDescriptions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RollbackFileNamingDescriptions(ByVal descriptions() As FileNmngDescr)
            Me.Invoke("RollbackFileNamingDescriptions", New Object() {descriptions})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RollbackFileNamingDescriptionsAsync(ByVal descriptions() As FileNmngDescr)
            Me.RollbackFileNamingDescriptionsAsync(descriptions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RollbackFileNamingDescriptionsAsync(ByVal descriptions() As FileNmngDescr, ByVal userState As Object)
            If (Me.RollbackFileNamingDescriptionsOperationCompleted Is Nothing) Then
                Me.RollbackFileNamingDescriptionsOperationCompleted = AddressOf Me.OnRollbackFileNamingDescriptionsOperationCompleted
            End If
            Me.InvokeAsync("RollbackFileNamingDescriptions", New Object() {descriptions}, Me.RollbackFileNamingDescriptionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRollbackFileNamingDescriptionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RollbackFileNamingDescriptionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RollbackFileNamingDescriptionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetAllBasicSearchPropertyDefinition"& _ 
            "Ids", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllBasicSearchPropertyDefinitionIds() As Long()
            Dim results() As Object = Me.Invoke("GetAllBasicSearchPropertyDefinitionIds", New Object(-1) {})
            Return CType(results(0),Long())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllBasicSearchPropertyDefinitionIdsAsync()
            Me.GetAllBasicSearchPropertyDefinitionIdsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllBasicSearchPropertyDefinitionIdsAsync(ByVal userState As Object)
            If (Me.GetAllBasicSearchPropertyDefinitionIdsOperationCompleted Is Nothing) Then
                Me.GetAllBasicSearchPropertyDefinitionIdsOperationCompleted = AddressOf Me.OnGetAllBasicSearchPropertyDefinitionIdsOperationCompleted
            End If
            Me.InvokeAsync("GetAllBasicSearchPropertyDefinitionIds", New Object(-1) {}, Me.GetAllBasicSearchPropertyDefinitionIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllBasicSearchPropertyDefinitionIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllBasicSearchPropertyDefinitionIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllBasicSearchPropertyDefinitionIdsCompleted(Me, New GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddDesignVisualizationFileAttachmen"& _ 
            "t", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AddDesignVisualizationFileAttachment(ByVal fileId As Long, ByVal attachFileId As Long, ByVal attachSource As String)
            Me.Invoke("AddDesignVisualizationFileAttachment", New Object() {fileId, attachFileId, attachSource})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDesignVisualizationFileAttachmentAsync(ByVal fileId As Long, ByVal attachFileId As Long, ByVal attachSource As String)
            Me.AddDesignVisualizationFileAttachmentAsync(fileId, attachFileId, attachSource, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddDesignVisualizationFileAttachmentAsync(ByVal fileId As Long, ByVal attachFileId As Long, ByVal attachSource As String, ByVal userState As Object)
            If (Me.AddDesignVisualizationFileAttachmentOperationCompleted Is Nothing) Then
                Me.AddDesignVisualizationFileAttachmentOperationCompleted = AddressOf Me.OnAddDesignVisualizationFileAttachmentOperationCompleted
            End If
            Me.InvokeAsync("AddDesignVisualizationFileAttachment", New Object() {fileId, attachFileId, attachSource}, Me.AddDesignVisualizationFileAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddDesignVisualizationFileAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddDesignVisualizationFileAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddDesignVisualizationFileAttachmentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetDesignVisualizationAttachmentSta"& _ 
            "tusById", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDesignVisualizationAttachmentStatusById(ByVal fileId As Long, ByVal status As DesignVisualizationAttachmentStatus)
            Me.Invoke("SetDesignVisualizationAttachmentStatusById", New Object() {fileId, status})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDesignVisualizationAttachmentStatusByIdAsync(ByVal fileId As Long, ByVal status As DesignVisualizationAttachmentStatus)
            Me.SetDesignVisualizationAttachmentStatusByIdAsync(fileId, status, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDesignVisualizationAttachmentStatusByIdAsync(ByVal fileId As Long, ByVal status As DesignVisualizationAttachmentStatus, ByVal userState As Object)
            If (Me.SetDesignVisualizationAttachmentStatusByIdOperationCompleted Is Nothing) Then
                Me.SetDesignVisualizationAttachmentStatusByIdOperationCompleted = AddressOf Me.OnSetDesignVisualizationAttachmentStatusByIdOperationCompleted
            End If
            Me.InvokeAsync("SetDesignVisualizationAttachmentStatusById", New Object() {fileId, status}, Me.SetDesignVisualizationAttachmentStatusByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDesignVisualizationAttachmentStatusByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDesignVisualizationAttachmentStatusByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDesignVisualizationAttachmentStatusByIdCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetDesignVisualizationAttachmentsBy"& _ 
            "FileMasterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDesignVisualizationAttachmentsByFileMasterIds(ByVal fileMasterIds() As Long) As FileAssocArray()
            Dim results() As Object = Me.Invoke("GetDesignVisualizationAttachmentsByFileMasterIds", New Object() {fileMasterIds})
            Return CType(results(0),FileAssocArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDesignVisualizationAttachmentsByFileMasterIdsAsync(ByVal fileMasterIds() As Long)
            Me.GetDesignVisualizationAttachmentsByFileMasterIdsAsync(fileMasterIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDesignVisualizationAttachmentsByFileMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal userState As Object)
            If (Me.GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted Is Nothing) Then
                Me.GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted = AddressOf Me.OnGetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetDesignVisualizationAttachmentsByFileMasterIds", New Object() {fileMasterIds}, Me.GetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDesignVisualizationAttachmentsByFileMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDesignVisualizationAttachmentsByFileMasterIdsCompleted(Me, New GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GenerateFileNumber", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateFileNumber(ByVal numberingSchemeId As Long, ByVal fieldInputs() As String) As String
            Dim results() As Object = Me.Invoke("GenerateFileNumber", New Object() {numberingSchemeId, fieldInputs})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateFileNumberAsync(ByVal numberingSchemeId As Long, ByVal fieldInputs() As String)
            Me.GenerateFileNumberAsync(numberingSchemeId, fieldInputs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateFileNumberAsync(ByVal numberingSchemeId As Long, ByVal fieldInputs() As String, ByVal userState As Object)
            If (Me.GenerateFileNumberOperationCompleted Is Nothing) Then
                Me.GenerateFileNumberOperationCompleted = AddressOf Me.OnGenerateFileNumberOperationCompleted
            End If
            Me.InvokeAsync("GenerateFileNumber", New Object() {numberingSchemeId, fieldInputs}, Me.GenerateFileNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateFileNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateFileNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateFileNumberCompleted(Me, New GenerateFileNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GenerateFileNumbers", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateFileNumbers(ByVal numberingSchemeIds() As Long, ByVal fieldInputs() As StringArray) As String()
            Dim results() As Object = Me.Invoke("GenerateFileNumbers", New Object() {numberingSchemeIds, fieldInputs})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateFileNumbersAsync(ByVal numberingSchemeIds() As Long, ByVal fieldInputs() As StringArray)
            Me.GenerateFileNumbersAsync(numberingSchemeIds, fieldInputs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateFileNumbersAsync(ByVal numberingSchemeIds() As Long, ByVal fieldInputs() As StringArray, ByVal userState As Object)
            If (Me.GenerateFileNumbersOperationCompleted Is Nothing) Then
                Me.GenerateFileNumbersOperationCompleted = AddressOf Me.OnGenerateFileNumbersOperationCompleted
            End If
            Me.InvokeAsync("GenerateFileNumbers", New Object() {numberingSchemeIds, fieldInputs}, Me.GenerateFileNumbersOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateFileNumbersOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateFileNumbersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateFileNumbersCompleted(Me, New GenerateFileNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddNumberingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNumberingScheme(ByVal name As String, ByVal fields() As NumSchmField, ByVal toUpperCase As Boolean) As NumSchm
            Dim results() As Object = Me.Invoke("AddNumberingScheme", New Object() {name, fields, toUpperCase})
            Return CType(results(0),NumSchm)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNumberingSchemeAsync(ByVal name As String, ByVal fields() As NumSchmField, ByVal toUpperCase As Boolean)
            Me.AddNumberingSchemeAsync(name, fields, toUpperCase, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNumberingSchemeAsync(ByVal name As String, ByVal fields() As NumSchmField, ByVal toUpperCase As Boolean, ByVal userState As Object)
            If (Me.AddNumberingSchemeOperationCompleted Is Nothing) Then
                Me.AddNumberingSchemeOperationCompleted = AddressOf Me.OnAddNumberingSchemeOperationCompleted
            End If
            Me.InvokeAsync("AddNumberingScheme", New Object() {name, fields, toUpperCase}, Me.AddNumberingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNumberingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNumberingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNumberingSchemeCompleted(Me, New AddNumberingSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdateNumberingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateNumberingScheme(ByVal schemeId As Long, ByVal name As String, ByVal fields() As NumSchmField, ByVal toUpperCase As Boolean) As NumSchm
            Dim results() As Object = Me.Invoke("UpdateNumberingScheme", New Object() {schemeId, name, fields, toUpperCase})
            Return CType(results(0),NumSchm)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateNumberingSchemeAsync(ByVal schemeId As Long, ByVal name As String, ByVal fields() As NumSchmField, ByVal toUpperCase As Boolean)
            Me.UpdateNumberingSchemeAsync(schemeId, name, fields, toUpperCase, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateNumberingSchemeAsync(ByVal schemeId As Long, ByVal name As String, ByVal fields() As NumSchmField, ByVal toUpperCase As Boolean, ByVal userState As Object)
            If (Me.UpdateNumberingSchemeOperationCompleted Is Nothing) Then
                Me.UpdateNumberingSchemeOperationCompleted = AddressOf Me.OnUpdateNumberingSchemeOperationCompleted
            End If
            Me.InvokeAsync("UpdateNumberingScheme", New Object() {schemeId, name, fields, toUpperCase}, Me.UpdateNumberingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateNumberingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateNumberingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateNumberingSchemeCompleted(Me, New UpdateNumberingSchemeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteNumberingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteNumberingScheme(ByVal numberingSchemeId As Long)
            Me.Invoke("DeleteNumberingScheme", New Object() {numberingSchemeId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteNumberingSchemeAsync(ByVal numberingSchemeId As Long)
            Me.DeleteNumberingSchemeAsync(numberingSchemeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteNumberingSchemeAsync(ByVal numberingSchemeId As Long, ByVal userState As Object)
            If (Me.DeleteNumberingSchemeOperationCompleted Is Nothing) Then
                Me.DeleteNumberingSchemeOperationCompleted = AddressOf Me.OnDeleteNumberingSchemeOperationCompleted
            End If
            Me.InvokeAsync("DeleteNumberingScheme", New Object() {numberingSchemeId}, Me.DeleteNumberingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteNumberingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteNumberingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteNumberingSchemeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteNumberingSchemeUnconditional", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteNumberingSchemeUnconditional(ByVal numberingSchemeId As Long)
            Me.Invoke("DeleteNumberingSchemeUnconditional", New Object() {numberingSchemeId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteNumberingSchemeUnconditionalAsync(ByVal numberingSchemeId As Long)
            Me.DeleteNumberingSchemeUnconditionalAsync(numberingSchemeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteNumberingSchemeUnconditionalAsync(ByVal numberingSchemeId As Long, ByVal userState As Object)
            If (Me.DeleteNumberingSchemeUnconditionalOperationCompleted Is Nothing) Then
                Me.DeleteNumberingSchemeUnconditionalOperationCompleted = AddressOf Me.OnDeleteNumberingSchemeUnconditionalOperationCompleted
            End If
            Me.InvokeAsync("DeleteNumberingSchemeUnconditional", New Object() {numberingSchemeId}, Me.DeleteNumberingSchemeUnconditionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteNumberingSchemeUnconditionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteNumberingSchemeUnconditionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteNumberingSchemeUnconditionalCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/ActivateNumberingSchemes", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ActivateNumberingSchemes(ByVal numberingSchemeIds() As Long) As NumSchm()
            Dim results() As Object = Me.Invoke("ActivateNumberingSchemes", New Object() {numberingSchemeIds})
            Return CType(results(0),NumSchm())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ActivateNumberingSchemesAsync(ByVal numberingSchemeIds() As Long)
            Me.ActivateNumberingSchemesAsync(numberingSchemeIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActivateNumberingSchemesAsync(ByVal numberingSchemeIds() As Long, ByVal userState As Object)
            If (Me.ActivateNumberingSchemesOperationCompleted Is Nothing) Then
                Me.ActivateNumberingSchemesOperationCompleted = AddressOf Me.OnActivateNumberingSchemesOperationCompleted
            End If
            Me.InvokeAsync("ActivateNumberingSchemes", New Object() {numberingSchemeIds}, Me.ActivateNumberingSchemesOperationCompleted, userState)
        End Sub
        
        Private Sub OnActivateNumberingSchemesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActivateNumberingSchemesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActivateNumberingSchemesCompleted(Me, New ActivateNumberingSchemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeactivateNumberingSchemes", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeactivateNumberingSchemes(ByVal numberingSchemeIds() As Long) As NumSchm()
            Dim results() As Object = Me.Invoke("DeactivateNumberingSchemes", New Object() {numberingSchemeIds})
            Return CType(results(0),NumSchm())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeactivateNumberingSchemesAsync(ByVal numberingSchemeIds() As Long)
            Me.DeactivateNumberingSchemesAsync(numberingSchemeIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeactivateNumberingSchemesAsync(ByVal numberingSchemeIds() As Long, ByVal userState As Object)
            If (Me.DeactivateNumberingSchemesOperationCompleted Is Nothing) Then
                Me.DeactivateNumberingSchemesOperationCompleted = AddressOf Me.OnDeactivateNumberingSchemesOperationCompleted
            End If
            Me.InvokeAsync("DeactivateNumberingSchemes", New Object() {numberingSchemeIds}, Me.DeactivateNumberingSchemesOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeactivateNumberingSchemesOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeactivateNumberingSchemesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeactivateNumberingSchemesCompleted(Me, New DeactivateNumberingSchemesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetDefaultNumberingScheme", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SetDefaultNumberingScheme(ByVal numberingSchemeId As Long)
            Me.Invoke("SetDefaultNumberingScheme", New Object() {numberingSchemeId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDefaultNumberingSchemeAsync(ByVal numberingSchemeId As Long)
            Me.SetDefaultNumberingSchemeAsync(numberingSchemeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDefaultNumberingSchemeAsync(ByVal numberingSchemeId As Long, ByVal userState As Object)
            If (Me.SetDefaultNumberingSchemeOperationCompleted Is Nothing) Then
                Me.SetDefaultNumberingSchemeOperationCompleted = AddressOf Me.OnSetDefaultNumberingSchemeOperationCompleted
            End If
            Me.InvokeAsync("SetDefaultNumberingScheme", New Object() {numberingSchemeId}, Me.SetDefaultNumberingSchemeOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDefaultNumberingSchemeOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDefaultNumberingSchemeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDefaultNumberingSchemeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetNumberingSchemesByType", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNumberingSchemesByType(ByVal nst As NumSchmType) As NumSchm()
            Dim results() As Object = Me.Invoke("GetNumberingSchemesByType", New Object() {nst})
            Return CType(results(0),NumSchm())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNumberingSchemesByTypeAsync(ByVal nst As NumSchmType)
            Me.GetNumberingSchemesByTypeAsync(nst, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNumberingSchemesByTypeAsync(ByVal nst As NumSchmType, ByVal userState As Object)
            If (Me.GetNumberingSchemesByTypeOperationCompleted Is Nothing) Then
                Me.GetNumberingSchemesByTypeOperationCompleted = AddressOf Me.OnGetNumberingSchemesByTypeOperationCompleted
            End If
            Me.InvokeAsync("GetNumberingSchemesByType", New Object() {nst}, Me.GetNumberingSchemesByTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNumberingSchemesByTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNumberingSchemesByTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNumberingSchemesByTypeCompleted(Me, New GetNumberingSchemesByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetContentSources", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContentSources() As CtntSrc()
            Dim results() As Object = Me.Invoke("GetContentSources", New Object(-1) {})
            Return CType(results(0),CtntSrc())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContentSourcesAsync()
            Me.GetContentSourcesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContentSourcesAsync(ByVal userState As Object)
            If (Me.GetContentSourcesOperationCompleted Is Nothing) Then
                Me.GetContentSourcesOperationCompleted = AddressOf Me.OnGetContentSourcesOperationCompleted
            End If
            Me.InvokeAsync("GetContentSources", New Object(-1) {}, Me.GetContentSourcesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContentSourcesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContentSourcesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContentSourcesCompleted(Me, New GetContentSourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetContentSourceIdsByFileIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContentSourceIdsByFileIds(ByVal fileIds() As Long) As Long()
            Dim results() As Object = Me.Invoke("GetContentSourceIdsByFileIds", New Object() {fileIds})
            Return CType(results(0),Long())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContentSourceIdsByFileIdsAsync(ByVal fileIds() As Long)
            Me.GetContentSourceIdsByFileIdsAsync(fileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContentSourceIdsByFileIdsAsync(ByVal fileIds() As Long, ByVal userState As Object)
            If (Me.GetContentSourceIdsByFileIdsOperationCompleted Is Nothing) Then
                Me.GetContentSourceIdsByFileIdsOperationCompleted = AddressOf Me.OnGetContentSourceIdsByFileIdsOperationCompleted
            End If
            Me.InvokeAsync("GetContentSourceIdsByFileIds", New Object() {fileIds}, Me.GetContentSourceIdsByFileIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContentSourceIdsByFileIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContentSourceIdsByFileIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContentSourceIdsByFileIdsCompleted(Me, New GetContentSourceIdsByFileIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderRoot", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderRoot() As Folder
            Dim results() As Object = Me.Invoke("GetFolderRoot", New Object(-1) {})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderRootAsync()
            Me.GetFolderRootAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderRootAsync(ByVal userState As Object)
            If (Me.GetFolderRootOperationCompleted Is Nothing) Then
                Me.GetFolderRootOperationCompleted = AddressOf Me.OnGetFolderRootOperationCompleted
            End If
            Me.InvokeAsync("GetFolderRoot", New Object(-1) {}, Me.GetFolderRootOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderRootOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderRootCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderRootCompleted(Me, New GetFolderRootCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderByPath", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderByPath(ByVal path As String) As Folder
            Dim results() As Object = Me.Invoke("GetFolderByPath", New Object() {path})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderByPathAsync(ByVal path As String)
            Me.GetFolderByPathAsync(path, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderByPathAsync(ByVal path As String, ByVal userState As Object)
            If (Me.GetFolderByPathOperationCompleted Is Nothing) Then
                Me.GetFolderByPathOperationCompleted = AddressOf Me.OnGetFolderByPathOperationCompleted
            End If
            Me.InvokeAsync("GetFolderByPath", New Object() {path}, Me.GetFolderByPathOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderByPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderByPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderByPathCompleted(Me, New GetFolderByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFoldersByPaths", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersByPaths(ByVal paths() As String) As Folder()
            Dim results() As Object = Me.Invoke("GetFoldersByPaths", New Object() {paths})
            Return CType(results(0),Folder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByPathsAsync(ByVal paths() As String)
            Me.GetFoldersByPathsAsync(paths, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByPathsAsync(ByVal paths() As String, ByVal userState As Object)
            If (Me.GetFoldersByPathsOperationCompleted Is Nothing) Then
                Me.GetFoldersByPathsOperationCompleted = AddressOf Me.OnGetFoldersByPathsOperationCompleted
            End If
            Me.InvokeAsync("GetFoldersByPaths", New Object() {paths}, Me.GetFoldersByPathsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFoldersByPathsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFoldersByPathsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFoldersByPathsCompleted(Me, New GetFoldersByPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFoldersByPaths", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFoldersByPaths(ByVal paths() As String) As Folder()
            Dim results() As Object = Me.Invoke("FindFoldersByPaths", New Object() {paths})
            Return CType(results(0),Folder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFoldersByPathsAsync(ByVal paths() As String)
            Me.FindFoldersByPathsAsync(paths, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFoldersByPathsAsync(ByVal paths() As String, ByVal userState As Object)
            If (Me.FindFoldersByPathsOperationCompleted Is Nothing) Then
                Me.FindFoldersByPathsOperationCompleted = AddressOf Me.OnFindFoldersByPathsOperationCompleted
            End If
            Me.InvokeAsync("FindFoldersByPaths", New Object() {paths}, Me.FindFoldersByPathsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFoldersByPathsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFoldersByPathsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFoldersByPathsCompleted(Me, New FindFoldersByPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderById", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderById(ByVal folderId As Long) As Folder
            Dim results() As Object = Me.Invoke("GetFolderById", New Object() {folderId})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderByIdAsync(ByVal folderId As Long)
            Me.GetFolderByIdAsync(folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderByIdAsync(ByVal folderId As Long, ByVal userState As Object)
            If (Me.GetFolderByIdOperationCompleted Is Nothing) Then
                Me.GetFolderByIdOperationCompleted = AddressOf Me.OnGetFolderByIdOperationCompleted
            End If
            Me.InvokeAsync("GetFolderById", New Object() {folderId}, Me.GetFolderByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderByIdCompleted(Me, New GetFolderByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFoldersByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersByIds(ByVal folderIds() As Long) As Folder()
            Dim results() As Object = Me.Invoke("GetFoldersByIds", New Object() {folderIds})
            Return CType(results(0),Folder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByIdsAsync(ByVal folderIds() As Long)
            Me.GetFoldersByIdsAsync(folderIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByIdsAsync(ByVal folderIds() As Long, ByVal userState As Object)
            If (Me.GetFoldersByIdsOperationCompleted Is Nothing) Then
                Me.GetFoldersByIdsOperationCompleted = AddressOf Me.OnGetFoldersByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFoldersByIds", New Object() {folderIds}, Me.GetFoldersByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFoldersByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFoldersByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFoldersByIdsCompleted(Me, New GetFoldersByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFoldersByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFoldersByIds(ByVal folderIds() As Long) As Folder()
            Dim results() As Object = Me.Invoke("FindFoldersByIds", New Object() {folderIds})
            Return CType(results(0),Folder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFoldersByIdsAsync(ByVal folderIds() As Long)
            Me.FindFoldersByIdsAsync(folderIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFoldersByIdsAsync(ByVal folderIds() As Long, ByVal userState As Object)
            If (Me.FindFoldersByIdsOperationCompleted Is Nothing) Then
                Me.FindFoldersByIdsOperationCompleted = AddressOf Me.OnFindFoldersByIdsOperationCompleted
            End If
            Me.InvokeAsync("FindFoldersByIds", New Object() {folderIds}, Me.FindFoldersByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFoldersByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFoldersByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFoldersByIdsCompleted(Me, New FindFoldersByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFoldersByParentId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersByParentId(ByVal parentFolderId As Long, ByVal recurse As Boolean) As Folder()
            Dim results() As Object = Me.Invoke("GetFoldersByParentId", New Object() {parentFolderId, recurse})
            Return CType(results(0),Folder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByParentIdAsync(ByVal parentFolderId As Long, ByVal recurse As Boolean)
            Me.GetFoldersByParentIdAsync(parentFolderId, recurse, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByParentIdAsync(ByVal parentFolderId As Long, ByVal recurse As Boolean, ByVal userState As Object)
            If (Me.GetFoldersByParentIdOperationCompleted Is Nothing) Then
                Me.GetFoldersByParentIdOperationCompleted = AddressOf Me.OnGetFoldersByParentIdOperationCompleted
            End If
            Me.InvokeAsync("GetFoldersByParentId", New Object() {parentFolderId, recurse}, Me.GetFoldersByParentIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFoldersByParentIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFoldersByParentIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFoldersByParentIdCompleted(Me, New GetFoldersByParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFoldersByParentIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersByParentIds(ByVal parentFolderIds() As Long, ByVal recurse As Boolean) As FolderArray()
            Dim results() As Object = Me.Invoke("GetFoldersByParentIds", New Object() {parentFolderIds, recurse})
            Return CType(results(0),FolderArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByParentIdsAsync(ByVal parentFolderIds() As Long, ByVal recurse As Boolean)
            Me.GetFoldersByParentIdsAsync(parentFolderIds, recurse, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByParentIdsAsync(ByVal parentFolderIds() As Long, ByVal recurse As Boolean, ByVal userState As Object)
            If (Me.GetFoldersByParentIdsOperationCompleted Is Nothing) Then
                Me.GetFoldersByParentIdsOperationCompleted = AddressOf Me.OnGetFoldersByParentIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFoldersByParentIds", New Object() {parentFolderIds, recurse}, Me.GetFoldersByParentIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFoldersByParentIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFoldersByParentIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFoldersByParentIdsCompleted(Me, New GetFoldersByParentIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFoldersByFileMasterId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersByFileMasterId(ByVal fileMasterId As Long) As Folder()
            Dim results() As Object = Me.Invoke("GetFoldersByFileMasterId", New Object() {fileMasterId})
            Return CType(results(0),Folder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByFileMasterIdAsync(ByVal fileMasterId As Long)
            Me.GetFoldersByFileMasterIdAsync(fileMasterId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByFileMasterIdAsync(ByVal fileMasterId As Long, ByVal userState As Object)
            If (Me.GetFoldersByFileMasterIdOperationCompleted Is Nothing) Then
                Me.GetFoldersByFileMasterIdOperationCompleted = AddressOf Me.OnGetFoldersByFileMasterIdOperationCompleted
            End If
            Me.InvokeAsync("GetFoldersByFileMasterId", New Object() {fileMasterId}, Me.GetFoldersByFileMasterIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFoldersByFileMasterIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFoldersByFileMasterIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFoldersByFileMasterIdCompleted(Me, New GetFoldersByFileMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFoldersByFileMasterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFoldersByFileMasterIds(ByVal fileMasterIds() As Long) As FolderArray()
            Dim results() As Object = Me.Invoke("GetFoldersByFileMasterIds", New Object() {fileMasterIds})
            Return CType(results(0),FolderArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByFileMasterIdsAsync(ByVal fileMasterIds() As Long)
            Me.GetFoldersByFileMasterIdsAsync(fileMasterIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFoldersByFileMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal userState As Object)
            If (Me.GetFoldersByFileMasterIdsOperationCompleted Is Nothing) Then
                Me.GetFoldersByFileMasterIdsOperationCompleted = AddressOf Me.OnGetFoldersByFileMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFoldersByFileMasterIds", New Object() {fileMasterIds}, Me.GetFoldersByFileMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFoldersByFileMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFoldersByFileMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFoldersByFileMasterIdsCompleted(Me, New GetFoldersByFileMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddFolder", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFolder(ByVal name As String, ByVal parentId As Long, ByVal isLibrary As Boolean) As Folder
            Dim results() As Object = Me.Invoke("AddFolder", New Object() {name, parentId, isLibrary})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFolderAsync(ByVal name As String, ByVal parentId As Long, ByVal isLibrary As Boolean)
            Me.AddFolderAsync(name, parentId, isLibrary, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFolderAsync(ByVal name As String, ByVal parentId As Long, ByVal isLibrary As Boolean, ByVal userState As Object)
            If (Me.AddFolderOperationCompleted Is Nothing) Then
                Me.AddFolderOperationCompleted = AddressOf Me.OnAddFolderOperationCompleted
            End If
            Me.InvokeAsync("AddFolder", New Object() {name, parentId, isLibrary}, Me.AddFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFolderCompleted(Me, New AddFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFolderHierarchy", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFolderHierarchy(ByVal folderId As Long)
            Me.Invoke("DeleteFolderHierarchy", New Object() {folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFolderHierarchyAsync(ByVal folderId As Long)
            Me.DeleteFolderHierarchyAsync(folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFolderHierarchyAsync(ByVal folderId As Long, ByVal userState As Object)
            If (Me.DeleteFolderHierarchyOperationCompleted Is Nothing) Then
                Me.DeleteFolderHierarchyOperationCompleted = AddressOf Me.OnDeleteFolderHierarchyOperationCompleted
            End If
            Me.InvokeAsync("DeleteFolderHierarchy", New Object() {folderId}, Me.DeleteFolderHierarchyOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFolderHierarchyOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFolderHierarchyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFolderHierarchyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFolderHierarchyUnconditional", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFolderHierarchyUnconditional(ByVal folderId As Long)
            Me.Invoke("DeleteFolderHierarchyUnconditional", New Object() {folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFolderHierarchyUnconditionalAsync(ByVal folderId As Long)
            Me.DeleteFolderHierarchyUnconditionalAsync(folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFolderHierarchyUnconditionalAsync(ByVal folderId As Long, ByVal userState As Object)
            If (Me.DeleteFolderHierarchyUnconditionalOperationCompleted Is Nothing) Then
                Me.DeleteFolderHierarchyUnconditionalOperationCompleted = AddressOf Me.OnDeleteFolderHierarchyUnconditionalOperationCompleted
            End If
            Me.InvokeAsync("DeleteFolderHierarchyUnconditional", New Object() {folderId}, Me.DeleteFolderHierarchyUnconditionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFolderHierarchyUnconditionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFolderHierarchyUnconditionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFolderHierarchyUnconditionalCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderDeleteRestrictionsById", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderDeleteRestrictionsById(ByVal folderId As Long) As FolderDelRestric()
            Dim results() As Object = Me.Invoke("GetFolderDeleteRestrictionsById", New Object() {folderId})
            Return CType(results(0),FolderDelRestric())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderDeleteRestrictionsByIdAsync(ByVal folderId As Long)
            Me.GetFolderDeleteRestrictionsByIdAsync(folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderDeleteRestrictionsByIdAsync(ByVal folderId As Long, ByVal userState As Object)
            If (Me.GetFolderDeleteRestrictionsByIdOperationCompleted Is Nothing) Then
                Me.GetFolderDeleteRestrictionsByIdOperationCompleted = AddressOf Me.OnGetFolderDeleteRestrictionsByIdOperationCompleted
            End If
            Me.InvokeAsync("GetFolderDeleteRestrictionsById", New Object() {folderId}, Me.GetFolderDeleteRestrictionsByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderDeleteRestrictionsByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderDeleteRestrictionsByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderDeleteRestrictionsByIdCompleted(Me, New GetFolderDeleteRestrictionsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFolderDeleteRestrictionsByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderDeleteRestrictionsByIds(ByVal folderIds() As Long) As FolderDelRestricArray()
            Dim results() As Object = Me.Invoke("GetFolderDeleteRestrictionsByIds", New Object() {folderIds})
            Return CType(results(0),FolderDelRestricArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderDeleteRestrictionsByIdsAsync(ByVal folderIds() As Long)
            Me.GetFolderDeleteRestrictionsByIdsAsync(folderIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderDeleteRestrictionsByIdsAsync(ByVal folderIds() As Long, ByVal userState As Object)
            If (Me.GetFolderDeleteRestrictionsByIdsOperationCompleted Is Nothing) Then
                Me.GetFolderDeleteRestrictionsByIdsOperationCompleted = AddressOf Me.OnGetFolderDeleteRestrictionsByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFolderDeleteRestrictionsByIds", New Object() {folderIds}, Me.GetFolderDeleteRestrictionsByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderDeleteRestrictionsByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderDeleteRestrictionsByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderDeleteRestrictionsByIdsCompleted(Me, New GetFolderDeleteRestrictionsByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdateFolderUNCPath", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFolderUNCPath(ByVal folderId As Long, ByVal uncPath As String) As Folder
            Dim results() As Object = Me.Invoke("UpdateFolderUNCPath", New Object() {folderId, uncPath})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFolderUNCPathAsync(ByVal folderId As Long, ByVal uncPath As String)
            Me.UpdateFolderUNCPathAsync(folderId, uncPath, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFolderUNCPathAsync(ByVal folderId As Long, ByVal uncPath As String, ByVal userState As Object)
            If (Me.UpdateFolderUNCPathOperationCompleted Is Nothing) Then
                Me.UpdateFolderUNCPathOperationCompleted = AddressOf Me.OnUpdateFolderUNCPathOperationCompleted
            End If
            Me.InvokeAsync("UpdateFolderUNCPath", New Object() {folderId, uncPath}, Me.UpdateFolderUNCPathOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFolderUNCPathOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFolderUNCPathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFolderUNCPathCompleted(Me, New UpdateFolderUNCPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdateFolderName", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFolderName(ByVal folderId As Long, ByVal folderName As String) As Folder
            Dim results() As Object = Me.Invoke("UpdateFolderName", New Object() {folderId, folderName})
            Return CType(results(0),Folder)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFolderNameAsync(ByVal folderId As Long, ByVal folderName As String)
            Me.UpdateFolderNameAsync(folderId, folderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFolderNameAsync(ByVal folderId As Long, ByVal folderName As String, ByVal userState As Object)
            If (Me.UpdateFolderNameOperationCompleted Is Nothing) Then
                Me.UpdateFolderNameOperationCompleted = AddressOf Me.OnUpdateFolderNameOperationCompleted
            End If
            Me.InvokeAsync("UpdateFolderName", New Object() {folderId, folderName}, Me.UpdateFolderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFolderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFolderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFolderNameCompleted(Me, New UpdateFolderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileById", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileById(ByVal fileId As Long) As File
            Dim results() As Object = Me.Invoke("GetFileById", New Object() {fileId})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileByIdAsync(ByVal fileId As Long)
            Me.GetFileByIdAsync(fileId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileByIdAsync(ByVal fileId As Long, ByVal userState As Object)
            If (Me.GetFileByIdOperationCompleted Is Nothing) Then
                Me.GetFileByIdOperationCompleted = AddressOf Me.OnGetFileByIdOperationCompleted
            End If
            Me.InvokeAsync("GetFileById", New Object() {fileId}, Me.GetFileByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileByIdCompleted(Me, New GetFileByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFilesByIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilesByIds(ByVal fileIds() As Long) As File()
            Dim results() As Object = Me.Invoke("GetFilesByIds", New Object() {fileIds})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilesByIdsAsync(ByVal fileIds() As Long)
            Me.GetFilesByIdsAsync(fileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilesByIdsAsync(ByVal fileIds() As Long, ByVal userState As Object)
            If (Me.GetFilesByIdsOperationCompleted Is Nothing) Then
                Me.GetFilesByIdsOperationCompleted = AddressOf Me.OnGetFilesByIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFilesByIds", New Object() {fileIds}, Me.GetFilesByIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilesByIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilesByIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilesByIdsCompleted(Me, New GetFilesByIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindLatestFilesByPaths", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindLatestFilesByPaths(ByVal filePaths() As String) As File()
            Dim results() As Object = Me.Invoke("FindLatestFilesByPaths", New Object() {filePaths})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindLatestFilesByPathsAsync(ByVal filePaths() As String)
            Me.FindLatestFilesByPathsAsync(filePaths, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindLatestFilesByPathsAsync(ByVal filePaths() As String, ByVal userState As Object)
            If (Me.FindLatestFilesByPathsOperationCompleted Is Nothing) Then
                Me.FindLatestFilesByPathsOperationCompleted = AddressOf Me.OnFindLatestFilesByPathsOperationCompleted
            End If
            Me.InvokeAsync("FindLatestFilesByPaths", New Object() {filePaths}, Me.FindLatestFilesByPathsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindLatestFilesByPathsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindLatestFilesByPathsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindLatestFilesByPathsCompleted(Me, New FindLatestFilesByPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilesByPathsAndChecksums", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilesByPathsAndChecksums(ByVal filePaths() As String, ByVal checksums() As Integer) As File()
            Dim results() As Object = Me.Invoke("FindFilesByPathsAndChecksums", New Object() {filePaths, checksums})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilesByPathsAndChecksumsAsync(ByVal filePaths() As String, ByVal checksums() As Integer)
            Me.FindFilesByPathsAndChecksumsAsync(filePaths, checksums, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilesByPathsAndChecksumsAsync(ByVal filePaths() As String, ByVal checksums() As Integer, ByVal userState As Object)
            If (Me.FindFilesByPathsAndChecksumsOperationCompleted Is Nothing) Then
                Me.FindFilesByPathsAndChecksumsOperationCompleted = AddressOf Me.OnFindFilesByPathsAndChecksumsOperationCompleted
            End If
            Me.InvokeAsync("FindFilesByPathsAndChecksums", New Object() {filePaths, checksums}, Me.FindFilesByPathsAndChecksumsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilesByPathsAndChecksumsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilesByPathsAndChecksumsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilesByPathsAndChecksumsCompleted(Me, New FindFilesByPathsAndChecksumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilesByFoldersNamesAndChecksums"& _ 
            "", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilesByFoldersNamesAndChecksums(ByVal folderIds() As Long, ByVal filenames() As String, ByVal checksums() As Integer) As File()
            Dim results() As Object = Me.Invoke("FindFilesByFoldersNamesAndChecksums", New Object() {folderIds, filenames, checksums})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilesByFoldersNamesAndChecksumsAsync(ByVal folderIds() As Long, ByVal filenames() As String, ByVal checksums() As Integer)
            Me.FindFilesByFoldersNamesAndChecksumsAsync(folderIds, filenames, checksums, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilesByFoldersNamesAndChecksumsAsync(ByVal folderIds() As Long, ByVal filenames() As String, ByVal checksums() As Integer, ByVal userState As Object)
            If (Me.FindFilesByFoldersNamesAndChecksumsOperationCompleted Is Nothing) Then
                Me.FindFilesByFoldersNamesAndChecksumsOperationCompleted = AddressOf Me.OnFindFilesByFoldersNamesAndChecksumsOperationCompleted
            End If
            Me.InvokeAsync("FindFilesByFoldersNamesAndChecksums", New Object() {folderIds, filenames, checksums}, Me.FindFilesByFoldersNamesAndChecksumsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilesByFoldersNamesAndChecksumsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilesByFoldersNamesAndChecksumsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilesByFoldersNamesAndChecksumsCompleted(Me, New FindFilesByFoldersNamesAndChecksumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilePathsByNameAndChecksum", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilePathsByNameAndChecksum(ByVal fileName As String, ByVal checksum As Integer) As FilePath()
            Dim results() As Object = Me.Invoke("FindFilePathsByNameAndChecksum", New Object() {fileName, checksum})
            Return CType(results(0),FilePath())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilePathsByNameAndChecksumAsync(ByVal fileName As String, ByVal checksum As Integer)
            Me.FindFilePathsByNameAndChecksumAsync(fileName, checksum, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilePathsByNameAndChecksumAsync(ByVal fileName As String, ByVal checksum As Integer, ByVal userState As Object)
            If (Me.FindFilePathsByNameAndChecksumOperationCompleted Is Nothing) Then
                Me.FindFilePathsByNameAndChecksumOperationCompleted = AddressOf Me.OnFindFilePathsByNameAndChecksumOperationCompleted
            End If
            Me.InvokeAsync("FindFilePathsByNameAndChecksum", New Object() {fileName, checksum}, Me.FindFilePathsByNameAndChecksumOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilePathsByNameAndChecksumOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilePathsByNameAndChecksumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilePathsByNameAndChecksumCompleted(Me, New FindFilePathsByNameAndChecksumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilesByDatesPathsAndChecksums", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilesByDatesPathsAndChecksums(ByVal filePaths() As String, ByVal checksums() As Integer, ByVal createDates() As Date) As File()
            Dim results() As Object = Me.Invoke("FindFilesByDatesPathsAndChecksums", New Object() {filePaths, checksums, createDates})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilesByDatesPathsAndChecksumsAsync(ByVal filePaths() As String, ByVal checksums() As Integer, ByVal createDates() As Date)
            Me.FindFilesByDatesPathsAndChecksumsAsync(filePaths, checksums, createDates, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilesByDatesPathsAndChecksumsAsync(ByVal filePaths() As String, ByVal checksums() As Integer, ByVal createDates() As Date, ByVal userState As Object)
            If (Me.FindFilesByDatesPathsAndChecksumsOperationCompleted Is Nothing) Then
                Me.FindFilesByDatesPathsAndChecksumsOperationCompleted = AddressOf Me.OnFindFilesByDatesPathsAndChecksumsOperationCompleted
            End If
            Me.InvokeAsync("FindFilesByDatesPathsAndChecksums", New Object() {filePaths, checksums, createDates}, Me.FindFilesByDatesPathsAndChecksumsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilesByDatesPathsAndChecksumsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilesByDatesPathsAndChecksumsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilesByDatesPathsAndChecksumsCompleted(Me, New FindFilesByDatesPathsAndChecksumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilesByFoldersDatesNamesAndChec"& _ 
            "ksums", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilesByFoldersDatesNamesAndChecksums(ByVal folderIds() As Long, ByVal filenames() As String, ByVal checksums() As Integer, ByVal createDates() As Date) As File()
            Dim results() As Object = Me.Invoke("FindFilesByFoldersDatesNamesAndChecksums", New Object() {folderIds, filenames, checksums, createDates})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilesByFoldersDatesNamesAndChecksumsAsync(ByVal folderIds() As Long, ByVal filenames() As String, ByVal checksums() As Integer, ByVal createDates() As Date)
            Me.FindFilesByFoldersDatesNamesAndChecksumsAsync(folderIds, filenames, checksums, createDates, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilesByFoldersDatesNamesAndChecksumsAsync(ByVal folderIds() As Long, ByVal filenames() As String, ByVal checksums() As Integer, ByVal createDates() As Date, ByVal userState As Object)
            If (Me.FindFilesByFoldersDatesNamesAndChecksumsOperationCompleted Is Nothing) Then
                Me.FindFilesByFoldersDatesNamesAndChecksumsOperationCompleted = AddressOf Me.OnFindFilesByFoldersDatesNamesAndChecksumsOperationCompleted
            End If
            Me.InvokeAsync("FindFilesByFoldersDatesNamesAndChecksums", New Object() {folderIds, filenames, checksums, createDates}, Me.FindFilesByFoldersDatesNamesAndChecksumsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilesByFoldersDatesNamesAndChecksumsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilesByFoldersDatesNamesAndChecksumsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilesByFoldersDatesNamesAndChecksumsCompleted(Me, New FindFilesByFoldersDatesNamesAndChecksumsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilePathsByDateNameAndChecksum", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilePathsByDateNameAndChecksum(ByVal fileName As String, ByVal checksum As Integer, ByVal createdate As Date) As FilePath()
            Dim results() As Object = Me.Invoke("FindFilePathsByDateNameAndChecksum", New Object() {fileName, checksum, createdate})
            Return CType(results(0),FilePath())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilePathsByDateNameAndChecksumAsync(ByVal fileName As String, ByVal checksum As Integer, ByVal createdate As Date)
            Me.FindFilePathsByDateNameAndChecksumAsync(fileName, checksum, createdate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilePathsByDateNameAndChecksumAsync(ByVal fileName As String, ByVal checksum As Integer, ByVal createdate As Date, ByVal userState As Object)
            If (Me.FindFilePathsByDateNameAndChecksumOperationCompleted Is Nothing) Then
                Me.FindFilePathsByDateNameAndChecksumOperationCompleted = AddressOf Me.OnFindFilePathsByDateNameAndChecksumOperationCompleted
            End If
            Me.InvokeAsync("FindFilePathsByDateNameAndChecksum", New Object() {fileName, checksum, createdate}, Me.FindFilePathsByDateNameAndChecksumOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilePathsByDateNameAndChecksumOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilePathsByDateNameAndChecksumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilePathsByDateNameAndChecksumCompleted(Me, New FindFilePathsByDateNameAndChecksumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestFilePathsByNames", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestFilePathsByNames(ByVal fileNames() As String) As FilePathArray()
            Dim results() As Object = Me.Invoke("GetLatestFilePathsByNames", New Object() {fileNames})
            Return CType(results(0),FilePathArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilePathsByNamesAsync(ByVal fileNames() As String)
            Me.GetLatestFilePathsByNamesAsync(fileNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilePathsByNamesAsync(ByVal fileNames() As String, ByVal userState As Object)
            If (Me.GetLatestFilePathsByNamesOperationCompleted Is Nothing) Then
                Me.GetLatestFilePathsByNamesOperationCompleted = AddressOf Me.OnGetLatestFilePathsByNamesOperationCompleted
            End If
            Me.InvokeAsync("GetLatestFilePathsByNames", New Object() {fileNames}, Me.GetLatestFilePathsByNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestFilePathsByNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestFilePathsByNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestFilePathsByNamesCompleted(Me, New GetLatestFilePathsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestDuplicateFilePaths", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestDuplicateFilePaths() As FilePath()
            Dim results() As Object = Me.Invoke("GetLatestDuplicateFilePaths", New Object(-1) {})
            Return CType(results(0),FilePath())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestDuplicateFilePathsAsync()
            Me.GetLatestDuplicateFilePathsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestDuplicateFilePathsAsync(ByVal userState As Object)
            If (Me.GetLatestDuplicateFilePathsOperationCompleted Is Nothing) Then
                Me.GetLatestDuplicateFilePathsOperationCompleted = AddressOf Me.OnGetLatestDuplicateFilePathsOperationCompleted
            End If
            Me.InvokeAsync("GetLatestDuplicateFilePaths", New Object(-1) {}, Me.GetLatestDuplicateFilePathsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestDuplicateFilePathsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestDuplicateFilePathsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestDuplicateFilePathsCompleted(Me, New GetLatestDuplicateFilePathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestFilesByFolderId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestFilesByFolderId(ByVal folderId As Long, ByVal includeHidden As Boolean) As File()
            Dim results() As Object = Me.Invoke("GetLatestFilesByFolderId", New Object() {folderId, includeHidden})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilesByFolderIdAsync(ByVal folderId As Long, ByVal includeHidden As Boolean)
            Me.GetLatestFilesByFolderIdAsync(folderId, includeHidden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilesByFolderIdAsync(ByVal folderId As Long, ByVal includeHidden As Boolean, ByVal userState As Object)
            If (Me.GetLatestFilesByFolderIdOperationCompleted Is Nothing) Then
                Me.GetLatestFilesByFolderIdOperationCompleted = AddressOf Me.OnGetLatestFilesByFolderIdOperationCompleted
            End If
            Me.InvokeAsync("GetLatestFilesByFolderId", New Object() {folderId, includeHidden}, Me.GetLatestFilesByFolderIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestFilesByFolderIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestFilesByFolderIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestFilesByFolderIdCompleted(Me, New GetLatestFilesByFolderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestFilesByFolderIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestFilesByFolderIds(ByVal folderIds() As Long, ByVal includeHidden As Boolean) As FileArray()
            Dim results() As Object = Me.Invoke("GetLatestFilesByFolderIds", New Object() {folderIds, includeHidden})
            Return CType(results(0),FileArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilesByFolderIdsAsync(ByVal folderIds() As Long, ByVal includeHidden As Boolean)
            Me.GetLatestFilesByFolderIdsAsync(folderIds, includeHidden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilesByFolderIdsAsync(ByVal folderIds() As Long, ByVal includeHidden As Boolean, ByVal userState As Object)
            If (Me.GetLatestFilesByFolderIdsOperationCompleted Is Nothing) Then
                Me.GetLatestFilesByFolderIdsOperationCompleted = AddressOf Me.OnGetLatestFilesByFolderIdsOperationCompleted
            End If
            Me.InvokeAsync("GetLatestFilesByFolderIds", New Object() {folderIds, includeHidden}, Me.GetLatestFilesByFolderIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestFilesByFolderIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestFilesByFolderIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestFilesByFolderIdsCompleted(Me, New GetLatestFilesByFolderIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFilesByMasterId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilesByMasterId(ByVal fileMasterId As Long) As File()
            Dim results() As Object = Me.Invoke("GetFilesByMasterId", New Object() {fileMasterId})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilesByMasterIdAsync(ByVal fileMasterId As Long)
            Me.GetFilesByMasterIdAsync(fileMasterId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilesByMasterIdAsync(ByVal fileMasterId As Long, ByVal userState As Object)
            If (Me.GetFilesByMasterIdOperationCompleted Is Nothing) Then
                Me.GetFilesByMasterIdOperationCompleted = AddressOf Me.OnGetFilesByMasterIdOperationCompleted
            End If
            Me.InvokeAsync("GetFilesByMasterId", New Object() {fileMasterId}, Me.GetFilesByMasterIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilesByMasterIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilesByMasterIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilesByMasterIdCompleted(Me, New GetFilesByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFilesByMasterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilesByMasterIds(ByVal fileMasterIds() As Long) As FileArray()
            Dim results() As Object = Me.Invoke("GetFilesByMasterIds", New Object() {fileMasterIds})
            Return CType(results(0),FileArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilesByMasterIdsAsync(ByVal fileMasterIds() As Long)
            Me.GetFilesByMasterIdsAsync(fileMasterIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilesByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal userState As Object)
            If (Me.GetFilesByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetFilesByMasterIdsOperationCompleted = AddressOf Me.OnGetFilesByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFilesByMasterIds", New Object() {fileMasterIds}, Me.GetFilesByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilesByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilesByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilesByMasterIdsCompleted(Me, New GetFilesByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFilesByHistoryType", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilesByHistoryType(ByVal filesIds() As Long, ByVal [option] As FileHistoryTypeOptions) As FileArray()
            Dim results() As Object = Me.Invoke("GetFilesByHistoryType", New Object() {filesIds, [option]})
            Return CType(results(0),FileArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilesByHistoryTypeAsync(ByVal filesIds() As Long, ByVal [option] As FileHistoryTypeOptions)
            Me.GetFilesByHistoryTypeAsync(filesIds, [option], Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilesByHistoryTypeAsync(ByVal filesIds() As Long, ByVal [option] As FileHistoryTypeOptions, ByVal userState As Object)
            If (Me.GetFilesByHistoryTypeOperationCompleted Is Nothing) Then
                Me.GetFilesByHistoryTypeOperationCompleted = AddressOf Me.OnGetFilesByHistoryTypeOperationCompleted
            End If
            Me.InvokeAsync("GetFilesByHistoryType", New Object() {filesIds, [option]}, Me.GetFilesByHistoryTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilesByHistoryTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilesByHistoryTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilesByHistoryTypeCompleted(Me, New GetFilesByHistoryTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileByVersion", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileByVersion(ByVal fileMasterId As Long, ByVal versionNumber As Integer) As File
            Dim results() As Object = Me.Invoke("GetFileByVersion", New Object() {fileMasterId, versionNumber})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileByVersionAsync(ByVal fileMasterId As Long, ByVal versionNumber As Integer)
            Me.GetFileByVersionAsync(fileMasterId, versionNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileByVersionAsync(ByVal fileMasterId As Long, ByVal versionNumber As Integer, ByVal userState As Object)
            If (Me.GetFileByVersionOperationCompleted Is Nothing) Then
                Me.GetFileByVersionOperationCompleted = AddressOf Me.OnGetFileByVersionOperationCompleted
            End If
            Me.InvokeAsync("GetFileByVersion", New Object() {fileMasterId, versionNumber}, Me.GetFileByVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileByVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileByVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileByVersionCompleted(Me, New GetFileByVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFilesByVersions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFilesByVersions(ByVal fileMasterIds() As Long, ByVal versionNumbers() As Integer) As File()
            Dim results() As Object = Me.Invoke("GetFilesByVersions", New Object() {fileMasterIds, versionNumbers})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFilesByVersionsAsync(ByVal fileMasterIds() As Long, ByVal versionNumbers() As Integer)
            Me.GetFilesByVersionsAsync(fileMasterIds, versionNumbers, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFilesByVersionsAsync(ByVal fileMasterIds() As Long, ByVal versionNumbers() As Integer, ByVal userState As Object)
            If (Me.GetFilesByVersionsOperationCompleted Is Nothing) Then
                Me.GetFilesByVersionsOperationCompleted = AddressOf Me.OnGetFilesByVersionsOperationCompleted
            End If
            Me.InvokeAsync("GetFilesByVersions", New Object() {fileMasterIds, versionNumbers}, Me.GetFilesByVersionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFilesByVersionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFilesByVersionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFilesByVersionsCompleted(Me, New GetFilesByVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestFileByMasterId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestFileByMasterId(ByVal fileMasterId As Long) As File
            Dim results() As Object = Me.Invoke("GetLatestFileByMasterId", New Object() {fileMasterId})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestFileByMasterIdAsync(ByVal fileMasterId As Long)
            Me.GetLatestFileByMasterIdAsync(fileMasterId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestFileByMasterIdAsync(ByVal fileMasterId As Long, ByVal userState As Object)
            If (Me.GetLatestFileByMasterIdOperationCompleted Is Nothing) Then
                Me.GetLatestFileByMasterIdOperationCompleted = AddressOf Me.OnGetLatestFileByMasterIdOperationCompleted
            End If
            Me.InvokeAsync("GetLatestFileByMasterId", New Object() {fileMasterId}, Me.GetLatestFileByMasterIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestFileByMasterIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestFileByMasterIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestFileByMasterIdCompleted(Me, New GetLatestFileByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetLatestFilesByMasterIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLatestFilesByMasterIds(ByVal fileMasterIds() As Long) As File()
            Dim results() As Object = Me.Invoke("GetLatestFilesByMasterIds", New Object() {fileMasterIds})
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilesByMasterIdsAsync(ByVal fileMasterIds() As Long)
            Me.GetLatestFilesByMasterIdsAsync(fileMasterIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLatestFilesByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal userState As Object)
            If (Me.GetLatestFilesByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetLatestFilesByMasterIdsOperationCompleted = AddressOf Me.OnGetLatestFilesByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetLatestFilesByMasterIds", New Object() {fileMasterIds}, Me.GetLatestFilesByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLatestFilesByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLatestFilesByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLatestFilesByMasterIdsCompleted(Me, New GetLatestFilesByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DownloadFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DownloadFile(ByVal fileId As Long, ByVal allowSync As Boolean, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef fileContents() As Byte) As String
            Dim results() As Object = Me.Invoke("DownloadFile", New Object() {fileId, allowSync})
            fileContents = CType(results(1),Byte())
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DownloadFileAsync(ByVal fileId As Long, ByVal allowSync As Boolean)
            Me.DownloadFileAsync(fileId, allowSync, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DownloadFileAsync(ByVal fileId As Long, ByVal allowSync As Boolean, ByVal userState As Object)
            If (Me.DownloadFileOperationCompleted Is Nothing) Then
                Me.DownloadFileOperationCompleted = AddressOf Me.OnDownloadFileOperationCompleted
            End If
            Me.InvokeAsync("DownloadFile", New Object() {fileId, allowSync}, Me.DownloadFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnDownloadFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.DownloadFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DownloadFileCompleted(Me, New DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DownloadFilePart", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DownloadFilePart(ByVal fileId As Long, ByVal firstByte As Long, ByVal lastByte As Long, ByVal allowSync As Boolean) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("DownloadFilePart", New Object() {fileId, firstByte, lastByte, allowSync})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DownloadFilePartAsync(ByVal fileId As Long, ByVal firstByte As Long, ByVal lastByte As Long, ByVal allowSync As Boolean)
            Me.DownloadFilePartAsync(fileId, firstByte, lastByte, allowSync, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DownloadFilePartAsync(ByVal fileId As Long, ByVal firstByte As Long, ByVal lastByte As Long, ByVal allowSync As Boolean, ByVal userState As Object)
            If (Me.DownloadFilePartOperationCompleted Is Nothing) Then
                Me.DownloadFilePartOperationCompleted = AddressOf Me.OnDownloadFilePartOperationCompleted
            End If
            Me.InvokeAsync("DownloadFilePart", New Object() {fileId, firstByte, lastByte, allowSync}, Me.DownloadFilePartOperationCompleted, userState)
        End Sub
        
        Private Sub OnDownloadFilePartOperationCompleted(ByVal arg As Object)
            If (Not (Me.DownloadFilePartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DownloadFilePartCompleted(Me, New DownloadFilePartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UploadFilePart", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadFilePart(ByVal uploadIdentifier As System.Guid, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal filePart() As Byte) As System.Guid
            Dim results() As Object = Me.Invoke("UploadFilePart", New Object() {uploadIdentifier, filePart})
            Return CType(results(0),System.Guid)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadFilePartAsync(ByVal uploadIdentifier As System.Guid, ByVal filePart() As Byte)
            Me.UploadFilePartAsync(uploadIdentifier, filePart, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadFilePartAsync(ByVal uploadIdentifier As System.Guid, ByVal filePart() As Byte, ByVal userState As Object)
            If (Me.UploadFilePartOperationCompleted Is Nothing) Then
                Me.UploadFilePartOperationCompleted = AddressOf Me.OnUploadFilePartOperationCompleted
            End If
            Me.InvokeAsync("UploadFilePart", New Object() {uploadIdentifier, filePart}, Me.UploadFilePartOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadFilePartOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadFilePartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadFilePartCompleted(Me, New UploadFilePartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFile(ByVal folderId As Long, ByVal fileName As String, ByVal comment As String, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal fileContents() As Byte) As File
            Dim results() As Object = Me.Invoke("AddFile", New Object() {folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClassification, hidden, fileContents})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFileAsync(ByVal folderId As Long, ByVal fileName As String, ByVal comment As String, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, ByVal fileContents() As Byte)
            Me.AddFileAsync(folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClassification, hidden, fileContents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFileAsync(ByVal folderId As Long, ByVal fileName As String, ByVal comment As String, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, ByVal fileContents() As Byte, ByVal userState As Object)
            If (Me.AddFileOperationCompleted Is Nothing) Then
                Me.AddFileOperationCompleted = AddressOf Me.OnAddFileOperationCompleted
            End If
            Me.InvokeAsync("AddFile", New Object() {folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClassification, hidden, fileContents}, Me.AddFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFileCompleted(Me, New AddFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddUploadedFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddUploadedFile(ByVal folderId As Long, ByVal fileName As String, ByVal comment As String, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal fileClass As FileClassification, ByVal hidden As Boolean, ByVal uploadIdentifier As System.Guid) As File
            Dim results() As Object = Me.Invoke("AddUploadedFile", New Object() {folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClass, hidden, uploadIdentifier})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddUploadedFileAsync(ByVal folderId As Long, ByVal fileName As String, ByVal comment As String, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal fileClass As FileClassification, ByVal hidden As Boolean, ByVal uploadIdentifier As System.Guid)
            Me.AddUploadedFileAsync(folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClass, hidden, uploadIdentifier, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUploadedFileAsync(ByVal folderId As Long, ByVal fileName As String, ByVal comment As String, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal fileClass As FileClassification, ByVal hidden As Boolean, ByVal uploadIdentifier As System.Guid, ByVal userState As Object)
            If (Me.AddUploadedFileOperationCompleted Is Nothing) Then
                Me.AddUploadedFileOperationCompleted = AddressOf Me.OnAddUploadedFileOperationCompleted
            End If
            Me.InvokeAsync("AddUploadedFile", New Object() {folderId, fileName, comment, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, fileClass, hidden, uploadIdentifier}, Me.AddUploadedFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddUploadedFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddUploadedFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddUploadedFileCompleted(Me, New AddUploadedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/CheckinFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckinFile(ByVal fileMasterId As Long, ByVal comment As String, ByVal keepCheckedOut As Boolean, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal copyBom As Boolean, ByVal newFileName As String, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal fileContents() As Byte) As File
            Dim results() As Object = Me.Invoke("CheckinFile", New Object() {fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, fileClassification, hidden, fileContents})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckinFileAsync(ByVal fileMasterId As Long, ByVal comment As String, ByVal keepCheckedOut As Boolean, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal copyBom As Boolean, ByVal newFileName As String, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, ByVal fileContents() As Byte)
            Me.CheckinFileAsync(fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, fileClassification, hidden, fileContents, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckinFileAsync(ByVal fileMasterId As Long, ByVal comment As String, ByVal keepCheckedOut As Boolean, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal copyBom As Boolean, ByVal newFileName As String, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, ByVal fileContents() As Byte, ByVal userState As Object)
            If (Me.CheckinFileOperationCompleted Is Nothing) Then
                Me.CheckinFileOperationCompleted = AddressOf Me.OnCheckinFileOperationCompleted
            End If
            Me.InvokeAsync("CheckinFile", New Object() {fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, fileClassification, hidden, fileContents}, Me.CheckinFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckinFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckinFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckinFileCompleted(Me, New CheckinFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/CheckinUploadedFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckinUploadedFile(ByVal fileMasterId As Long, ByVal comment As String, ByVal keepCheckedOut As Boolean, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal copyBom As Boolean, ByVal newFileName As String, ByVal uploadIdentifier As System.Guid, ByVal fileClassification As FileClassification, ByVal hidden As Boolean) As File
            Dim results() As Object = Me.Invoke("CheckinUploadedFile", New Object() {fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, uploadIdentifier, fileClassification, hidden})
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckinUploadedFileAsync(ByVal fileMasterId As Long, ByVal comment As String, ByVal keepCheckedOut As Boolean, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal copyBom As Boolean, ByVal newFileName As String, ByVal uploadIdentifier As System.Guid, ByVal fileClassification As FileClassification, ByVal hidden As Boolean)
            Me.CheckinUploadedFileAsync(fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, uploadIdentifier, fileClassification, hidden, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckinUploadedFileAsync(ByVal fileMasterId As Long, ByVal comment As String, ByVal keepCheckedOut As Boolean, ByVal lastWrite As Date, ByVal dependFileIds() As Long, ByVal dependSources() As String, ByVal attachFileIds() As Long, ByVal attachSources() As String, ByVal bom As BOM, ByVal copyBom As Boolean, ByVal newFileName As String, ByVal uploadIdentifier As System.Guid, ByVal fileClassification As FileClassification, ByVal hidden As Boolean, ByVal userState As Object)
            If (Me.CheckinUploadedFileOperationCompleted Is Nothing) Then
                Me.CheckinUploadedFileOperationCompleted = AddressOf Me.OnCheckinUploadedFileOperationCompleted
            End If
            Me.InvokeAsync("CheckinUploadedFile", New Object() {fileMasterId, comment, keepCheckedOut, lastWrite, dependFileIds, dependSources, attachFileIds, attachSources, bom, copyBom, newFileName, uploadIdentifier, fileClassification, hidden}, Me.CheckinUploadedFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckinUploadedFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckinUploadedFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckinUploadedFileCompleted(Me, New CheckinUploadedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/CheckoutFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckoutFile(ByVal folderId As Long, ByVal fileId As Long, ByVal [option] As CheckoutFileOptions, ByVal machine As String, ByVal localPath As String, ByVal comment As String, ByVal downloadFile As Boolean, ByVal allowSync As Boolean, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef fileContents() As Byte) As File
            Dim results() As Object = Me.Invoke("CheckoutFile", New Object() {folderId, fileId, [option], machine, localPath, comment, downloadFile, allowSync})
            fileContents = CType(results(1),Byte())
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckoutFileAsync(ByVal folderId As Long, ByVal fileId As Long, ByVal [option] As CheckoutFileOptions, ByVal machine As String, ByVal localPath As String, ByVal comment As String, ByVal downloadFile As Boolean, ByVal allowSync As Boolean)
            Me.CheckoutFileAsync(folderId, fileId, [option], machine, localPath, comment, downloadFile, allowSync, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckoutFileAsync(ByVal folderId As Long, ByVal fileId As Long, ByVal [option] As CheckoutFileOptions, ByVal machine As String, ByVal localPath As String, ByVal comment As String, ByVal downloadFile As Boolean, ByVal allowSync As Boolean, ByVal userState As Object)
            If (Me.CheckoutFileOperationCompleted Is Nothing) Then
                Me.CheckoutFileOperationCompleted = AddressOf Me.OnCheckoutFileOperationCompleted
            End If
            Me.InvokeAsync("CheckoutFile", New Object() {folderId, fileId, [option], machine, localPath, comment, downloadFile, allowSync}, Me.CheckoutFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckoutFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckoutFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckoutFileCompleted(Me, New CheckoutFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UndoCheckoutFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UndoCheckoutFile(ByVal fileMasterId As Long, ByVal downloadFile As Boolean, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByRef fileContents() As Byte) As File
            Dim results() As Object = Me.Invoke("UndoCheckoutFile", New Object() {fileMasterId, downloadFile})
            fileContents = CType(results(1),Byte())
            Return CType(results(0),File)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UndoCheckoutFileAsync(ByVal fileMasterId As Long, ByVal downloadFile As Boolean)
            Me.UndoCheckoutFileAsync(fileMasterId, downloadFile, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UndoCheckoutFileAsync(ByVal fileMasterId As Long, ByVal downloadFile As Boolean, ByVal userState As Object)
            If (Me.UndoCheckoutFileOperationCompleted Is Nothing) Then
                Me.UndoCheckoutFileOperationCompleted = AddressOf Me.OnUndoCheckoutFileOperationCompleted
            End If
            Me.InvokeAsync("UndoCheckoutFile", New Object() {fileMasterId, downloadFile}, Me.UndoCheckoutFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnUndoCheckoutFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.UndoCheckoutFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UndoCheckoutFileCompleted(Me, New UndoCheckoutFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileFromFolder", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFileFromFolder(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.Invoke("DeleteFileFromFolder", New Object() {fileMasterId, folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileFromFolderAsync(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.DeleteFileFromFolderAsync(fileMasterId, folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileFromFolderAsync(ByVal fileMasterId As Long, ByVal folderId As Long, ByVal userState As Object)
            If (Me.DeleteFileFromFolderOperationCompleted Is Nothing) Then
                Me.DeleteFileFromFolderOperationCompleted = AddressOf Me.OnDeleteFileFromFolderOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileFromFolder", New Object() {fileMasterId, folderId}, Me.DeleteFileFromFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileFromFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileFromFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileFromFolderCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFilesFromFolder", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFilesFromFolder(ByVal fileMasterIds() As Long, ByVal folderId As Long)
            Me.Invoke("DeleteFilesFromFolder", New Object() {fileMasterIds, folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFilesFromFolderAsync(ByVal fileMasterIds() As Long, ByVal folderId As Long)
            Me.DeleteFilesFromFolderAsync(fileMasterIds, folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFilesFromFolderAsync(ByVal fileMasterIds() As Long, ByVal folderId As Long, ByVal userState As Object)
            If (Me.DeleteFilesFromFolderOperationCompleted Is Nothing) Then
                Me.DeleteFilesFromFolderOperationCompleted = AddressOf Me.OnDeleteFilesFromFolderOperationCompleted
            End If
            Me.InvokeAsync("DeleteFilesFromFolder", New Object() {fileMasterIds, folderId}, Me.DeleteFilesFromFolderOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFilesFromFolderOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFilesFromFolderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFilesFromFolderCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFileFromFolderUnconditional", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFileFromFolderUnconditional(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.Invoke("DeleteFileFromFolderUnconditional", New Object() {fileMasterId, folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileFromFolderUnconditionalAsync(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.DeleteFileFromFolderUnconditionalAsync(fileMasterId, folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFileFromFolderUnconditionalAsync(ByVal fileMasterId As Long, ByVal folderId As Long, ByVal userState As Object)
            If (Me.DeleteFileFromFolderUnconditionalOperationCompleted Is Nothing) Then
                Me.DeleteFileFromFolderUnconditionalOperationCompleted = AddressOf Me.OnDeleteFileFromFolderUnconditionalOperationCompleted
            End If
            Me.InvokeAsync("DeleteFileFromFolderUnconditional", New Object() {fileMasterId, folderId}, Me.DeleteFileFromFolderUnconditionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFileFromFolderUnconditionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFileFromFolderUnconditionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFileFromFolderUnconditionalCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteFilesFromFolderUnconditional", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteFilesFromFolderUnconditional(ByVal fileMasterIds() As Long, ByVal folderId As Long)
            Me.Invoke("DeleteFilesFromFolderUnconditional", New Object() {fileMasterIds, folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFilesFromFolderUnconditionalAsync(ByVal fileMasterIds() As Long, ByVal folderId As Long)
            Me.DeleteFilesFromFolderUnconditionalAsync(fileMasterIds, folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFilesFromFolderUnconditionalAsync(ByVal fileMasterIds() As Long, ByVal folderId As Long, ByVal userState As Object)
            If (Me.DeleteFilesFromFolderUnconditionalOperationCompleted Is Nothing) Then
                Me.DeleteFilesFromFolderUnconditionalOperationCompleted = AddressOf Me.OnDeleteFilesFromFolderUnconditionalOperationCompleted
            End If
            Me.InvokeAsync("DeleteFilesFromFolderUnconditional", New Object() {fileMasterIds, folderId}, Me.DeleteFilesFromFolderUnconditionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFilesFromFolderUnconditionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFilesFromFolderUnconditionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFilesFromFolderUnconditionalCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileDeleteRestrictionsByMasterId"& _ 
            "", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileDeleteRestrictionsByMasterId(ByVal fileMasterId As Long, ByVal folderId As Long) As FileDelRestric()
            Dim results() As Object = Me.Invoke("GetFileDeleteRestrictionsByMasterId", New Object() {fileMasterId, folderId})
            Return CType(results(0),FileDelRestric())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileDeleteRestrictionsByMasterIdAsync(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.GetFileDeleteRestrictionsByMasterIdAsync(fileMasterId, folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileDeleteRestrictionsByMasterIdAsync(ByVal fileMasterId As Long, ByVal folderId As Long, ByVal userState As Object)
            If (Me.GetFileDeleteRestrictionsByMasterIdOperationCompleted Is Nothing) Then
                Me.GetFileDeleteRestrictionsByMasterIdOperationCompleted = AddressOf Me.OnGetFileDeleteRestrictionsByMasterIdOperationCompleted
            End If
            Me.InvokeAsync("GetFileDeleteRestrictionsByMasterId", New Object() {fileMasterId, folderId}, Me.GetFileDeleteRestrictionsByMasterIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileDeleteRestrictionsByMasterIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileDeleteRestrictionsByMasterIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileDeleteRestrictionsByMasterIdCompleted(Me, New GetFileDeleteRestrictionsByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileDeleteRestrictionsByMasterId"& _ 
            "s", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileDeleteRestrictionsByMasterIds(ByVal fileMasterIds() As Long, ByVal folderIds() As Long) As FileDelRestricArray()
            Dim results() As Object = Me.Invoke("GetFileDeleteRestrictionsByMasterIds", New Object() {fileMasterIds, folderIds})
            Return CType(results(0),FileDelRestricArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileDeleteRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal folderIds() As Long)
            Me.GetFileDeleteRestrictionsByMasterIdsAsync(fileMasterIds, folderIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileDeleteRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal folderIds() As Long, ByVal userState As Object)
            If (Me.GetFileDeleteRestrictionsByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetFileDeleteRestrictionsByMasterIdsOperationCompleted = AddressOf Me.OnGetFileDeleteRestrictionsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFileDeleteRestrictionsByMasterIds", New Object() {fileMasterIds, folderIds}, Me.GetFileDeleteRestrictionsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileDeleteRestrictionsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileDeleteRestrictionsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileDeleteRestrictionsByMasterIdsCompleted(Me, New GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/ShareFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ShareFile(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.Invoke("ShareFile", New Object() {fileMasterId, folderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ShareFileAsync(ByVal fileMasterId As Long, ByVal folderId As Long)
            Me.ShareFileAsync(fileMasterId, folderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ShareFileAsync(ByVal fileMasterId As Long, ByVal folderId As Long, ByVal userState As Object)
            If (Me.ShareFileOperationCompleted Is Nothing) Then
                Me.ShareFileOperationCompleted = AddressOf Me.OnShareFileOperationCompleted
            End If
            Me.InvokeAsync("ShareFile", New Object() {fileMasterId, folderId}, Me.ShareFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnShareFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.ShareFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ShareFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/MoveFile", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub MoveFile(ByVal fileMasterId As Long, ByVal srcFolderId As Long, ByVal dstFolderId As Long)
            Me.Invoke("MoveFile", New Object() {fileMasterId, srcFolderId, dstFolderId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveFileAsync(ByVal fileMasterId As Long, ByVal srcFolderId As Long, ByVal dstFolderId As Long)
            Me.MoveFileAsync(fileMasterId, srcFolderId, dstFolderId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MoveFileAsync(ByVal fileMasterId As Long, ByVal srcFolderId As Long, ByVal dstFolderId As Long, ByVal userState As Object)
            If (Me.MoveFileOperationCompleted Is Nothing) Then
                Me.MoveFileOperationCompleted = AddressOf Me.OnMoveFileOperationCompleted
            End If
            Me.InvokeAsync("MoveFile", New Object() {fileMasterId, srcFolderId, dstFolderId}, Me.MoveFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnMoveFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.MoveFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MoveFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileAssociationRestrictionsById", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileAssociationRestrictionsById(ByVal fileId As Long, ByVal dependFileIds() As Long, ByVal attachFileIds() As Long) As FileAssocRestric()
            Dim results() As Object = Me.Invoke("GetFileAssociationRestrictionsById", New Object() {fileId, dependFileIds, attachFileIds})
            Return CType(results(0),FileAssocRestric())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileAssociationRestrictionsByIdAsync(ByVal fileId As Long, ByVal dependFileIds() As Long, ByVal attachFileIds() As Long)
            Me.GetFileAssociationRestrictionsByIdAsync(fileId, dependFileIds, attachFileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileAssociationRestrictionsByIdAsync(ByVal fileId As Long, ByVal dependFileIds() As Long, ByVal attachFileIds() As Long, ByVal userState As Object)
            If (Me.GetFileAssociationRestrictionsByIdOperationCompleted Is Nothing) Then
                Me.GetFileAssociationRestrictionsByIdOperationCompleted = AddressOf Me.OnGetFileAssociationRestrictionsByIdOperationCompleted
            End If
            Me.InvokeAsync("GetFileAssociationRestrictionsById", New Object() {fileId, dependFileIds, attachFileIds}, Me.GetFileAssociationRestrictionsByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileAssociationRestrictionsByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileAssociationRestrictionsByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileAssociationRestrictionsByIdCompleted(Me, New GetFileAssociationRestrictionsByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileRenameRestrictionsByMasterId"& _ 
            "", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileRenameRestrictionsByMasterId(ByVal fileMasterId As Long, ByVal newFileName As String) As FileRenameRestric()
            Dim results() As Object = Me.Invoke("GetFileRenameRestrictionsByMasterId", New Object() {fileMasterId, newFileName})
            Return CType(results(0),FileRenameRestric())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileRenameRestrictionsByMasterIdAsync(ByVal fileMasterId As Long, ByVal newFileName As String)
            Me.GetFileRenameRestrictionsByMasterIdAsync(fileMasterId, newFileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileRenameRestrictionsByMasterIdAsync(ByVal fileMasterId As Long, ByVal newFileName As String, ByVal userState As Object)
            If (Me.GetFileRenameRestrictionsByMasterIdOperationCompleted Is Nothing) Then
                Me.GetFileRenameRestrictionsByMasterIdOperationCompleted = AddressOf Me.OnGetFileRenameRestrictionsByMasterIdOperationCompleted
            End If
            Me.InvokeAsync("GetFileRenameRestrictionsByMasterId", New Object() {fileMasterId, newFileName}, Me.GetFileRenameRestrictionsByMasterIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileRenameRestrictionsByMasterIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileRenameRestrictionsByMasterIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileRenameRestrictionsByMasterIdCompleted(Me, New GetFileRenameRestrictionsByMasterIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetFileRenameRestrictionsByMasterId"& _ 
            "s", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFileRenameRestrictionsByMasterIds(ByVal fileMasterIds() As Long, ByVal newFileNames() As String) As FileRenameRestricArray()
            Dim results() As Object = Me.Invoke("GetFileRenameRestrictionsByMasterIds", New Object() {fileMasterIds, newFileNames})
            Return CType(results(0),FileRenameRestricArray())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFileRenameRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal newFileNames() As String)
            Me.GetFileRenameRestrictionsByMasterIdsAsync(fileMasterIds, newFileNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFileRenameRestrictionsByMasterIdsAsync(ByVal fileMasterIds() As Long, ByVal newFileNames() As String, ByVal userState As Object)
            If (Me.GetFileRenameRestrictionsByMasterIdsOperationCompleted Is Nothing) Then
                Me.GetFileRenameRestrictionsByMasterIdsOperationCompleted = AddressOf Me.OnGetFileRenameRestrictionsByMasterIdsOperationCompleted
            End If
            Me.InvokeAsync("GetFileRenameRestrictionsByMasterIds", New Object() {fileMasterIds, newFileNames}, Me.GetFileRenameRestrictionsByMasterIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFileRenameRestrictionsByMasterIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFileRenameRestrictionsByMasterIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFileRenameRestrictionsByMasterIdsCompleted(Me, New GetFileRenameRestrictionsByMasterIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFilesBySearchConditions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFilesBySearchConditions(ByVal conditions() As SrchCond, ByVal sortConditions() As SrchSort, ByVal folderIds() As Long, ByVal recurseFolders As Boolean, ByVal latestOnly As Boolean, ByRef bookmark As String, ByRef searchstatus As SrchStatus) As File()
            Dim results() As Object = Me.Invoke("FindFilesBySearchConditions", New Object() {conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark})
            bookmark = CType(results(1),String)
            searchstatus = CType(results(2),SrchStatus)
            Return CType(results(0),File())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFilesBySearchConditionsAsync(ByVal conditions() As SrchCond, ByVal sortConditions() As SrchSort, ByVal folderIds() As Long, ByVal recurseFolders As Boolean, ByVal latestOnly As Boolean, ByVal bookmark As String)
            Me.FindFilesBySearchConditionsAsync(conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFilesBySearchConditionsAsync(ByVal conditions() As SrchCond, ByVal sortConditions() As SrchSort, ByVal folderIds() As Long, ByVal recurseFolders As Boolean, ByVal latestOnly As Boolean, ByVal bookmark As String, ByVal userState As Object)
            If (Me.FindFilesBySearchConditionsOperationCompleted Is Nothing) Then
                Me.FindFilesBySearchConditionsOperationCompleted = AddressOf Me.OnFindFilesBySearchConditionsOperationCompleted
            End If
            Me.InvokeAsync("FindFilesBySearchConditions", New Object() {conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark}, Me.FindFilesBySearchConditionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFilesBySearchConditionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFilesBySearchConditionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFilesBySearchConditionsCompleted(Me, New FindFilesBySearchConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetBOMByFileId", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBOMByFileId(ByVal fileId As Long) As BOM
            Dim results() As Object = Me.Invoke("GetBOMByFileId", New Object() {fileId})
            Return CType(results(0),BOM)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBOMByFileIdAsync(ByVal fileId As Long)
            Me.GetBOMByFileIdAsync(fileId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBOMByFileIdAsync(ByVal fileId As Long, ByVal userState As Object)
            If (Me.GetBOMByFileIdOperationCompleted Is Nothing) Then
                Me.GetBOMByFileIdOperationCompleted = AddressOf Me.OnGetBOMByFileIdOperationCompleted
            End If
            Me.InvokeAsync("GetBOMByFileId", New Object() {fileId}, Me.GetBOMByFileIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBOMByFileIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBOMByFileIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBOMByFileIdCompleted(Me, New GetBOMByFileIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetBOMByFileIds", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBOMByFileIds(ByVal fileIds() As Long) As BOM()
            Dim results() As Object = Me.Invoke("GetBOMByFileIds", New Object() {fileIds})
            Return CType(results(0),BOM())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBOMByFileIdsAsync(ByVal fileIds() As Long)
            Me.GetBOMByFileIdsAsync(fileIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBOMByFileIdsAsync(ByVal fileIds() As Long, ByVal userState As Object)
            If (Me.GetBOMByFileIdsOperationCompleted Is Nothing) Then
                Me.GetBOMByFileIdsOperationCompleted = AddressOf Me.OnGetBOMByFileIdsOperationCompleted
            End If
            Me.InvokeAsync("GetBOMByFileIds", New Object() {fileIds}, Me.GetBOMByFileIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBOMByFileIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBOMByFileIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBOMByFileIdsCompleted(Me, New GetBOMByFileIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetAllPropertyDefinitions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllPropertyDefinitions() As PropDef()
            Dim results() As Object = Me.Invoke("GetAllPropertyDefinitions", New Object(-1) {})
            Return CType(results(0),PropDef())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllPropertyDefinitionsAsync()
            Me.GetAllPropertyDefinitionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllPropertyDefinitionsAsync(ByVal userState As Object)
            If (Me.GetAllPropertyDefinitionsOperationCompleted Is Nothing) Then
                Me.GetAllPropertyDefinitionsOperationCompleted = AddressOf Me.OnGetAllPropertyDefinitionsOperationCompleted
            End If
            Me.InvokeAsync("GetAllPropertyDefinitions", New Object(-1) {}, Me.GetAllPropertyDefinitionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllPropertyDefinitionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllPropertyDefinitionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllPropertyDefinitionsCompleted(Me, New GetAllPropertyDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindPropertyDefinitionsByPropertySe"& _ 
            "tIdsPropIdsAndDataTypes", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes(ByVal propertySetIds() As String, ByVal propIds() As String, ByVal types() As String) As PropDef()
            Dim results() As Object = Me.Invoke("FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes", New Object() {propertySetIds, propIds, types})
            Return CType(results(0),PropDef())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesAsync(ByVal propertySetIds() As String, ByVal propIds() As String, ByVal types() As String)
            Me.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesAsync(propertySetIds, propIds, types, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesAsync(ByVal propertySetIds() As String, ByVal propIds() As String, ByVal types() As String, ByVal userState As Object)
            If (Me.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted Is Nothing) Then
                Me.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted = AddressOf Me.OnFindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted
            End If
            Me.InvokeAsync("FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypes", New Object() {propertySetIds, propIds, types}, Me.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompleted(Me, New FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetPropertyDefinitionDisplayName", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetPropertyDefinitionDisplayName(ByVal propertyDefinitionId As Long, ByVal displayName As String) As PropDef
            Dim results() As Object = Me.Invoke("SetPropertyDefinitionDisplayName", New Object() {propertyDefinitionId, displayName})
            Return CType(results(0),PropDef)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPropertyDefinitionDisplayNameAsync(ByVal propertyDefinitionId As Long, ByVal displayName As String)
            Me.SetPropertyDefinitionDisplayNameAsync(propertyDefinitionId, displayName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPropertyDefinitionDisplayNameAsync(ByVal propertyDefinitionId As Long, ByVal displayName As String, ByVal userState As Object)
            If (Me.SetPropertyDefinitionDisplayNameOperationCompleted Is Nothing) Then
                Me.SetPropertyDefinitionDisplayNameOperationCompleted = AddressOf Me.OnSetPropertyDefinitionDisplayNameOperationCompleted
            End If
            Me.InvokeAsync("SetPropertyDefinitionDisplayName", New Object() {propertyDefinitionId, displayName}, Me.SetPropertyDefinitionDisplayNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPropertyDefinitionDisplayNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPropertyDefinitionDisplayNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPropertyDefinitionDisplayNameCompleted(Me, New SetPropertyDefinitionDisplayNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/SetPropertyDefinitionsDisplayNames", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetPropertyDefinitionsDisplayNames(ByVal propertyDefinitionIds() As Long, ByVal displayNames() As String) As PropDef()
            Dim results() As Object = Me.Invoke("SetPropertyDefinitionsDisplayNames", New Object() {propertyDefinitionIds, displayNames})
            Return CType(results(0),PropDef())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPropertyDefinitionsDisplayNamesAsync(ByVal propertyDefinitionIds() As Long, ByVal displayNames() As String)
            Me.SetPropertyDefinitionsDisplayNamesAsync(propertyDefinitionIds, displayNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPropertyDefinitionsDisplayNamesAsync(ByVal propertyDefinitionIds() As Long, ByVal displayNames() As String, ByVal userState As Object)
            If (Me.SetPropertyDefinitionsDisplayNamesOperationCompleted Is Nothing) Then
                Me.SetPropertyDefinitionsDisplayNamesOperationCompleted = AddressOf Me.OnSetPropertyDefinitionsDisplayNamesOperationCompleted
            End If
            Me.InvokeAsync("SetPropertyDefinitionsDisplayNames", New Object() {propertyDefinitionIds, displayNames}, Me.SetPropertyDefinitionsDisplayNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPropertyDefinitionsDisplayNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPropertyDefinitionsDisplayNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPropertyDefinitionsDisplayNamesCompleted(Me, New SetPropertyDefinitionsDisplayNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetProperties", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProperties(ByVal fileIds() As Long, ByVal propertyDefinitionIds() As Long) As PropInst()
            Dim results() As Object = Me.Invoke("GetProperties", New Object() {fileIds, propertyDefinitionIds})
            Return CType(results(0),PropInst())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPropertiesAsync(ByVal fileIds() As Long, ByVal propertyDefinitionIds() As Long)
            Me.GetPropertiesAsync(fileIds, propertyDefinitionIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPropertiesAsync(ByVal fileIds() As Long, ByVal propertyDefinitionIds() As Long, ByVal userState As Object)
            If (Me.GetPropertiesOperationCompleted Is Nothing) Then
                Me.GetPropertiesOperationCompleted = AddressOf Me.OnGetPropertiesOperationCompleted
            End If
            Me.InvokeAsync("GetProperties", New Object() {fileIds, propertyDefinitionIds}, Me.GetPropertiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPropertiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPropertiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPropertiesCompleted(Me, New GetPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindFileFoldersBySearchConditions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindFileFoldersBySearchConditions(ByVal conditions() As SrchCond, ByVal sortConditions() As SrchSort, ByVal folderIds() As Long, ByVal recurseFolders As Boolean, ByVal latestOnly As Boolean, ByRef bookmark As String, ByRef searchstatus As SrchStatus) As FileFolder()
            Dim results() As Object = Me.Invoke("FindFileFoldersBySearchConditions", New Object() {conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark})
            bookmark = CType(results(1),String)
            searchstatus = CType(results(2),SrchStatus)
            Return CType(results(0),FileFolder())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindFileFoldersBySearchConditionsAsync(ByVal conditions() As SrchCond, ByVal sortConditions() As SrchSort, ByVal folderIds() As Long, ByVal recurseFolders As Boolean, ByVal latestOnly As Boolean, ByVal bookmark As String)
            Me.FindFileFoldersBySearchConditionsAsync(conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindFileFoldersBySearchConditionsAsync(ByVal conditions() As SrchCond, ByVal sortConditions() As SrchSort, ByVal folderIds() As Long, ByVal recurseFolders As Boolean, ByVal latestOnly As Boolean, ByVal bookmark As String, ByVal userState As Object)
            If (Me.FindFileFoldersBySearchConditionsOperationCompleted Is Nothing) Then
                Me.FindFileFoldersBySearchConditionsOperationCompleted = AddressOf Me.OnFindFileFoldersBySearchConditionsOperationCompleted
            End If
            Me.InvokeAsync("FindFileFoldersBySearchConditions", New Object() {conditions, sortConditions, folderIds, recurseFolders, latestOnly, bookmark}, Me.FindFileFoldersBySearchConditionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindFileFoldersBySearchConditionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindFileFoldersBySearchConditionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindFileFoldersBySearchConditionsCompleted(Me, New FindFileFoldersBySearchConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetAllPropertyGroups", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllPropertyGroups() As PropGrp()
            Dim results() As Object = Me.Invoke("GetAllPropertyGroups", New Object(-1) {})
            Return CType(results(0),PropGrp())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllPropertyGroupsAsync()
            Me.GetAllPropertyGroupsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllPropertyGroupsAsync(ByVal userState As Object)
            If (Me.GetAllPropertyGroupsOperationCompleted Is Nothing) Then
                Me.GetAllPropertyGroupsOperationCompleted = AddressOf Me.OnGetAllPropertyGroupsOperationCompleted
            End If
            Me.InvokeAsync("GetAllPropertyGroups", New Object(-1) {}, Me.GetAllPropertyGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllPropertyGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllPropertyGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllPropertyGroupsCompleted(Me, New GetAllPropertyGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddPropertyGroup", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPropertyGroup(ByVal displayName As String, ByVal documentColumnName As String, ByVal state As Integer, ByVal propertyDefIds() As Long) As PropGrp
            Dim results() As Object = Me.Invoke("AddPropertyGroup", New Object() {displayName, documentColumnName, state, propertyDefIds})
            Return CType(results(0),PropGrp)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPropertyGroupAsync(ByVal displayName As String, ByVal documentColumnName As String, ByVal state As Integer, ByVal propertyDefIds() As Long)
            Me.AddPropertyGroupAsync(displayName, documentColumnName, state, propertyDefIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPropertyGroupAsync(ByVal displayName As String, ByVal documentColumnName As String, ByVal state As Integer, ByVal propertyDefIds() As Long, ByVal userState As Object)
            If (Me.AddPropertyGroupOperationCompleted Is Nothing) Then
                Me.AddPropertyGroupOperationCompleted = AddressOf Me.OnAddPropertyGroupOperationCompleted
            End If
            Me.InvokeAsync("AddPropertyGroup", New Object() {displayName, documentColumnName, state, propertyDefIds}, Me.AddPropertyGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPropertyGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPropertyGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPropertyGroupCompleted(Me, New AddPropertyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdatePropertyGroup", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdatePropertyGroup(ByVal propertyGroup As PropGrp)
            Me.Invoke("UpdatePropertyGroup", New Object() {propertyGroup})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePropertyGroupAsync(ByVal propertyGroup As PropGrp)
            Me.UpdatePropertyGroupAsync(propertyGroup, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePropertyGroupAsync(ByVal propertyGroup As PropGrp, ByVal userState As Object)
            If (Me.UpdatePropertyGroupOperationCompleted Is Nothing) Then
                Me.UpdatePropertyGroupOperationCompleted = AddressOf Me.OnUpdatePropertyGroupOperationCompleted
            End If
            Me.InvokeAsync("UpdatePropertyGroup", New Object() {propertyGroup}, Me.UpdatePropertyGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePropertyGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePropertyGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePropertyGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdatePropertyGroups", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdatePropertyGroups(ByVal propertyGroups() As PropGrp)
            Me.Invoke("UpdatePropertyGroups", New Object() {propertyGroups})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePropertyGroupsAsync(ByVal propertyGroups() As PropGrp)
            Me.UpdatePropertyGroupsAsync(propertyGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePropertyGroupsAsync(ByVal propertyGroups() As PropGrp, ByVal userState As Object)
            If (Me.UpdatePropertyGroupsOperationCompleted Is Nothing) Then
                Me.UpdatePropertyGroupsOperationCompleted = AddressOf Me.OnUpdatePropertyGroupsOperationCompleted
            End If
            Me.InvokeAsync("UpdatePropertyGroups", New Object() {propertyGroups}, Me.UpdatePropertyGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePropertyGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePropertyGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePropertyGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeletePropertyGroup", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeletePropertyGroup(ByVal propertyGroupId As Long)
            Me.Invoke("DeletePropertyGroup", New Object() {propertyGroupId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePropertyGroupAsync(ByVal propertyGroupId As Long)
            Me.DeletePropertyGroupAsync(propertyGroupId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePropertyGroupAsync(ByVal propertyGroupId As Long, ByVal userState As Object)
            If (Me.DeletePropertyGroupOperationCompleted Is Nothing) Then
                Me.DeletePropertyGroupOperationCompleted = AddressOf Me.OnDeletePropertyGroupOperationCompleted
            End If
            Me.InvokeAsync("DeletePropertyGroup", New Object() {propertyGroupId}, Me.DeletePropertyGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePropertyGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePropertyGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePropertyGroupCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeletePropertyGroups", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeletePropertyGroups(ByVal propertyGroupIds() As Long)
            Me.Invoke("DeletePropertyGroups", New Object() {propertyGroupIds})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePropertyGroupsAsync(ByVal propertyGroupIds() As Long)
            Me.DeletePropertyGroupsAsync(propertyGroupIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePropertyGroupsAsync(ByVal propertyGroupIds() As Long, ByVal userState As Object)
            If (Me.DeletePropertyGroupsOperationCompleted Is Nothing) Then
                Me.DeletePropertyGroupsOperationCompleted = AddressOf Me.OnDeletePropertyGroupsOperationCompleted
            End If
            Me.InvokeAsync("DeletePropertyGroups", New Object() {propertyGroupIds}, Me.DeletePropertyGroupsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePropertyGroupsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePropertyGroupsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePropertyGroupsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/VoidPropertyDefinitions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub VoidPropertyDefinitions(ByVal propertyDefinitions() As Long)
            Me.Invoke("VoidPropertyDefinitions", New Object() {propertyDefinitions})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VoidPropertyDefinitionsAsync(ByVal propertyDefinitions() As Long)
            Me.VoidPropertyDefinitionsAsync(propertyDefinitions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VoidPropertyDefinitionsAsync(ByVal propertyDefinitions() As Long, ByVal userState As Object)
            If (Me.VoidPropertyDefinitionsOperationCompleted Is Nothing) Then
                Me.VoidPropertyDefinitionsOperationCompleted = AddressOf Me.OnVoidPropertyDefinitionsOperationCompleted
            End If
            Me.InvokeAsync("VoidPropertyDefinitions", New Object() {propertyDefinitions}, Me.VoidPropertyDefinitionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnVoidPropertyDefinitionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.VoidPropertyDefinitionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VoidPropertyDefinitionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UnvoidPropertyDefinitions", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UnvoidPropertyDefinitions(ByVal propertyDefinitions() As Long)
            Me.Invoke("UnvoidPropertyDefinitions", New Object() {propertyDefinitions})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnvoidPropertyDefinitionsAsync(ByVal propertyDefinitions() As Long)
            Me.UnvoidPropertyDefinitionsAsync(propertyDefinitions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UnvoidPropertyDefinitionsAsync(ByVal propertyDefinitions() As Long, ByVal userState As Object)
            If (Me.UnvoidPropertyDefinitionsOperationCompleted Is Nothing) Then
                Me.UnvoidPropertyDefinitionsOperationCompleted = AddressOf Me.OnUnvoidPropertyDefinitionsOperationCompleted
            End If
            Me.InvokeAsync("UnvoidPropertyDefinitions", New Object() {propertyDefinitions}, Me.UnvoidPropertyDefinitionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUnvoidPropertyDefinitionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UnvoidPropertyDefinitionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UnvoidPropertyDefinitionsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DisablePropertyDefinitionsForBasicS"& _ 
            "earch", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DisablePropertyDefinitionsForBasicSearch(ByVal propertyDefinitions() As Long)
            Me.Invoke("DisablePropertyDefinitionsForBasicSearch", New Object() {propertyDefinitions})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisablePropertyDefinitionsForBasicSearchAsync(ByVal propertyDefinitions() As Long)
            Me.DisablePropertyDefinitionsForBasicSearchAsync(propertyDefinitions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DisablePropertyDefinitionsForBasicSearchAsync(ByVal propertyDefinitions() As Long, ByVal userState As Object)
            If (Me.DisablePropertyDefinitionsForBasicSearchOperationCompleted Is Nothing) Then
                Me.DisablePropertyDefinitionsForBasicSearchOperationCompleted = AddressOf Me.OnDisablePropertyDefinitionsForBasicSearchOperationCompleted
            End If
            Me.InvokeAsync("DisablePropertyDefinitionsForBasicSearch", New Object() {propertyDefinitions}, Me.DisablePropertyDefinitionsForBasicSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnDisablePropertyDefinitionsForBasicSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.DisablePropertyDefinitionsForBasicSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DisablePropertyDefinitionsForBasicSearchCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/EnablePropertyDefinitionsForBasicSe"& _ 
            "arch", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub EnablePropertyDefinitionsForBasicSearch(ByVal propertyDefinitions() As Long)
            Me.Invoke("EnablePropertyDefinitionsForBasicSearch", New Object() {propertyDefinitions})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnablePropertyDefinitionsForBasicSearchAsync(ByVal propertyDefinitions() As Long)
            Me.EnablePropertyDefinitionsForBasicSearchAsync(propertyDefinitions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EnablePropertyDefinitionsForBasicSearchAsync(ByVal propertyDefinitions() As Long, ByVal userState As Object)
            If (Me.EnablePropertyDefinitionsForBasicSearchOperationCompleted Is Nothing) Then
                Me.EnablePropertyDefinitionsForBasicSearchOperationCompleted = AddressOf Me.OnEnablePropertyDefinitionsForBasicSearchOperationCompleted
            End If
            Me.InvokeAsync("EnablePropertyDefinitionsForBasicSearch", New Object() {propertyDefinitions}, Me.EnablePropertyDefinitionsForBasicSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnEnablePropertyDefinitionsForBasicSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.EnablePropertyDefinitionsForBasicSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EnablePropertyDefinitionsForBasicSearchCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/GetAllLabels", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllLabels() As Label()
            Dim results() As Object = Me.Invoke("GetAllLabels", New Object(-1) {})
            Return CType(results(0),Label())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllLabelsAsync()
            Me.GetAllLabelsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllLabelsAsync(ByVal userState As Object)
            If (Me.GetAllLabelsOperationCompleted Is Nothing) Then
                Me.GetAllLabelsOperationCompleted = AddressOf Me.OnGetAllLabelsOperationCompleted
            End If
            Me.InvokeAsync("GetAllLabels", New Object(-1) {}, Me.GetAllLabelsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllLabelsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllLabelsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllLabelsCompleted(Me, New GetAllLabelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindLabelByName", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindLabelByName(ByVal labelName As String) As Label
            Dim results() As Object = Me.Invoke("FindLabelByName", New Object() {labelName})
            Return CType(results(0),Label)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindLabelByNameAsync(ByVal labelName As String)
            Me.FindLabelByNameAsync(labelName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindLabelByNameAsync(ByVal labelName As String, ByVal userState As Object)
            If (Me.FindLabelByNameOperationCompleted Is Nothing) Then
                Me.FindLabelByNameOperationCompleted = AddressOf Me.OnFindLabelByNameOperationCompleted
            End If
            Me.InvokeAsync("FindLabelByName", New Object() {labelName}, Me.FindLabelByNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindLabelByNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindLabelByNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindLabelByNameCompleted(Me, New FindLabelByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/FindLabelsByNames", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindLabelsByNames(ByVal labelNames() As String) As Label()
            Dim results() As Object = Me.Invoke("FindLabelsByNames", New Object() {labelNames})
            Return CType(results(0),Label())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindLabelsByNamesAsync(ByVal labelNames() As String)
            Me.FindLabelsByNamesAsync(labelNames, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindLabelsByNamesAsync(ByVal labelNames() As String, ByVal userState As Object)
            If (Me.FindLabelsByNamesOperationCompleted Is Nothing) Then
                Me.FindLabelsByNamesOperationCompleted = AddressOf Me.OnFindLabelsByNamesOperationCompleted
            End If
            Me.InvokeAsync("FindLabelsByNames", New Object() {labelNames}, Me.FindLabelsByNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindLabelsByNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindLabelsByNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindLabelsByNamesCompleted(Me, New FindLabelsByNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/AddLabel", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddLabel(ByVal folderId As Long, ByVal labelName As String, ByVal comment As String) As Label
            Dim results() As Object = Me.Invoke("AddLabel", New Object() {folderId, labelName, comment})
            Return CType(results(0),Label)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddLabelAsync(ByVal folderId As Long, ByVal labelName As String, ByVal comment As String)
            Me.AddLabelAsync(folderId, labelName, comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddLabelAsync(ByVal folderId As Long, ByVal labelName As String, ByVal comment As String, ByVal userState As Object)
            If (Me.AddLabelOperationCompleted Is Nothing) Then
                Me.AddLabelOperationCompleted = AddressOf Me.OnAddLabelOperationCompleted
            End If
            Me.InvokeAsync("AddLabel", New Object() {folderId, labelName, comment}, Me.AddLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddLabelCompleted(Me, New AddLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/DeleteLabel", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteLabel(ByVal labelId As Long)
            Me.Invoke("DeleteLabel", New Object() {labelId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteLabelAsync(ByVal labelId As Long)
            Me.DeleteLabelAsync(labelId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteLabelAsync(ByVal labelId As Long, ByVal userState As Object)
            If (Me.DeleteLabelOperationCompleted Is Nothing) Then
                Me.DeleteLabelOperationCompleted = AddressOf Me.OnDeleteLabelOperationCompleted
            End If
            Me.InvokeAsync("DeleteLabel", New Object() {labelId}, Me.DeleteLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteLabelCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecurityHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://AutodeskDM/Services/Document/1/26/2009/UpdateLabel", RequestNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", ResponseNamespace:="http://AutodeskDM/Services/Document/1/26/2009/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLabel(ByVal labelId As Long, ByVal labelName As String, ByVal comment As String) As Label
            Dim results() As Object = Me.Invoke("UpdateLabel", New Object() {labelId, labelName, comment})
            Return CType(results(0),Label)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLabelAsync(ByVal labelId As Long, ByVal labelName As String, ByVal comment As String)
            Me.UpdateLabelAsync(labelId, labelName, comment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLabelAsync(ByVal labelId As Long, ByVal labelName As String, ByVal comment As String, ByVal userState As Object)
            If (Me.UpdateLabelOperationCompleted Is Nothing) Then
                Me.UpdateLabelOperationCompleted = AddressOf Me.OnUpdateLabelOperationCompleted
            End If
            Me.InvokeAsync("UpdateLabel", New Object() {labelId, labelName, comment}, Me.UpdateLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLabelCompleted(Me, New UpdateLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/", IsNullable:=false)>  _
    Partial Public Class SecurityHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private ticketField As String
        
        Private userIdField As Long
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Ticket() As String
            Get
                Return Me.ticketField
            End Get
            Set
                Me.ticketField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserId() As Long
            Get
                Return Me.userIdField
            End Get
            Set
                Me.userIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class Label
        
        Private idField As Long
        
        Private nameField As String
        
        Private commField As String
        
        Private createDateField As Date
        
        Private createUserIdField As Long
        
        Private createUserNameField As String
        
        Private numFilesField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Comm() As String
            Get
                Return Me.commField
            End Get
            Set
                Me.commField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateDate() As Date
            Get
                Return Me.createDateField
            End Get
            Set
                Me.createDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateUserId() As Long
            Get
                Return Me.createUserIdField
            End Get
            Set
                Me.createUserIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateUserName() As String
            Get
                Return Me.createUserNameField
            End Get
            Set
                Me.createUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property NumFiles() As Integer
            Get
                Return Me.numFilesField
            End Get
            Set
                Me.numFilesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class PropGrp
        
        Private propDefArrayField() As PropDef
        
        Private idField As Long
        
        Private dispNameField As String
        
        Private sysNameField As String
        
        Private isActField As Boolean
        
        Private dataTypeField As String
        
        '''<remarks/>
        Public Property PropDefArray() As PropDef()
            Get
                Return Me.propDefArrayField
            End Get
            Set
                Me.propDefArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DispName() As String
            Get
                Return Me.dispNameField
            End Get
            Set
                Me.dispNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SysName() As String
            Get
                Return Me.sysNameField
            End Get
            Set
                Me.sysNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsAct() As Boolean
            Get
                Return Me.isActField
            End Get
            Set
                Me.isActField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DataType() As String
            Get
                Return Me.dataTypeField
            End Get
            Set
                Me.dataTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class PropDef
        
        Private dfltValField As Object
        
        Private valArrayField() As Object
        
        Private idField As Long
        
        Private setIdField As String
        
        Private propIdField As String
        
        Private typField As String
        
        Private dispNameField As String
        
        Private sysNameField As String
        
        Private isActField As Boolean
        
        Private monikerField As String
        
        Private srcField As PropDefSrc
        
        Private usageCountField As Integer
        
        '''<remarks/>
        Public Property DfltVal() As Object
            Get
                Return Me.dfltValField
            End Get
            Set
                Me.dfltValField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Val")>  _
        Public Property ValArray() As Object()
            Get
                Return Me.valArrayField
            End Get
            Set
                Me.valArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SetId() As String
            Get
                Return Me.setIdField
            End Get
            Set
                Me.setIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropId() As String
            Get
                Return Me.propIdField
            End Get
            Set
                Me.propIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Typ() As String
            Get
                Return Me.typField
            End Get
            Set
                Me.typField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DispName() As String
            Get
                Return Me.dispNameField
            End Get
            Set
                Me.dispNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SysName() As String
            Get
                Return Me.sysNameField
            End Get
            Set
                Me.sysNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsAct() As Boolean
            Get
                Return Me.isActField
            End Get
            Set
                Me.isActField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Moniker() As String
            Get
                Return Me.monikerField
            End Get
            Set
                Me.monikerField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Src() As PropDefSrc
            Get
                Return Me.srcField
            End Get
            Set
                Me.srcField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property UsageCount() As Integer
            Get
                Return Me.usageCountField
            End Get
            Set
                Me.usageCountField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum PropDefSrc
        
        '''<remarks/>
        System
        
        '''<remarks/>
        Derived
        
        '''<remarks/>
        Custom
        
        '''<remarks/>
        Group
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class PropInst
        
        Private valField As Object
        
        Private entityIdField As Long
        
        Private propDefIdField As Long
        
        Private valTypField As String
        
        '''<remarks/>
        Public Property Val() As Object
            Get
                Return Me.valField
            End Get
            Set
                Me.valField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property EntityId() As Long
            Get
                Return Me.entityIdField
            End Get
            Set
                Me.entityIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropDefId() As Long
            Get
                Return Me.propDefIdField
            End Get
            Set
                Me.propDefIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ValTyp() As String
            Get
                Return Me.valTypField
            End Get
            Set
                Me.valTypField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class SrchStatus
        
        Private totalHitsField As Integer
        
        Private indxStatusField As IndexingStatus
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property TotalHits() As Integer
            Get
                Return Me.totalHitsField
            End Get
            Set
                Me.totalHitsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IndxStatus() As IndexingStatus
            Get
                Return Me.indxStatusField
            End Get
            Set
                Me.indxStatusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum IndexingStatus
        
        '''<remarks/>
        IndexingComplete
        
        '''<remarks/>
        IndexingProperties
        
        '''<remarks/>
        IndexingContent
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class SrchSort
        
        Private propDefIdField As Long
        
        Private sortAscField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropDefId() As Long
            Get
                Return Me.propDefIdField
            End Get
            Set
                Me.propDefIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SortAsc() As Boolean
            Get
                Return Me.sortAscField
            End Get
            Set
                Me.sortAscField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class SrchCond
        
        Private propDefIdField As Long
        
        Private srchOperField As Long
        
        Private srchTxtField As String
        
        Private propTypField As PropertySearchType
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropDefId() As Long
            Get
                Return Me.propDefIdField
            End Get
            Set
                Me.propDefIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SrchOper() As Long
            Get
                Return Me.srchOperField
            End Get
            Set
                Me.srchOperField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SrchTxt() As String
            Get
                Return Me.srchTxtField
            End Get
            Set
                Me.srchTxtField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropTyp() As PropertySearchType
            Get
                Return Me.propTypField
            End Get
            Set
                Me.propTypField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum PropertySearchType
        
        '''<remarks/>
        SingleProperty
        
        '''<remarks/>
        AllProperties
        
        '''<remarks/>
        AllPropertiesAndContent
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileRenameRestricArray
        
        Private fileRenameRestrictionsField() As FileRenameRestric
        
        '''<remarks/>
        Public Property FileRenameRestrictions() As FileRenameRestric()
            Get
                Return Me.fileRenameRestrictionsField
            End Get
            Set
                Me.fileRenameRestrictionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileRenameRestric
        
        Private codeField As Integer
        
        Private fileIdField As Long
        
        Private infoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As Integer
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileId() As Long
            Get
                Return Me.fileIdField
            End Get
            Set
                Me.fileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Info() As String
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileAssocRestric
        
        Private codeField As Integer
        
        Private fileIdField As Long
        
        Private fileNameField As String
        
        Private infoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As Integer
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileId() As Long
            Get
                Return Me.fileIdField
            End Get
            Set
                Me.fileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Info() As String
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileDelRestricArray
        
        Private fileDeleteRestrictionsField() As FileDelRestric
        
        '''<remarks/>
        Public Property FileDeleteRestrictions() As FileDelRestric()
            Get
                Return Me.fileDeleteRestrictionsField
            End Get
            Set
                Me.fileDeleteRestrictionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileDelRestric
        
        Private codeField As Integer
        
        Private infoField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As Integer
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Info() As String
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMCompRefDesig
        
        Private idField As Long
        
        Private compIdField As Long
        
        Private refIdField As Long
        
        Private cntField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CompId() As Long
            Get
                Return Me.compIdField
            End Get
            Set
                Me.compIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property RefId() As Long
            Get
                Return Me.refIdField
            End Get
            Set
                Me.refIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Cnt() As Integer
            Get
                Return Me.cntField
            End Get
            Set
                Me.cntField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMRefDesigAttr
        
        Private idField As Long
        
        Private refIdField As Long
        
        Private propIdField As Long
        
        Private valField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property RefId() As Long
            Get
                Return Me.refIdField
            End Get
            Set
                Me.refIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropId() As Long
            Get
                Return Me.propIdField
            End Get
            Set
                Me.propIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Val() As String
            Get
                Return Me.valField
            End Get
            Set
                Me.valField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMRefDesig
        
        Private idField As Long
        
        Private tagField As String
        
        Private locField As String
        
        Private instField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Loc() As String
            Get
                Return Me.locField
            End Get
            Set
                Me.locField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Inst() As String
            Get
                Return Me.instField
            End Get
            Set
                Me.instField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMSchmOccur
        
        Private idField As Long
        
        Private schmIdField As Integer
        
        Private parOccurIdField As Long
        
        Private compIdField As Long
        
        Private orderField As Integer
        
        Private dtlIdField As String
        
        Private depthField As Integer
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SchmId() As Integer
            Get
                Return Me.schmIdField
            End Get
            Set
                Me.schmIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ParOccurId() As Long
            Get
                Return Me.parOccurIdField
            End Get
            Set
                Me.parOccurIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CompId() As Long
            Get
                Return Me.compIdField
            End Get
            Set
                Me.compIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Order() As Integer
            Get
                Return Me.orderField
            End Get
            Set
                Me.orderField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DtlId() As String
            Get
                Return Me.dtlIdField
            End Get
            Set
                Me.dtlIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Depth() As Integer
            Get
                Return Me.depthField
            End Get
            Set
                Me.depthField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMSchm
        
        Private idField As Long
        
        Private schmTypField As SchemeTypeEnum
        
        Private rootCompIdField As Long
        
        Private insepAsPrtField As Boolean
        
        Private insepPrmtsPrchField As Boolean
        
        Private prchAsPrtField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SchmTyp() As SchemeTypeEnum
            Get
                Return Me.schmTypField
            End Get
            Set
                Me.schmTypField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property RootCompId() As Long
            Get
                Return Me.rootCompIdField
            End Get
            Set
                Me.rootCompIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property InsepAsPrt() As Boolean
            Get
                Return Me.insepAsPrtField
            End Get
            Set
                Me.insepAsPrtField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property InsepPrmtsPrch() As Boolean
            Get
                Return Me.insepPrmtsPrchField
            End Get
            Set
                Me.insepPrmtsPrchField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PrchAsPrt() As Boolean
            Get
                Return Me.prchAsPrtField
            End Get
            Set
                Me.prchAsPrtField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum SchemeTypeEnum
        
        '''<remarks/>
        Structured
        
        '''<remarks/>
        PartsOnly
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMInst
        
        Private idField As Long
        
        Private parIdField As Long
        
        Private cldIdField As Long
        
        Private bOMStructOverdeField As BOMStructureOverrideEnum
        
        Private quantField As Integer
        
        Private quantOverdeField As Double
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ParId() As Long
            Get
                Return Me.parIdField
            End Get
            Set
                Me.parIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CldId() As Long
            Get
                Return Me.cldIdField
            End Get
            Set
                Me.cldIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property BOMStructOverde() As BOMStructureOverrideEnum
            Get
                Return Me.bOMStructOverdeField
            End Get
            Set
                Me.bOMStructOverdeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Quant() As Integer
            Get
                Return Me.quantField
            End Get
            Set
                Me.quantField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property QuantOverde() As Double
            Get
                Return Me.quantOverdeField
            End Get
            Set
                Me.quantOverdeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum BOMStructureOverrideEnum
        
        '''<remarks/>
        [Default]
        
        '''<remarks/>
        Normal
        
        '''<remarks/>
        Purchased
        
        '''<remarks/>
        Inseperable
        
        '''<remarks/>
        Phantom
        
        '''<remarks/>
        Reference
        
        '''<remarks/>
        DynamicPhantom
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMComp
        
        Private idField As Long
        
        Private uniqueIdField As String
        
        Private xRefTypField As XRefTypeEnum
        
        Private xRefIdField As Long
        
        Private nameField As String
        
        Private compTypField As ComponentTypeEnum
        
        Private baseUOMField As String
        
        Private baseQtyField As Double
        
        Private bOMStructField As BOMStructureEnum
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property UniqueId() As String
            Get
                Return Me.uniqueIdField
            End Get
            Set
                Me.uniqueIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property XRefTyp() As XRefTypeEnum
            Get
                Return Me.xRefTypField
            End Get
            Set
                Me.xRefTypField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property XRefId() As Long
            Get
                Return Me.xRefIdField
            End Get
            Set
                Me.xRefIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CompTyp() As ComponentTypeEnum
            Get
                Return Me.compTypField
            End Get
            Set
                Me.compTypField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property BaseUOM() As String
            Get
                Return Me.baseUOMField
            End Get
            Set
                Me.baseUOMField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property BaseQty() As Double
            Get
                Return Me.baseQtyField
            End Get
            Set
                Me.baseQtyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property BOMStruct() As BOMStructureEnum
            Get
                Return Me.bOMStructField
            End Get
            Set
                Me.bOMStructField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum XRefTypeEnum
        
        '''<remarks/>
        Internal
        
        '''<remarks/>
        External
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum ComponentTypeEnum
        
        '''<remarks/>
        Part
        
        '''<remarks/>
        [Assembly]
        
        '''<remarks/>
        Virtual
        
        '''<remarks/>
        Standard
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum BOMStructureEnum
        
        '''<remarks/>
        Normal
        
        '''<remarks/>
        Purchased
        
        '''<remarks/>
        Inseperable
        
        '''<remarks/>
        Phantom
        
        '''<remarks/>
        Reference
        
        '''<remarks/>
        DynamicPhantom
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOM
        
        Private compArrayField() As BOMComp
        
        Private instArrayField() As BOMInst
        
        Private propArrayField() As BOMProp
        
        Private compAttrArrayField() As BOMCompAttr
        
        Private schmArrayField() As BOMSchm
        
        Private schmOccArrayField() As BOMSchmOccur
        
        Private refDsgArrayField() As BOMRefDesig
        
        Private refDsgAttrArrayField() As BOMRefDesigAttr
        
        Private compRefDsgArrayField() As BOMCompRefDesig
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Comp")>  _
        Public Property CompArray() As BOMComp()
            Get
                Return Me.compArrayField
            End Get
            Set
                Me.compArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Inst")>  _
        Public Property InstArray() As BOMInst()
            Get
                Return Me.instArrayField
            End Get
            Set
                Me.instArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Prop")>  _
        Public Property PropArray() As BOMProp()
            Get
                Return Me.propArrayField
            End Get
            Set
                Me.propArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("CompAttr")>  _
        Public Property CompAttrArray() As BOMCompAttr()
            Get
                Return Me.compAttrArrayField
            End Get
            Set
                Me.compAttrArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Schm")>  _
        Public Property SchmArray() As BOMSchm()
            Get
                Return Me.schmArrayField
            End Get
            Set
                Me.schmArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("SchmOcc")>  _
        Public Property SchmOccArray() As BOMSchmOccur()
            Get
                Return Me.schmOccArrayField
            End Get
            Set
                Me.schmOccArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("RefDsg")>  _
        Public Property RefDsgArray() As BOMRefDesig()
            Get
                Return Me.refDsgArrayField
            End Get
            Set
                Me.refDsgArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("RefDsgAttr")>  _
        Public Property RefDsgAttrArray() As BOMRefDesigAttr()
            Get
                Return Me.refDsgAttrArrayField
            End Get
            Set
                Me.refDsgAttrArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("CompRefDsg")>  _
        Public Property CompRefDsgArray() As BOMCompRefDesig()
            Get
                Return Me.compRefDsgArrayField
            End Get
            Set
                Me.compRefDsgArrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMProp
        
        Private idField As Long
        
        Private propSetIdField As String
        
        Private propIdField As String
        
        Private nameField As String
        
        Private dispNameField As String
        
        Private typField As PropertyTypeEnum
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropSetId() As String
            Get
                Return Me.propSetIdField
            End Get
            Set
                Me.propSetIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropId() As String
            Get
                Return Me.propIdField
            End Get
            Set
                Me.propIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DispName() As String
            Get
                Return Me.dispNameField
            End Get
            Set
                Me.dispNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Typ() As PropertyTypeEnum
            Get
                Return Me.typField
            End Get
            Set
                Me.typField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum PropertyTypeEnum
        
        '''<remarks/>
        Number
        
        '''<remarks/>
        [Date]
        
        '''<remarks/>
        [Boolean]
        
        '''<remarks/>
        Text
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BOMCompAttr
        
        Private idField As Long
        
        Private compIdField As Long
        
        Private propIdField As Long
        
        Private valField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CompId() As Long
            Get
                Return Me.compIdField
            End Get
            Set
                Me.compIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PropId() As Long
            Get
                Return Me.propIdField
            End Get
            Set
                Me.propIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Val() As String
            Get
                Return Me.valField
            End Get
            Set
                Me.valField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileArray
        
        Private filesField() As File
        
        '''<remarks/>
        Public Property Files() As File()
            Get
                Return Me.filesField
            End Get
            Set
                Me.filesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class File
        
        Private fileRevField As FileRev
        
        Private fileLfCycField As FileLfCyc
        
        Private catField As FileCat
        
        Private idField As Long
        
        Private nameField As String
        
        Private masterIdField As Long
        
        Private verNumField As Integer
        
        Private maxCkInVerNumField As Integer
        
        Private ckInDateField As Date
        
        Private commField As String
        
        Private createDateField As Date
        
        Private createUserIdField As Long
        
        Private cksumField As Integer
        
        Private fileSizeField As Long
        
        Private modDateField As Date
        
        Private createUserNameField As String
        
        Private checkedOutField As Boolean
        
        Private ckOutFolderIdField As Long
        
        Private ckOutSpecField As String
        
        Private ckOutMachField As String
        
        Private ckOutUserIdField As Long
        
        Private fileClassField As FileClassification
        
        Private lockedField As Boolean
        
        Private hiddenField As Boolean
        
        Private cloakedField As Boolean
        
        Private fileStatusField As FileStatus
        
        Private isOnSiteField As Boolean
        
        Private origFileIdField As Long
        
        Private designVisAttmtStatusField As DesignVisualizationAttachmentStatus
        
        '''<remarks/>
        Public Property FileRev() As FileRev
            Get
                Return Me.fileRevField
            End Get
            Set
                Me.fileRevField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileLfCyc() As FileLfCyc
            Get
                Return Me.fileLfCycField
            End Get
            Set
                Me.fileLfCycField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cat() As FileCat
            Get
                Return Me.catField
            End Get
            Set
                Me.catField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MasterId() As Long
            Get
                Return Me.masterIdField
            End Get
            Set
                Me.masterIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property VerNum() As Integer
            Get
                Return Me.verNumField
            End Get
            Set
                Me.verNumField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MaxCkInVerNum() As Integer
            Get
                Return Me.maxCkInVerNumField
            End Get
            Set
                Me.maxCkInVerNumField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CkInDate() As Date
            Get
                Return Me.ckInDateField
            End Get
            Set
                Me.ckInDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Comm() As String
            Get
                Return Me.commField
            End Get
            Set
                Me.commField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateDate() As Date
            Get
                Return Me.createDateField
            End Get
            Set
                Me.createDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateUserId() As Long
            Get
                Return Me.createUserIdField
            End Get
            Set
                Me.createUserIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Cksum() As Integer
            Get
                Return Me.cksumField
            End Get
            Set
                Me.cksumField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileSize() As Long
            Get
                Return Me.fileSizeField
            End Get
            Set
                Me.fileSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ModDate() As Date
            Get
                Return Me.modDateField
            End Get
            Set
                Me.modDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateUserName() As String
            Get
                Return Me.createUserNameField
            End Get
            Set
                Me.createUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CheckedOut() As Boolean
            Get
                Return Me.checkedOutField
            End Get
            Set
                Me.checkedOutField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CkOutFolderId() As Long
            Get
                Return Me.ckOutFolderIdField
            End Get
            Set
                Me.ckOutFolderIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CkOutSpec() As String
            Get
                Return Me.ckOutSpecField
            End Get
            Set
                Me.ckOutSpecField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CkOutMach() As String
            Get
                Return Me.ckOutMachField
            End Get
            Set
                Me.ckOutMachField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CkOutUserId() As Long
            Get
                Return Me.ckOutUserIdField
            End Get
            Set
                Me.ckOutUserIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileClass() As FileClassification
            Get
                Return Me.fileClassField
            End Get
            Set
                Me.fileClassField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Locked() As Boolean
            Get
                Return Me.lockedField
            End Get
            Set
                Me.lockedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Hidden() As Boolean
            Get
                Return Me.hiddenField
            End Get
            Set
                Me.hiddenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Cloaked() As Boolean
            Get
                Return Me.cloakedField
            End Get
            Set
                Me.cloakedField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileStatus() As FileStatus
            Get
                Return Me.fileStatusField
            End Get
            Set
                Me.fileStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsOnSite() As Boolean
            Get
                Return Me.isOnSiteField
            End Get
            Set
                Me.isOnSiteField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property OrigFileId() As Long
            Get
                Return Me.origFileIdField
            End Get
            Set
                Me.origFileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DesignVisAttmtStatus() As DesignVisualizationAttachmentStatus
            Get
                Return Me.designVisAttmtStatusField
            End Get
            Set
                Me.designVisAttmtStatusField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileRev
        
        Private revIdField As Long
        
        Private labelField As String
        
        Private maxConsumeFileIdField As Long
        
        Private maxFileIdField As Long
        
        Private revDefIdField As Long
        
        Private maxRevIdField As Long
        
        Private orderField As Single
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property RevId() As Long
            Get
                Return Me.revIdField
            End Get
            Set
                Me.revIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MaxConsumeFileId() As Long
            Get
                Return Me.maxConsumeFileIdField
            End Get
            Set
                Me.maxConsumeFileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MaxFileId() As Long
            Get
                Return Me.maxFileIdField
            End Get
            Set
                Me.maxFileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property RevDefId() As Long
            Get
                Return Me.revDefIdField
            End Get
            Set
                Me.revDefIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MaxRevId() As Long
            Get
                Return Me.maxRevIdField
            End Get
            Set
                Me.maxRevIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Order() As Single
            Get
                Return Me.orderField
            End Get
            Set
                Me.orderField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileLfCyc
        
        Private lfCycStateIdField As Long
        
        Private lfCycDefIdField As Long
        
        Private lfCycStateNameField As String
        
        Private consumeField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property LfCycStateId() As Long
            Get
                Return Me.lfCycStateIdField
            End Get
            Set
                Me.lfCycStateIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property LfCycDefId() As Long
            Get
                Return Me.lfCycDefIdField
            End Get
            Set
                Me.lfCycDefIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property LfCycStateName() As String
            Get
                Return Me.lfCycStateNameField
            End Get
            Set
                Me.lfCycStateNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Consume() As Boolean
            Get
                Return Me.consumeField
            End Get
            Set
                Me.consumeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileCat
        
        Private catIdField As Long
        
        Private catNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CatId() As Long
            Get
                Return Me.catIdField
            End Get
            Set
                Me.catIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CatName() As String
            Get
                Return Me.catNameField
            End Get
            Set
                Me.catNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum FileClassification
        
        '''<remarks/>
        None
        
        '''<remarks/>
        DesignVisualization
        
        '''<remarks/>
        DesignDocument
        
        '''<remarks/>
        ConfigurationMember
        
        '''<remarks/>
        ConfigurationFactory
        
        '''<remarks/>
        ElectricalProject
        
        '''<remarks/>
        DesignSubstitute
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum FileStatus
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        NeedsUpdating
        
        '''<remarks/>
        UpToDate
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum DesignVisualizationAttachmentStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Syncronized
        
        '''<remarks/>
        NotSyncronized
        
        '''<remarks/>
        UserVerified
        
        '''<remarks/>
        Legacy
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FolderDelRestricArray
        
        Private folderDeleteRestrictionsField() As FolderDelRestric
        
        '''<remarks/>
        Public Property FolderDeleteRestrictions() As FolderDelRestric()
            Get
                Return Me.folderDeleteRestrictionsField
            End Get
            Set
                Me.folderDeleteRestrictionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FolderDelRestric
        
        Private codeField As Integer
        
        Private infoField As String
        
        Private info2Field As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As Integer
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Info() As String
            Get
                Return Me.infoField
            End Get
            Set
                Me.infoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Info2() As String
            Get
                Return Me.info2Field
            End Get
            Set
                Me.info2Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FolderArray
        
        Private foldersField() As Folder
        
        '''<remarks/>
        Public Property Folders() As Folder()
            Get
                Return Me.foldersField
            End Get
            Set
                Me.foldersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class Folder
        
        Private idField As Long
        
        Private nameField As String
        
        Private fullNameField As String
        
        Private parIdField As Long
        
        Private createDateField As Date
        
        Private createUserIdField As Long
        
        Private isActField As Boolean
        
        Private isLibField As Boolean
        
        Private createUserNameField As String
        
        Private numCldsField As Integer
        
        Private fullUncNameField As String
        
        Private cloakedField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FullName() As String
            Get
                Return Me.fullNameField
            End Get
            Set
                Me.fullNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ParId() As Long
            Get
                Return Me.parIdField
            End Get
            Set
                Me.parIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateDate() As Date
            Get
                Return Me.createDateField
            End Get
            Set
                Me.createDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateUserId() As Long
            Get
                Return Me.createUserIdField
            End Get
            Set
                Me.createUserIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsAct() As Boolean
            Get
                Return Me.isActField
            End Get
            Set
                Me.isActField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsLib() As Boolean
            Get
                Return Me.isLibField
            End Get
            Set
                Me.isLibField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CreateUserName() As String
            Get
                Return Me.createUserNameField
            End Get
            Set
                Me.createUserNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property NumClds() As Integer
            Get
                Return Me.numCldsField
            End Get
            Set
                Me.numCldsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FullUncName() As String
            Get
                Return Me.fullUncNameField
            End Get
            Set
                Me.fullUncNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Cloaked() As Boolean
            Get
                Return Me.cloakedField
            End Get
            Set
                Me.cloakedField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class CtntSrc
        
        Private propSetIdArrayField() As String
        
        Private idField As Long
        
        Private systemNameField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("PropSetId")>  _
        Public Property PropSetIdArray() As String()
            Get
                Return Me.propSetIdArrayField
            End Get
            Set
                Me.propSetIdArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SystemName() As String
            Get
                Return Me.systemNameField
            End Get
            Set
                Me.systemNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class NumSchm
        
        Private fieldArrayField() As NumSchmField
        
        Private nameField As String
        
        Private schmIDField As Long
        
        Private isActField As Boolean
        
        Private isInUseField As Boolean
        
        Private isDfltField As Boolean
        
        Private isSysField As Boolean
        
        Private toUpperField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("FieldArray")>  _
        Public Property FieldArray() As NumSchmField()
            Get
                Return Me.fieldArrayField
            End Get
            Set
                Me.fieldArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SchmID() As Long
            Get
                Return Me.schmIDField
            End Get
            Set
                Me.schmIDField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsAct() As Boolean
            Get
                Return Me.isActField
            End Get
            Set
                Me.isActField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsInUse() As Boolean
            Get
                Return Me.isInUseField
            End Get
            Set
                Me.isInUseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsDflt() As Boolean
            Get
                Return Me.isDfltField
            End Get
            Set
                Me.isDfltField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsSys() As Boolean
            Get
                Return Me.isSysField
            End Get
            Set
                Me.isSysField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ToUpper() As Boolean
            Get
                Return Me.toUpperField
            End Get
            Set
                Me.toUpperField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(AutogenField)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(FixedTxtField)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(FreeTxtField)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ComplexField)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(PredefListField)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(DelimField)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public MustInherit Class NumSchmField
        
        Private fieldTypField As FieldType
        
        Private nameField As String
        
        '''<remarks/>
        Public Property FieldTyp() As FieldType
            Get
                Return Me.fieldTypField
            End Get
            Set
                Me.fieldTypField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum FieldType
        
        '''<remarks/>
        FixedText
        
        '''<remarks/>
        FreeText
        
        '''<remarks/>
        Delimiter
        
        '''<remarks/>
        PredefinedList
        
        '''<remarks/>
        Autogenerated
        
        '''<remarks/>
        Complex
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class AutogenField
        Inherits NumSchmField
        
        Private lenField As Integer
        
        Private fromField As Integer
        
        Private toField As Integer
        
        Private stepSizeField As Integer
        
        Private zeroPaddingField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Len() As Integer
            Get
                Return Me.lenField
            End Get
            Set
                Me.lenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property From() As Integer
            Get
                Return Me.fromField
            End Get
            Set
                Me.fromField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property [To]() As Integer
            Get
                Return Me.toField
            End Get
            Set
                Me.toField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property StepSize() As Integer
            Get
                Return Me.stepSizeField
            End Get
            Set
                Me.stepSizeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ZeroPadding() As Boolean
            Get
                Return Me.zeroPaddingField
            End Get
            Set
                Me.zeroPaddingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FixedTxtField
        Inherits NumSchmField
        
        Private fixedTxtValField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FixedTxtVal() As String
            Get
                Return Me.fixedTxtValField
            End Get
            Set
                Me.fixedTxtValField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FreeTxtField
        Inherits NumSchmField
        
        Private minLenField As Integer
        
        Private maxLenField As Integer
        
        Private dfltValField As String
        
        Private freeTxtValField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MinLen() As Integer
            Get
                Return Me.minLenField
            End Get
            Set
                Me.minLenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MaxLen() As Integer
            Get
                Return Me.maxLenField
            End Get
            Set
                Me.maxLenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DfltVal() As String
            Get
                Return Me.dfltValField
            End Get
            Set
                Me.dfltValField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FreeTxtVal() As String
            Get
                Return Me.freeTxtValField
            End Get
            Set
                Me.freeTxtValField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class ComplexField
        Inherits NumSchmField
        
        Private lenField As Integer
        
        Private complexValField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Len() As Integer
            Get
                Return Me.lenField
            End Get
            Set
                Me.lenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property ComplexVal() As String
            Get
                Return Me.complexValField
            End Get
            Set
                Me.complexValField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class PredefListField
        Inherits NumSchmField
        
        Private codeArrayField() As CodeWord
        
        Private dfltValField As String
        
        Private predefListValField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("CodeArray")>  _
        Public Property CodeArray() As CodeWord()
            Get
                Return Me.codeArrayField
            End Get
            Set
                Me.codeArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DfltVal() As String
            Get
                Return Me.dfltValField
            End Get
            Set
                Me.dfltValField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property PredefListVal() As String
            Get
                Return Me.predefListValField
            End Get
            Set
                Me.predefListValField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class CodeWord
        
        Private codeField As String
        
        Private descrField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As String
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Descr() As String
            Get
                Return Me.descrField
            End Get
            Set
                Me.descrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class DelimField
        Inherits NumSchmField
        
        Private delimValField As Char
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property DelimVal() As Char
            Get
                Return Me.delimValField
            End Get
            Set
                Me.delimValField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class StringArray
        
        Private itemsField() As String
        
        '''<remarks/>
        Public Property Items() As String()
            Get
                Return Me.itemsField
            End Get
            Set
                Me.itemsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileNmngDescr
        
        Private schemeIdField As Long
        
        Private valField As String
        
        Private numField As Long
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property SchemeId() As Long
            Get
                Return Me.schemeIdField
            End Get
            Set
                Me.schemeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Val() As String
            Get
                Return Me.valField
            End Get
            Set
                Me.valField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Num() As Long
            Get
                Return Me.numField
            End Get
            Set
                Me.numField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileNmngSchm
        
        Private idField As Long
        
        Private nameField As String
        
        Private descrField As String
        
        Private prefixField As String
        
        Private suffixField As String
        
        Private startNumField As Long
        
        Private fieldLenField As Integer
        
        Private isDfltField As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Descr() As String
            Get
                Return Me.descrField
            End Get
            Set
                Me.descrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Prefix() As String
            Get
                Return Me.prefixField
            End Get
            Set
                Me.prefixField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Suffix() As String
            Get
                Return Me.suffixField
            End Get
            Set
                Me.suffixField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property StartNum() As Long
            Get
                Return Me.startNumField
            End Get
            Set
                Me.startNumField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FieldLen() As Integer
            Get
                Return Me.fieldLenField
            End Get
            Set
                Me.fieldLenField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property IsDflt() As Boolean
            Get
                Return Me.isDfltField
            End Get
            Set
                Me.isDfltField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class DocRestricArray
        
        Private restrictionsField() As DocRestric
        
        '''<remarks/>
        Public Property Restrictions() As DocRestric()
            Get
                Return Me.restrictionsField
            End Get
            Set
                Me.restrictionsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class DocRestric
        
        Private paramsField() As Object
        
        Private codeField As DocRestricCode
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Params")>  _
        Public Property Params() As Object()
            Get
                Return Me.paramsField
            End Get
            Set
                Me.paramsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As DocRestricCode
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum DocRestricCode
        
        '''<remarks/>
        FileDependantParents
        
        '''<remarks/>
        FileCheckedOut
        
        '''<remarks/>
        FileOldVersion
        
        '''<remarks/>
        FileLinkedToItem
        
        '''<remarks/>
        FileAttachedToItem
        
        '''<remarks/>
        FileParentSameName
        
        '''<remarks/>
        FolderIsRoot
        
        '''<remarks/>
        BadFolderId
        
        '''<remarks/>
        MoveFolderExists
        
        '''<remarks/>
        MoveFolderDescendentCheckedOut
        
        '''<remarks/>
        MoveFolderChildRootInvalid
        
        '''<remarks/>
        MoveFolderLibraryRelationshipInvalid
        
        '''<remarks/>
        MoveFolderConcurrent
        
        '''<remarks/>
        FileStatusTrackingDisabled
        
        '''<remarks/>
        FileStatusChildNotUpToDate
        
        '''<remarks/>
        MoveFolderDestinationIsDescendant
        
        '''<remarks/>
        MoveFolderDestinationIsSelf
        
        '''<remarks/>
        MoveFolderFolderFileNameCollision
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileDelStatus
        
        Private fileField As File
        
        Private codeField As Integer
        
        '''<remarks/>
        Public Property File() As File
            Get
                Return Me.fileField
            End Get
            Set
                Me.fileField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As Integer
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileDelRestricEx
        
        Private codeField As Integer
        
        Private masterIdField As Long
        
        Private fileIdField As Long
        
        Private verNumField As Integer
        
        Private paramField As String
        
        Private param2Field As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Code() As Integer
            Get
                Return Me.codeField
            End Get
            Set
                Me.codeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MasterId() As Long
            Get
                Return Me.masterIdField
            End Get
            Set
                Me.masterIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileId() As Long
            Get
                Return Me.fileIdField
            End Get
            Set
                Me.fileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property VerNum() As Integer
            Get
                Return Me.verNumField
            End Get
            Set
                Me.verNumField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Param() As String
            Get
                Return Me.paramField
            End Get
            Set
                Me.paramField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Param2() As String
            Get
                Return Me.param2Field
            End Get
            Set
                Me.param2Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class CompIdent
        
        Private idField As Long
        
        Private fileIdField As Long
        
        Private uniqueIdField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property FileId() As Long
            Get
                Return Me.fileIdField
            End Get
            Set
                Me.fileIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property UniqueId() As String
            Get
                Return Me.uniqueIdField
            End Get
            Set
                Me.uniqueIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class CompPropInfo
        
        Private compIdentArrayField() As CompIdent
        
        Private propArrayField() As BOMProp
        
        Private attrArrayField() As BOMCompAttr
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("CompIdentity")>  _
        Public Property CompIdentArray() As CompIdent()
            Get
                Return Me.compIdentArrayField
            End Get
            Set
                Me.compIdentArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Prop")>  _
        Public Property PropArray() As BOMProp()
            Get
                Return Me.propArrayField
            End Get
            Set
                Me.propArrayField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("Attr")>  _
        Public Property AttrArray() As BOMCompAttr()
            Get
                Return Me.attrArrayField
            End Get
            Set
                Me.attrArrayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FilePath
        
        Private fileField As File
        
        Private pathField As String
        
        '''<remarks/>
        Public Property File() As File
            Get
                Return Me.fileField
            End Get
            Set
                Me.fileField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set
                Me.pathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FilePathArray
        
        Private filePathsField() As FilePath
        
        '''<remarks/>
        Public Property FilePaths() As FilePath()
            Get
                Return Me.filePathsField
            End Get
            Set
                Me.filePathsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileAssoc
        
        Private parFileField As File
        
        Private cldFileField As File
        
        Private idField As Long
        
        Private typField As AssociationType
        
        Private sourceField As String
        
        Private correctRevField As Boolean
        
        '''<remarks/>
        Public Property ParFile() As File
            Get
                Return Me.parFileField
            End Get
            Set
                Me.parFileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CldFile() As File
            Get
                Return Me.cldFileField
            End Get
            Set
                Me.cldFileField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Id() As Long
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Typ() As AssociationType
            Get
                Return Me.typField
            End Get
            Set
                Me.typField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property Source() As String
            Get
                Return Me.sourceField
            End Get
            Set
                Me.sourceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property CorrectRev() As Boolean
            Get
                Return Me.correctRevField
            End Get
            Set
                Me.correctRevField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum AssociationType
        
        '''<remarks/>
        Dependency
        
        '''<remarks/>
        Attachment
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileAssocArray
        
        Private fileAssocsField() As FileAssoc
        
        '''<remarks/>
        Public Property FileAssocs() As FileAssoc()
            Get
                Return Me.fileAssocsField
            End Get
            Set
                Me.fileAssocsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class BlkThres
        
        Private warnThresField As UInteger
        
        Private maxThresField As UInteger
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property WarnThres() As UInteger
            Get
                Return Me.warnThresField
            End Get
            Set
                Me.warnThresField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAttributeAttribute()>  _
        Public Property MaxThres() As UInteger
            Get
                Return Me.maxThresField
            End Get
            Set
                Me.maxThresField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Partial Public Class FileFolder
        
        Private folderField As Folder
        
        Private fileField As File
        
        '''<remarks/>
        Public Property Folder() As Folder
            Get
                Return Me.folderField
            End Get
            Set
                Me.folderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property File() As File
            Get
                Return Me.fileField
            End Get
            Set
                Me.fileField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum BreakDesignVisualizationLinkCommandList
        
        '''<remarks/>
        CategoryChange = 1
        
        '''<remarks/>
        CopyDesign = 2
        
        '''<remarks/>
        Checkin = 4
        
        '''<remarks/>
        EditProperties = 8
        
        '''<remarks/>
        LifeCycleDefinitionChange = 16
        
        '''<remarks/>
        LifeCycleStateChange = 32
        
        '''<remarks/>
        ModifyAttachments = 64
        
        '''<remarks/>
        MoveFile = 128
        
        '''<remarks/>
        MoveFolder = 256
        
        '''<remarks/>
        RenameFile = 512
        
        '''<remarks/>
        RenameFolder = 1024
        
        '''<remarks/>
        Replace = 2048
        
        '''<remarks/>
        RevisionSchemeChange = 4096
        
        '''<remarks/>
        RevisionChange = 8192
        
        '''<remarks/>
        SyncronizeProperties = 16384
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum FileAssociationTypeEnum
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Dependency
        
        '''<remarks/>
        Attachment
        
        '''<remarks/>
        All
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum NumSchmType
        
        '''<remarks/>
        Activated
        
        '''<remarks/>
        Deactivated
        
        '''<remarks/>
        All
        
        '''<remarks/>
        SystemDefault
        
        '''<remarks/>
        ApplicationDefault
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum FileHistoryTypeOptions
        
        '''<remarks/>
        All
        
        '''<remarks/>
        Revision
        
        '''<remarks/>
        RevisionConsumable
        
        '''<remarks/>
        AllRevisionConsumable
        
        '''<remarks/>
        RevisionConsumableAndTip
        
        '''<remarks/>
        AllRevisionConsumableAndTip
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://AutodeskDM/Services/Document/1/26/2009/")>  _
    Public Enum CheckoutFileOptions
        
        '''<remarks/>
        Master
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileFoldersByLabelIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileFoldersByLabelIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileFoldersByLabelIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileFolder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileFolder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub MoveFolderCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderMoveRestrictionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderMoveRestrictionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderMoveRestrictionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocRestric()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocRestric())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderRenameRestrictionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderRenameRestrictionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderRenameRestrictionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocRestric()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocRestric())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetUniqueFileNameRequiredCompletedEventHandler(ByVal sender As Object, ByVal e As GetUniqueFileNameRequiredCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUniqueFileNameRequiredCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetUniqueFileNameRequiredCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetEnableDWFAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As GetEnableDWFAttachmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEnableDWFAttachmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetEnableDWFAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetDWFPublishFolderLocationCompletedEventHandler(ByVal sender As Object, ByVal e As GetDWFPublishFolderLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDWFPublishFolderLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetDWFPublishFolderLocationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetDWFPublishPreserveFolderHierarchyCompletedEventHandler(ByVal sender As Object, ByVal e As GetDWFPublishPreserveFolderHierarchyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDWFPublishPreserveFolderHierarchyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetDWFPublishPreserveFolderHierarchyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetEnforceWorkingFolderCompletedEventHandler(ByVal sender As Object, ByVal e As GetEnforceWorkingFolderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEnforceWorkingFolderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetEnforceWorkingFolderCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetRequiredWorkingFolderLocationCompletedEventHandler(ByVal sender As Object, ByVal e As GetRequiredWorkingFolderLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRequiredWorkingFolderLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetRequiredWorkingFolderLocationCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetWorkspaceSyncFileLimitCompletedEventHandler(ByVal sender As Object, ByVal e As GetWorkspaceSyncFileLimitCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWorkspaceSyncFileLimitCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UInteger
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UInteger)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetWorkspaceSyncFileLimitCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetBulkFileThresholdCompletedEventHandler(ByVal sender As Object, ByVal e As GetBulkFileThresholdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBulkFileThresholdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BlkThres
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BlkThres)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetBulkFileThresholdCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetBreakDesignVisualizationLinkCommandListCompletedEventHandler(ByVal sender As Object, ByVal e As GetBreakDesignVisualizationLinkCommandListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBreakDesignVisualizationLinkCommandListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BreakDesignVisualizationLinkCommandList
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BreakDesignVisualizationLinkCommandList)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetBreakDesignVisualizationLinkCommandListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetBlockExplorerDesignFileCheckinCompletedEventHandler(ByVal sender As Object, ByVal e As GetBlockExplorerDesignFileCheckinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBlockExplorerDesignFileCheckinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetBlockExplorerDesignFileCheckinCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetRestrictMoveOnRevisionCompletedEventHandler(ByVal sender As Object, ByVal e As GetRestrictMoveOnRevisionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRestrictMoveOnRevisionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetRestrictMoveOnRevisionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileAssociationsByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileAssociationsByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileAssociationsByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileAssocArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileAssocArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestFileAssociationsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestFileAssociationsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestFileAssociationsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileAssocArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileAssocArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetRevisionFileAssociationsByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetRevisionFileAssociationsByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRevisionFileAssociationsByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileAssocArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileAssocArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAssociatedFilePathsByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAssociatedFilePathsByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAssociatedFilePathsByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePathArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePathArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetRevisionAssociatedFilePathsByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetRevisionAssociatedFilePathsByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRevisionAssociatedFilePathsByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePathArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePathArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestAssociatedFilePathsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestAssociatedFilePathsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePathArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePathArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ValidateBOMByFileIdCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateBOMByFileIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateBOMByFileIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetComponentPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetComponentPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComponentPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CompPropInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CompPropInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddComponentCustomPropertyDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As AddComponentCustomPropertyDefinitionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddComponentCustomPropertyDefinitionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropDef
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropDef)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteComponentCustomPropertyDefinitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileVersionDeleteRestrictionsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelRestricEx()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelRestricEx())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileVersionsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFileVersionsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFileVersionsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelStatus()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelStatus())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileVersionsByMasterIdsUnconditionalCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFileVersionsByMasterIdsUnconditionalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelStatus()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelStatus())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetTrackFileStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackFileStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackFileStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetTrackFileStatusCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFilterConfigXmlCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilterConfigXmlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilterConfigXmlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileVersionsCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFileVersionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFileVersionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelStatus()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelStatus())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileVersionsUnconditionalCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFileVersionsUnconditionalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFileVersionsUnconditionalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelStatus()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelStatus())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetFileStatusByMasterIdCompletedEventHandler(ByVal sender As Object, ByVal e As SetFileStatusByMasterIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetFileStatusByMasterIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetFileStatusByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As SetFileStatusByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetFileStatusByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileStatusSetRestrictionsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileStatusSetRestrictionsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DocRestricArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DocRestricArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileVersionDeleteRestrictionsByFileIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileVersionDeleteRestrictionsByFileIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelRestricEx()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelRestricEx())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddFileNamingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As AddFileNamingSchemeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFileNamingSchemeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileNmngSchm
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileNmngSchm)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdateFileNamingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileNamingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetDefaultFileNamingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAllFileNamingSchemesCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllFileNamingSchemesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllFileNamingSchemesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileNmngSchm()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileNmngSchm())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ReserveFileNamingDescriptionsCompletedEventHandler(ByVal sender As Object, ByVal e As ReserveFileNamingDescriptionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReserveFileNamingDescriptionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileNmngDescr()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileNmngDescr())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub RollbackFileNamingDescriptionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAllBasicSearchPropertyDefinitionIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllBasicSearchPropertyDefinitionIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddDesignVisualizationFileAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetDesignVisualizationAttachmentStatusByIdCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDesignVisualizationAttachmentsByFileMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileAssocArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileAssocArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GenerateFileNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateFileNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateFileNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GenerateFileNumbersCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateFileNumbersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateFileNumbersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddNumberingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As AddNumberingSchemeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNumberingSchemeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NumSchm
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NumSchm)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdateNumberingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateNumberingSchemeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateNumberingSchemeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NumSchm
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NumSchm)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteNumberingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteNumberingSchemeUnconditionalCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ActivateNumberingSchemesCompletedEventHandler(ByVal sender As Object, ByVal e As ActivateNumberingSchemesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActivateNumberingSchemesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NumSchm()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NumSchm())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeactivateNumberingSchemesCompletedEventHandler(ByVal sender As Object, ByVal e As DeactivateNumberingSchemesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeactivateNumberingSchemesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NumSchm()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NumSchm())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetDefaultNumberingSchemeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetNumberingSchemesByTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetNumberingSchemesByTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNumberingSchemesByTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As NumSchm()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),NumSchm())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetContentSourcesCompletedEventHandler(ByVal sender As Object, ByVal e As GetContentSourcesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContentSourcesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CtntSrc()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CtntSrc())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetContentSourceIdsByFileIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetContentSourceIdsByFileIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContentSourceIdsByFileIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderRootCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderRootCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderRootCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderByPathCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderByPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderByPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFoldersByPathsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFoldersByPathsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFoldersByPathsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFoldersByPathsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFoldersByPathsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFoldersByPathsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFoldersByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFoldersByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFoldersByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFoldersByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFoldersByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFoldersByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFoldersByParentIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFoldersByParentIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFoldersByParentIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFoldersByParentIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFoldersByParentIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFoldersByParentIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FolderArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FolderArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFoldersByFileMasterIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFoldersByFileMasterIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFoldersByFileMasterIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFoldersByFileMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFoldersByFileMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFoldersByFileMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FolderArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FolderArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddFolderCompletedEventHandler(ByVal sender As Object, ByVal e As AddFolderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFolderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFolderHierarchyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFolderHierarchyUnconditionalCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderDeleteRestrictionsByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderDeleteRestrictionsByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderDeleteRestrictionsByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FolderDelRestric()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FolderDelRestric())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFolderDeleteRestrictionsByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderDeleteRestrictionsByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderDeleteRestrictionsByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FolderDelRestricArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FolderDelRestricArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdateFolderUNCPathCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFolderUNCPathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFolderUNCPathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdateFolderNameCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFolderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFolderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Folder
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Folder)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFilesByIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilesByIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilesByIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindLatestFilesByPathsCompletedEventHandler(ByVal sender As Object, ByVal e As FindLatestFilesByPathsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindLatestFilesByPathsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilesByPathsAndChecksumsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilesByPathsAndChecksumsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilesByPathsAndChecksumsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilesByFoldersNamesAndChecksumsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilesByFoldersNamesAndChecksumsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilesByFoldersNamesAndChecksumsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilePathsByNameAndChecksumCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilePathsByNameAndChecksumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilePathsByNameAndChecksumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePath()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePath())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilesByDatesPathsAndChecksumsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilesByDatesPathsAndChecksumsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilesByDatesPathsAndChecksumsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilesByFoldersDatesNamesAndChecksumsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilesByFoldersDatesNamesAndChecksumsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilesByFoldersDatesNamesAndChecksumsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilePathsByDateNameAndChecksumCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilePathsByDateNameAndChecksumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilePathsByDateNameAndChecksumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePath()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePath())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestFilePathsByNamesCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestFilePathsByNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestFilePathsByNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePathArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePathArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestDuplicateFilePathsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestDuplicateFilePathsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestDuplicateFilePathsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FilePath()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FilePath())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestFilesByFolderIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestFilesByFolderIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestFilesByFolderIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestFilesByFolderIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestFilesByFolderIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestFilesByFolderIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFilesByMasterIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilesByMasterIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilesByMasterIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFilesByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilesByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilesByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFilesByHistoryTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilesByHistoryTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilesByHistoryTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileByVersionCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileByVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileByVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFilesByVersionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFilesByVersionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFilesByVersionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestFileByMasterIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestFileByMasterIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestFileByMasterIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetLatestFilesByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetLatestFilesByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLatestFilesByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DownloadFileCompletedEventHandler(ByVal sender As Object, ByVal e As DownloadFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DownloadFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property fileContents() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DownloadFilePartCompletedEventHandler(ByVal sender As Object, ByVal e As DownloadFilePartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DownloadFilePartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UploadFilePartCompletedEventHandler(ByVal sender As Object, ByVal e As UploadFilePartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadFilePartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Guid
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Guid)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddFileCompletedEventHandler(ByVal sender As Object, ByVal e As AddFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddUploadedFileCompletedEventHandler(ByVal sender As Object, ByVal e As AddUploadedFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddUploadedFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub CheckinFileCompletedEventHandler(ByVal sender As Object, ByVal e As CheckinFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckinFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub CheckinUploadedFileCompletedEventHandler(ByVal sender As Object, ByVal e As CheckinUploadedFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckinUploadedFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub CheckoutFileCompletedEventHandler(ByVal sender As Object, ByVal e As CheckoutFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckoutFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property fileContents() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UndoCheckoutFileCompletedEventHandler(ByVal sender As Object, ByVal e As UndoCheckoutFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UndoCheckoutFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property fileContents() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileFromFolderCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFilesFromFolderCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFileFromFolderUnconditionalCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteFilesFromFolderUnconditionalCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileDeleteRestrictionsByMasterIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileDeleteRestrictionsByMasterIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileDeleteRestrictionsByMasterIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelRestric()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelRestric())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileDeleteRestrictionsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileDeleteRestrictionsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileDelRestricArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileDelRestricArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ShareFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub MoveFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileAssociationRestrictionsByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileAssociationRestrictionsByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileAssociationRestrictionsByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileAssocRestric()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileAssocRestric())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileRenameRestrictionsByMasterIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileRenameRestrictionsByMasterIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileRenameRestrictionsByMasterIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileRenameRestric()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileRenameRestric())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetFileRenameRestrictionsByMasterIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetFileRenameRestrictionsByMasterIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFileRenameRestrictionsByMasterIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileRenameRestricArray()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileRenameRestricArray())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFilesBySearchConditionsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFilesBySearchConditionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFilesBySearchConditionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As File()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),File())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property bookmark() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property searchstatus() As SrchStatus
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),SrchStatus)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetBOMByFileIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetBOMByFileIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBOMByFileIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BOM
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BOM)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetBOMByFileIdsCompletedEventHandler(ByVal sender As Object, ByVal e As GetBOMByFileIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBOMByFileIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BOM()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BOM())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAllPropertyDefinitionsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllPropertyDefinitionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllPropertyDefinitionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropDef()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropDef())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventHandler(ByVal sender As Object, ByVal e As FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindPropertyDefinitionsByPropertySetIdsPropIdsAndDataTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropDef()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropDef())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetPropertyDefinitionDisplayNameCompletedEventHandler(ByVal sender As Object, ByVal e As SetPropertyDefinitionDisplayNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPropertyDefinitionDisplayNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropDef
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropDef)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub SetPropertyDefinitionsDisplayNamesCompletedEventHandler(ByVal sender As Object, ByVal e As SetPropertyDefinitionsDisplayNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPropertyDefinitionsDisplayNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropDef()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropDef())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetPropertiesCompletedEventHandler(ByVal sender As Object, ByVal e As GetPropertiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPropertiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropInst()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropInst())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindFileFoldersBySearchConditionsCompletedEventHandler(ByVal sender As Object, ByVal e As FindFileFoldersBySearchConditionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindFileFoldersBySearchConditionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FileFolder()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FileFolder())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property bookmark() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property searchstatus() As SrchStatus
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),SrchStatus)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAllPropertyGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllPropertyGroupsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllPropertyGroupsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropGrp()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropGrp())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddPropertyGroupCompletedEventHandler(ByVal sender As Object, ByVal e As AddPropertyGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPropertyGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PropGrp
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PropGrp)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdatePropertyGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdatePropertyGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeletePropertyGroupCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeletePropertyGroupsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub VoidPropertyDefinitionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UnvoidPropertyDefinitionsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DisablePropertyDefinitionsForBasicSearchCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub EnablePropertyDefinitionsForBasicSearchCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAllLabelsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllLabelsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllLabelsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Label()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Label())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindLabelByNameCompletedEventHandler(ByVal sender As Object, ByVal e As FindLabelByNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindLabelByNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Label
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Label)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub FindLabelsByNamesCompletedEventHandler(ByVal sender As Object, ByVal e As FindLabelsByNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindLabelsByNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Label()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Label())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub AddLabelCompletedEventHandler(ByVal sender As Object, ByVal e As AddLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Label
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Label)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub DeleteLabelCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub UpdateLabelCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Label
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Label)
            End Get
        End Property
    End Class
End Namespace
